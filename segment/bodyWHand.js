function Wv(n,e){for(var t=0;t<e.length;t++){const r=e[t];if(typeof r!="string"&&!Array.isArray(r)){for(const s in r)if(s!=="default"&&!(s in n)){const o=Object.getOwnPropertyDescriptor(r,s);o&&Object.defineProperty(n,s,o.get?o:{enumerable:!0,get:()=>r[s]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))r(s);new MutationObserver(s=>{for(const o of s)if(o.type==="childList")for(const i of o.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&r(i)}).observe(document,{childList:!0,subtree:!0});function t(s){const o={};return s.integrity&&(o.integrity=s.integrity),s.referrerPolicy&&(o.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?o.credentials="include":s.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function r(s){if(s.ep)return;s.ep=!0;const o=t(s);fetch(s.href,o)}})();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gv=1e-7,jv=1e-4;class Hg{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class Ol{refCount(e){return Ft("refCount")}incRef(e){return Ft("incRef")}timerAvailable(){return!0}time(e){return Ft("time")}read(e){return Ft("read")}readSync(e){return Ft("readSync")}readToGPU(e,t){return Ft("readToGPU")}numDataIds(){return Ft("numDataIds")}disposeData(e,t){return Ft("disposeData")}write(e,t,r){return Ft("write")}move(e,t,r,s,o){return Ft("move")}createTensorFromGPUData(e,t,r){return Ft("createTensorFromGPUData")}memory(){return Ft("memory")}floatPrecision(){return Ft("floatPrecision")}epsilon(){return this.floatPrecision()===32?Gv:jv}dispose(){return Ft("dispose")}}function Ft(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kg(n){let e=n.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,ar(n,e,t)}function Hv(n,e){if(n.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${n.length}Second array length was ${e.length}`);let t=n.length,r=0;for(;t>0;)r=Math.random()*t|0,t--,ar(n,t,r),ar(e,t,r)}function Ti(n,e,t){return Math.max(n,Math.min(e,t))}function fu(n){return n%2===0?n:n+1}function ar(n,e,t){const r=n[e];n[e]=n[t],n[t]=r}function Xg(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function Kv(n,e){const t=Math.random();return e*t+(1-t)*n}function Xv(n,e){let t=0;for(let r=0;r<n.length;r++){const s=Number(n[r])-Number(e[r]);t+=s*s}return t}function A(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function xt(n,e,t=""){A(ze(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function Ts(n){A(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function Y(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function qv(n){return n.length===0}function qg(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==null&&e[t]!==null&&n[t]!==e[t])return!1;return!0}function ze(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function ps(n){return n%1===0}function Yv(n){if(Math.tanh!=null)return Math.tanh(n);if(n===1/0)return 1;if(n===-1/0)return-1;{const e=Math.exp(2*n);return(e-1)/(e+1)}}function Wa(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function Qv(n){const e=new Uint32Array(n);for(let t=0;t<n;++t)e[t]=t;return Kg(e),e}function hs(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function qc(n,e=s=>0,t,r){return new Promise((s,o)=>{let i=0;const a=()=>{if(n()){s();return}i++;const u=e(i);if(t!=null&&i>=t){o();return}r!=null?r(a,u):setTimeout(a,u)};a()})}function Yg(n,e){let t=1,r=-1;for(let o=0;o<n.length;++o)if(n[o]>=0)t*=n[o];else if(n[o]===-1){if(r!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${o}`);r=o}else if(n[o]<0)throw Error(`Shapes can not be < 0. Found ${n[o]} at dim ${o}`);if(r===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const s=n.slice();return s[r]=e/t,s}function tt(n,e){const t=e.length;return n=n==null?e.map((r,s)=>s):[].concat(n),A(n.every(r=>r>=-t&&r<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),A(n.every(r=>ps(r)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(r=>r<0?t+r:r)}function yr(n,e){const t=[],r=[],s=e!=null&&Array.isArray(e)&&e.length===0,o=e==null||s?null:tt(e,n).sort();let i=0;for(let a=0;a<n.length;++a){if(o!=null){if(o[i]===a&&n[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${n[a]}' is not 1`);(o[i]==null||o[i]>a)&&n[a]===1&&(t.push(n[a]),r.push(a)),o[i]<=a&&i++}n[a]!==1&&(t.push(n[a]),r.push(a))}return{newShape:t,keptDims:r}}function pr(n,e){return et(n,e)}function et(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function Qg(n,e){for(let t=0;t<n.length;t++){const r=n[t];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}function Zg(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function Jg(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function Ni(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function ey(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function cr(n){return typeof n=="string"||n instanceof String}function ty(n){return typeof n=="boolean"}function ny(n){return typeof n=="number"}function ao(n){return Array.isArray(n)?ao(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":ny(n)?"float32":cr(n)?"string":ty(n)?"bool":"float32"}function Ir(n){return!!(n&&n.constructor&&n.call&&n.apply)}function Ga(n,e){for(let t=e;t<n;++t)if(n%t===0)return t;return n}function ot(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let r=e-3;r>=0;--r)t[r]=t[r+1]*n[r+1];return t}function ry(n,e,t,r=!1){const s=new Array;if(e.length===1){const o=e[0]*(r?2:1);for(let i=0;i<o;i++)s[i]=t[n+i]}else{const o=e[0],i=e.slice(1),a=i.reduce((u,c)=>u*c)*(r?2:1);for(let u=0;u<o;u++)s[u]=ry(n+u*a,i,t,r)}return s}function ds(n,e,t=!1){if(n.length===0)return e[0];const r=n.reduce((s,o)=>s*o)*(t?2:1);if(r===0)return[];if(r!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return ry(0,n,e,t)}function Zv(n,e){if(Array.isArray(n))return n;if(e==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(e==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${e}`)}function Dl(n,e){const t=mr(n,e);for(let r=0;r<t.length;r++)t[r]=1;return t}function mr(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function Jv(n,e){const t=n.reduce((r,s)=>r*s,1);if(e==null||e==="float32")return ds(n,new Float32Array(t));if(e==="int32")return ds(n,new Int32Array(t));if(e==="bool")return ds(n,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function zt(n){n.forEach(e=>{A(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function ja(n,e,t){if(e===0)return 0;if(e===1)return n[0];let r=n[n.length-1];for(let s=0;s<n.length-1;++s)r+=t[s]*n[s];return r}function pu(n,e,t){if(e===0)return[];if(e===1)return[n];const r=new Array(e);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(n/t[s]),n-=r[s]*t[s];return r[r.length-1]=n,r}function kr(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mm="tfjsflags";class sy{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=ew,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(W().getBool("IS_TEST")||W().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,r){if(this.flagRegistry[e]={evaluationFn:t,setHook:r},this.urlFlags[e]!=null){const s=this.urlFlags[e];W().getBool("IS_TEST")||W().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${s}.`),this.set(e,s)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(kr(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);mm in e&&e[mm].split(",").forEach(r=>{const[s,o]=r.split(":");this.urlFlags[s]=nw(s,o)})}}function ew(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...r)=>(tw(e,r[0],r[1]),r.join("="))),e}function tw(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function nw(n,e){const t=e.toLowerCase();return t==="true"||t==="false"?t==="true":`${+t}`===t?+t:e}function W(){return Fl}let Fl=null;function rw(n){Fl=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Nc;function oy(){if(Nc==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");Nc=n}return Nc}function sw(){const n=oy();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function Pl(n,e){const t=sw();if(t.has(n))return t.get(n);{const r=e();return t.set(n,r),t.get(n)}}const Ll="Abs",Bl="Acos",Ml="Acosh",mu="Add",Vl="AddN",Ul="All",zl="Any",Wl="ArgMax",Gl="ArgMin",jl="Asin",Hl="Asinh",Kl="Atan",Xl="Atanh",ql="Atan2",Yl="AvgPool",iy="AvgPoolGrad",Ql="AvgPool3D",ay="AvgPool3DGrad",Zl="BatchMatMul",Jl="BatchToSpaceND",eh="Bincount",th="BitwiseAnd",ow="BroadcastTo",nh="BroadcastArgs",gu="Cast",rh="Ceil",sh="ClipByValue",oh="Complex",ih="ComplexAbs",ah="Concat",uh="Conv2D",ch="Conv2DBackpropFilter",lh="Conv2DBackpropInput",hh="Conv3D",uy="Conv3DBackpropFilterV2",dh="Conv3DBackpropInputV2",fh="Cos",ph="Cosh",mh="Cumprod",gh="Cumsum",yh="CropAndResize",xh="DenseBincount",bh="DepthToSpace",vh="DepthwiseConv2dNative",wh="DepthwiseConv2dNativeBackpropFilter",$h="DepthwiseConv2dNativeBackpropInput",Sh="Diag",Ch="Dilation2D",iw="Dilation2DBackpropInput",aw="Dilation2DBackpropFilter",Th="Draw",Nh="RealDiv",Eh="Einsum",Ih="Elu",cy="EluGrad",kh="Erf",Rh="Equal",_h="Exp",Ah="ExpandDims",Oh="Expm1",Dh="FFT",Fh="Fill",Ph="FlipLeftRight",Lh="Floor",Bh="FloorDiv",Mh="FusedBatchNorm",Vh="GatherV2",Uh="GatherNd",zh="Greater",Wh="GreaterEqual",yu="Identity",Gh="IFFT",jh="Imag",Hh="IsFinite",Kh="IsInf",Xh="IsNan",qh="LeakyRelu",Yh="Less",Qh="LessEqual",Zh="LinSpace",Jh="Log",ed="Log1p",td="LogicalAnd",nd="LogicalNot",rd="LogicalOr",uw="LogicalXor",cw="LogSoftmax",lw="LowerBound",sd="LRN",ly="LRNGrad",hw="MatrixBandPart",od="Max",id="Maximum",ad="MaxPool",hy="MaxPoolGrad",ud="MaxPool3D",dy="MaxPool3DGrad",cd="MaxPoolWithArgmax",ld="Mean",hd="Min",dd="Minimum",fd="MirrorPad",pd="Mod",md="Multinomial",gd="Multiply",yd="Neg",xd="NotEqual",bd="NonMaxSuppressionV3",vd="NonMaxSuppressionV4",wd="NonMaxSuppressionV5",$d="OnesLike",Sd="OneHot",Cd="Pack",Td="PadV2",dw="Pool",Nd="Pow",Ed="Prelu",Id="Prod",kd="RaggedGather",Rd="RaggedRange",_d="RaggedTensorToTensor",Ad="Range",Od="Real",Dd="Reciprocal",Fd="Relu",Pd="Reshape",Ld="ResizeNearestNeighbor",fy="ResizeNearestNeighborGrad",Bd="ResizeBilinear",py="ResizeBilinearGrad",Md="Relu6",Vd="Reverse",Ud="Round",zd="Rsqrt",Wd="ScatterNd",Gd="TensorScatterUpdate",jd="SearchSorted",Hd="Select",Kd="Selu",Xd="Slice",qd="Sin",Yd="Sinh",Qd="Sign",Zd="Sigmoid",Jd="Softplus",ef="Sqrt",tf="Sum",nf="SpaceToBatchND",rf="SplitV",sf="Softmax",of="SparseFillEmptyRows",af="SparseReshape",uf="SparseSegmentMean",cf="SparseSegmentSum",lf="SparseToDense",hf="SquaredDifference",my="Square",df="StaticRegexReplace",ff="StridedSlice",pf="StringNGrams",mf="StringSplit",gf="StringToHashBucketFast",yf="Sub",xf="Tan",bf="Tanh",xu="Tile",vf="TopK",wf="Transform",Ci="Transpose",$f="Unique",Sf="Unpack",Cf="UnsortedSegmentSum",fw="UpperBound",Tf="ZerosLike",Nf="Step",Ha="FromPixels",Ef="RotateWithOffset",Ka="_FusedMatMul",Xa="FusedConv2D",qa="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nn(...n){W().getBool("IS_TEST")||W().getBool("PROD")||console.warn(...n)}function pw(...n){W().getBool("IS_TEST")||W().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ys=Pl("kernelRegistry",()=>new Map),Ei=Pl("gradRegistry",()=>new Map);function Ii(n,e){const t=kf(n,e);return Ys.get(t)}function Yc(n){return Ei.get(n)}function Ya(n){const e=Ys.entries(),t=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[o,i]=s,[a]=o.split("_");a===n&&t.push(i)}return t}function If(n){const{kernelName:e,backendName:t}=n,r=kf(e,t);Ys.has(r)&&nn(`The kernel '${e}' for backend '${t}' is already registered`),Ys.set(r,n)}function mw(n){const{kernelName:e}=n;Ei.has(e)&&W().getBool("DEBUG")&&nn(`Overriding the gradient for '${e}'`),Ei.set(e,n)}function gw(n,e){const t=kf(n,e);if(!Ys.has(t))throw new Error(`The kernel '${n}' for backend '${e}' is not registered`);Ys.delete(t)}function yw(n){if(!Ei.has(n))throw new Error(`The gradient '${n}' for backend is not registered`);Ei.delete(n)}function xw(n,e){Ya(n).forEach(r=>{const s=Object.assign({},r,{backendName:e});If(s)})}function kf(n,e){return`${e}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gy(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var qt=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function bw(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function vw(n){if(n.__esModule)return n;var e=n.default;if(typeof e=="function"){var t=function r(){return this instanceof r?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(n).forEach(function(r){var s=Object.getOwnPropertyDescriptor(n,r);Object.defineProperty(t,r,s.get?s:{enumerable:!0,get:function(){return n[r]}})}),t}var yy=Ve,rn=null;try{rn=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Ve(n,e,t){this.low=n|0,this.high=e|0,this.unsigned=!!t}Ve.prototype.__isLong__;Object.defineProperty(Ve.prototype,"__isLong__",{value:!0});function Wt(n){return(n&&n.__isLong__)===!0}Ve.isLong=Wt;var gm={},ym={};function Ns(n,e){var t,r,s;return e?(n>>>=0,(s=0<=n&&n<256)&&(r=ym[n],r)?r:(t=Ue(n,(n|0)<0?-1:0,!0),s&&(ym[n]=t),t)):(n|=0,(s=-128<=n&&n<128)&&(r=gm[n],r)?r:(t=Ue(n,n<0?-1:0,!1),s&&(gm[n]=t),t))}Ve.fromInt=Ns;function sn(n,e){if(isNaN(n))return e?cs:on;if(e){if(n<0)return cs;if(n>=xy)return wy}else{if(n<=-bm)return Mt;if(n+1>=bm)return vy}return n<0?sn(-n,e).neg():Ue(n%Qs|0,n/Qs|0,e)}Ve.fromNumber=sn;function Ue(n,e,t){return new Ve(n,e,t)}Ve.fromBits=Ue;var Qa=Math.pow;function Rf(n,e,t){if(n.length===0)throw Error("empty string");if(n==="NaN"||n==="Infinity"||n==="+Infinity"||n==="-Infinity")return on;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var r;if((r=n.indexOf("-"))>0)throw Error("interior hyphen");if(r===0)return Rf(n.substring(1),e,t).neg();for(var s=sn(Qa(t,8)),o=on,i=0;i<n.length;i+=8){var a=Math.min(8,n.length-i),u=parseInt(n.substring(i,i+a),t);if(a<8){var c=sn(Qa(t,a));o=o.mul(c).add(sn(u))}else o=o.mul(s),o=o.add(sn(u))}return o.unsigned=e,o}Ve.fromString=Rf;function Dn(n,e){return typeof n=="number"?sn(n,e):typeof n=="string"?Rf(n,e):Ue(n.low,n.high,typeof e=="boolean"?e:n.unsigned)}Ve.fromValue=Dn;var xm=65536,ww=1<<24,Qs=xm*xm,xy=Qs*Qs,bm=xy/2,vm=Ns(ww),on=Ns(0);Ve.ZERO=on;var cs=Ns(0,!0);Ve.UZERO=cs;var Gs=Ns(1);Ve.ONE=Gs;var by=Ns(1,!0);Ve.UONE=by;var Qc=Ns(-1);Ve.NEG_ONE=Qc;var vy=Ue(-1,2147483647,!1);Ve.MAX_VALUE=vy;var wy=Ue(-1,-1,!0);Ve.MAX_UNSIGNED_VALUE=wy;var Mt=Ue(0,-2147483648,!1);Ve.MIN_VALUE=Mt;var ne=Ve.prototype;ne.toInt=function(){return this.unsigned?this.low>>>0:this.low};ne.toNumber=function(){return this.unsigned?(this.high>>>0)*Qs+(this.low>>>0):this.high*Qs+(this.low>>>0)};ne.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Mt)){var t=sn(e),r=this.div(t),s=r.mul(t).sub(this);return r.toString(e)+s.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var o=sn(Qa(e,6),this.unsigned),i=this,a="";;){var u=i.div(o),c=i.sub(u.mul(o)).toInt()>>>0,h=c.toString(e);if(i=u,i.isZero())return h+a;for(;h.length<6;)h="0"+h;a=""+h+a}};ne.getHighBits=function(){return this.high};ne.getHighBitsUnsigned=function(){return this.high>>>0};ne.getLowBits=function(){return this.low};ne.getLowBitsUnsigned=function(){return this.low>>>0};ne.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Mt)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return this.high!=0?t+33:t+1};ne.isZero=function(){return this.high===0&&this.low===0};ne.eqz=ne.isZero;ne.isNegative=function(){return!this.unsigned&&this.high<0};ne.isPositive=function(){return this.unsigned||this.high>=0};ne.isOdd=function(){return(this.low&1)===1};ne.isEven=function(){return(this.low&1)===0};ne.equals=function(e){return Wt(e)||(e=Dn(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};ne.eq=ne.equals;ne.notEquals=function(e){return!this.eq(e)};ne.neq=ne.notEquals;ne.ne=ne.notEquals;ne.lessThan=function(e){return this.comp(e)<0};ne.lt=ne.lessThan;ne.lessThanOrEqual=function(e){return this.comp(e)<=0};ne.lte=ne.lessThanOrEqual;ne.le=ne.lessThanOrEqual;ne.greaterThan=function(e){return this.comp(e)>0};ne.gt=ne.greaterThan;ne.greaterThanOrEqual=function(e){return this.comp(e)>=0};ne.gte=ne.greaterThanOrEqual;ne.ge=ne.greaterThanOrEqual;ne.compare=function(e){if(Wt(e)||(e=Dn(e)),this.eq(e))return 0;var t=this.isNegative(),r=e.isNegative();return t&&!r?-1:!t&&r?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};ne.comp=ne.compare;ne.negate=function(){return!this.unsigned&&this.eq(Mt)?Mt:this.not().add(Gs)};ne.neg=ne.negate;ne.add=function(e){Wt(e)||(e=Dn(e));var t=this.high>>>16,r=this.high&65535,s=this.low>>>16,o=this.low&65535,i=e.high>>>16,a=e.high&65535,u=e.low>>>16,c=e.low&65535,h=0,d=0,f=0,g=0;return g+=o+c,f+=g>>>16,g&=65535,f+=s+u,d+=f>>>16,f&=65535,d+=r+a,h+=d>>>16,d&=65535,h+=t+i,h&=65535,Ue(f<<16|g,h<<16|d,this.unsigned)};ne.subtract=function(e){return Wt(e)||(e=Dn(e)),this.add(e.neg())};ne.sub=ne.subtract;ne.multiply=function(e){if(this.isZero())return on;if(Wt(e)||(e=Dn(e)),rn){var t=rn.mul(this.low,this.high,e.low,e.high);return Ue(t,rn.get_high(),this.unsigned)}if(e.isZero())return on;if(this.eq(Mt))return e.isOdd()?Mt:on;if(e.eq(Mt))return this.isOdd()?Mt:on;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(vm)&&e.lt(vm))return sn(this.toNumber()*e.toNumber(),this.unsigned);var r=this.high>>>16,s=this.high&65535,o=this.low>>>16,i=this.low&65535,a=e.high>>>16,u=e.high&65535,c=e.low>>>16,h=e.low&65535,d=0,f=0,g=0,x=0;return x+=i*h,g+=x>>>16,x&=65535,g+=o*h,f+=g>>>16,g&=65535,g+=i*c,f+=g>>>16,g&=65535,f+=s*h,d+=f>>>16,f&=65535,f+=o*c,d+=f>>>16,f&=65535,f+=i*u,d+=f>>>16,f&=65535,d+=r*h+s*c+o*u+i*a,d&=65535,Ue(g<<16|x,d<<16|f,this.unsigned)};ne.mul=ne.multiply;ne.divide=function(e){if(Wt(e)||(e=Dn(e)),e.isZero())throw Error("division by zero");if(rn){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var t=(this.unsigned?rn.div_u:rn.div_s)(this.low,this.high,e.low,e.high);return Ue(t,rn.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?cs:on;var r,s,o;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return cs;if(e.gt(this.shru(1)))return by;o=cs}else{if(this.eq(Mt)){if(e.eq(Gs)||e.eq(Qc))return Mt;if(e.eq(Mt))return Gs;var i=this.shr(1);return r=i.div(e).shl(1),r.eq(on)?e.isNegative()?Gs:Qc:(s=this.sub(e.mul(r)),o=r.add(s.div(e)),o)}else if(e.eq(Mt))return this.unsigned?cs:on;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();o=on}for(s=this;s.gte(e);){r=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(r)/Math.LN2),u=a<=48?1:Qa(2,a-48),c=sn(r),h=c.mul(e);h.isNegative()||h.gt(s);)r-=u,c=sn(r,this.unsigned),h=c.mul(e);c.isZero()&&(c=Gs),o=o.add(c),s=s.sub(h)}return o};ne.div=ne.divide;ne.modulo=function(e){if(Wt(e)||(e=Dn(e)),rn){var t=(this.unsigned?rn.rem_u:rn.rem_s)(this.low,this.high,e.low,e.high);return Ue(t,rn.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};ne.mod=ne.modulo;ne.rem=ne.modulo;ne.not=function(){return Ue(~this.low,~this.high,this.unsigned)};ne.and=function(e){return Wt(e)||(e=Dn(e)),Ue(this.low&e.low,this.high&e.high,this.unsigned)};ne.or=function(e){return Wt(e)||(e=Dn(e)),Ue(this.low|e.low,this.high|e.high,this.unsigned)};ne.xor=function(e){return Wt(e)||(e=Dn(e)),Ue(this.low^e.low,this.high^e.high,this.unsigned)};ne.shiftLeft=function(e){return Wt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Ue(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):Ue(0,this.low<<e-32,this.unsigned)};ne.shl=ne.shiftLeft;ne.shiftRight=function(e){return Wt(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?Ue(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):Ue(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};ne.shr=ne.shiftRight;ne.shiftRightUnsigned=function(e){if(Wt(e)&&(e=e.toInt()),e&=63,e===0)return this;var t=this.high;if(e<32){var r=this.low;return Ue(r>>>e|t<<32-e,t>>>e,this.unsigned)}else return e===32?Ue(t,0,this.unsigned):Ue(t>>>e-32,0,this.unsigned)};ne.shru=ne.shiftRightUnsigned;ne.shr_u=ne.shiftRightUnsigned;ne.toSigned=function(){return this.unsigned?Ue(this.low,this.high,!1):this};ne.toUnsigned=function(){return this.unsigned?this:Ue(this.low,this.high,!0)};ne.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};ne.toBytesLE=function(){var e=this.high,t=this.low;return[t&255,t>>>8&255,t>>>16&255,t>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};ne.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,t>>>24,t>>>16&255,t>>>8&255,t&255]};Ve.fromBytes=function(e,t,r){return r?Ve.fromBytesLE(e,t):Ve.fromBytesBE(e,t)};Ve.fromBytesLE=function(e,t){return new Ve(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)};Ve.fromBytesBE=function(e,t){return new Ve(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};const $y=bw(yy),$w=Wv({__proto__:null,default:$y},[yy]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const os=$y||$w;function Ki(n){return os.fromString(n,!0,16)}const Sy=Ki("c3a5c85c97cb3127"),ss=Ki("b492b66fbe98f273"),St=Ki("9ae16a3b2f90404f");function Zc(n){return n.xor(n.shru(47))}function Cy(n,e,t){const r=n.slice(e,e+t);return os.fromBytes(Array.from(r),!0,!0)}function Le(n,e){return Cy(n,e,8)}function wm(n,e){return Cy(n,e,4)}function rt(n,e){return e===0?n:n.shru(e).or(n.shl(64-e))}function Er(n,e,t=Ki("9ddfea08eb382d69")){let r=n.xor(e).mul(t);r=r.xor(r.shru(47));let s=e.xor(r).mul(t);return s=s.xor(s.shru(47)),s=s.mul(t),s}function Sw(n,e,t,r,s,o){s=s.add(n),o=rt(o.add(s).add(r),21);const i=s;return s=s.add(e),s=s.add(t),o=o.add(rt(s,44)),[s.add(r),o.add(i)]}function va(n,e,t,r){return Sw(Le(n,e),Le(n,e+8),Le(n,e+16),Le(n,e+24),t,r)}function Cw(n,e=n.length){if(e>=8){const t=St.add(e*2),r=Le(n,0).add(St),s=Le(n,e-8),o=rt(s,37).mul(t).add(r),i=rt(r,25).add(s).mul(t);return Er(o,i,t)}if(e>=4){const t=St.add(e*2),r=wm(n,0);return Er(r.shl(3).add(e),wm(n,e-4),t)}if(e>0){const t=n[0],r=n[e>>1],s=n[e-1],o=t+(r<<8),i=e+(s<<2);return Zc(St.mul(o).xor(Sy.mul(i))).mul(St)}return St}function Tw(n,e=n.length){const t=St.add(e*2),r=Le(n,0).mul(ss),s=Le(n,8),o=Le(n,e-8).mul(t),i=Le(n,e-16).mul(St);return Er(rt(r.add(s),43).add(rt(o,30)).add(i),r.add(rt(s.add(St),18)).add(o),t)}function Nw(n,e=n.length){const t=St.add(e*2),r=Le(n,0).mul(St),s=Le(n,8),o=Le(n,e-8).mul(t),i=Le(n,e-16).mul(St),a=rt(r.add(s),43).add(rt(o,30)).add(i),u=Er(a,r.add(rt(s.add(St),18)).add(o),t),c=Le(n,16).mul(t),h=Le(n,24),d=a.add(Le(n,e-32)).mul(t),f=u.add(Le(n,e-24)).mul(t);return Er(rt(c.add(h),43).add(rt(d,30)).add(f),c.add(rt(h.add(r),18)).add(d),t)}function Ty(n,e=n.length){const t=os.fromNumber(81,!0);if(e<=32)return e<=16?Cw(n,e):Tw(n,e);if(e<=64)return Nw(n,e);let r=t,s=t.mul(ss).add(113),o=Zc(s.mul(St).add(113)).mul(St),i=[os.UZERO,os.UZERO],a=[os.UZERO,os.UZERO];r=r.mul(St).add(Le(n,0));let u=0;const c=(e-1>>6)*64,h=c+(e-1&63)-63;do r=rt(r.add(s).add(i[0]).add(Le(n,u+8)),37).mul(ss),s=rt(s.add(i[1]).add(Le(n,u+48)),42).mul(ss),r=r.xor(a[1]),s=s.add(i[0]).add(Le(n,u+40)),o=rt(o.add(a[0]),33).mul(ss),i=va(n,u,i[1].mul(ss),r.add(a[0])),a=va(n,u+32,o.add(a[1]),s.add(Le(n,u+16))),[o,r]=[r,o],u+=64;while(u!==c);const d=ss.add(o.and(255).shl(1));return u=h,a[0]=a[0].add(e-1&63),i[0]=i[0].add(a[0]),a[0]=a[0].add(i[0]),r=rt(r.add(s).add(i[0]).add(Le(n,u+8)),37).mul(d),s=rt(s.add(i[1]).add(Le(n,u+48)),42).mul(d),r=r.xor(a[1].mul(9)),s=s.add(i[0].mul(9).add(Le(n,u+40))),o=rt(o.add(a[0]),33).mul(d),i=va(n,u,i[1].mul(d),r.add(a[0])),a=va(n,u+32,o.add(a[1]),s.add(Le(n,u+16))),[o,r]=[r,o],Er(Er(i[0],a[0],d).add(Zc(s).mul(Sy)).add(o),Er(i[1],a[1],d).add(r),d)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Es(n,e){return e==="string"?lr(n):Xi([n],e)}function Ew(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function Xi(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=Un(n)),W().getBool("DEBUG")&&Qg(n,e),Ew(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let r=0;r<t.length;++r)Math.round(n[r])!==0&&(t[r]=1);return t}else throw new Error(`Unknown data type ${e}`)}function tn(){return W().platform.now()}function Iw(n,e){return W().platform.fetch(n,e)}function lr(n,e="utf-8"){return e=e||"utf-8",W().platform.encode(n,e)}function ms(n,e="utf-8"){return e=e||"utf-8",W().platform.decode(n,e)}function st(n){return W().platform.isTypedArray!=null?W().platform.isTypedArray(n):gy(n)}function Un(n,e=[],t=!1){if(e==null&&(e=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||kr(n)||n==null||st(n)&&t)e.push(n);else if(Array.isArray(n)||st(n))for(let r=0;r<n.length;++r)Un(n[r],e,t);else{let r=-1;for(const s of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(s)&&(r=Math.max(r,Number(s)));for(let s=0;s<=r;s++)Un(n[s],e,t)}return e}const kw=Object.freeze(Object.defineProperty({__proto__:null,arraysEqual:ze,arraysEqualWithNull:qg,assert:A,assertNonNegativeIntegerDimensions:zt,assertNonNull:Ts,assertShapesMatch:xt,bytesFromStringArray:ey,bytesPerElement:Ni,checkConversionForErrors:Qg,clamp:Ti,computeStrides:ot,convertBackendValuesAndArrayBuffer:Zv,createScalarValue:Es,createShuffledIndices:Qv,decodeString:ms,distSquared:Xv,encodeString:lr,fetch:Iw,fingerPrint64:Ty,flatten:Un,getArrayFromDType:et,getTypedArrayFromDType:pr,hasEncodingLoss:Jg,hexToLong:Ki,indexToLoc:pu,inferDtype:ao,inferFromImplicitShape:Yg,isBoolean:ty,isFunction:Ir,isInt:ps,isNumber:ny,isPromise:kr,isScalarShape:qv,isString:cr,isTypedArray:st,isValidDtype:Zg,locToIndex:ja,makeOnesTypedArray:Dl,makeZerosNestedTypedArray:Jv,makeZerosTypedArray:mr,nearestDivisor:Ga,nearestLargerEven:fu,now:tn,parseAxisParam:tt,randUniform:Kv,repeatedTry:qc,rightPad:hs,shuffle:Kg,shuffleCombo:Hv,sizeFromShape:Y,sizeToSquarishShape:Wa,squeezeShape:yr,sum:Xg,swap:ar,tanh:Yv,toNestedArray:ds,toTypedArray:Xi},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rw{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new Aw)}profileKernel(e,t,r){let s;const o=()=>{s=r()};let i;const a=tn();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(o);else{o();for(const c of s)c.dataSync();i=Promise.resolve({kernelMs:tn()-a})}if(W().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let c=0;c<s.length;c++){const h=s[c];h.data().then(d=>{_w(d,h.dtype,e)})}return{kernelName:e,outputs:s,inputs:t,timeMs:i.then(c=>c.kernelMs),extraInfo:i.then(c=>c.getExtraProfileInfo!=null?c.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:r,timeMs:s,inputs:o,extraInfo:i}=e;r.forEach(a=>{Promise.all([a.data(),s,i]).then(u=>{this.logger.logKernelProfile(t,a,u[0],u[1],o,u[2])})})}}function _w(n,e,t){if(e!=="float32")return!1;for(let r=0;r<n.length;r++){const s=n[r];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${t}'`),!0}return!1}class Aw{logKernelProfile(e,t,r,s,o,i){const a=typeof s=="number"?hs(`${s}ms`,9):s.error,u=hs(e,25),c=t.rank,h=t.size,d=hs(t.shape.toString(),14);let f="";for(const g in o){const x=o[g];if(x!=null){const w=x.shape||t.shape,b=w.length;f+=`${g}: ${b}D ${b>0?w:""} `}}console.log(`%c${u}	%c${a}	%c${c}D ${d}	%c${h}	%c${f}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ow(n,e,t){const r={},s={};for(let u=0;u<e.length;u++)r[e[u].id]=!0;for(let u=0;u<n.length;u++){const c=n[u],h=c.inputs;for(const d in h){const f=h[d];let g=!1;for(let x=0;x<e.length;x++)if(r[f.id]){c.outputs.forEach(w=>r[w.id]=!0),g=!0,s[c.id]=!0;break}if(g)break}}const o={};o[t.id]=!0;const i={};for(let u=n.length-1;u>=0;u--){const c=n[u],h=c.inputs;for(let d=0;d<c.outputs.length;d++)if(o[c.outputs[d].id]){for(const f in h)o[h[f].id]=!0,i[c.id]=!0;break}}const a=[];for(let u=0;u<n.length;u++){const c=n[u];if(s[c.id]&&i[c.id]){const h={};for(const f in c.inputs){const g=c.inputs[f];r[g.id]&&(h[f]=g)}const d=Object.assign({},c);d.inputs=h,d.outputs=c.outputs,a.push(d)}}return a}function Dw(n,e,t,r){for(let s=e.length-1;s>=0;s--){const o=e[s],i=[];if(o.outputs.forEach(u=>{const c=n[u.id];c!=null?i.push(c):i.push(null)}),o.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const a=o.gradient(i);for(const u in o.inputs){if(!(u in a))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(a)}.`);const c=t(()=>a[u]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${c.dtype}'`);const h=o.inputs[u];if(!ze(c.shape,h.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${u}' has shape '${c.shape}', which does not match the shape of the input '${h.shape}'`);if(n[h.id]==null)n[h.id]=c;else{const d=n[h.id];n[h.id]=r(d,c),d.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $m=20,mi=3,Ec=7;function Fw(n,e,t,r){const s=ot(e),o=Pw(n,e,t,s),i=e.length,a=Ma(n,e,t,s,o),u=["Tensor"];return r&&(u.push(`  dtype: ${t}`),u.push(`  rank: ${i}`),u.push(`  shape: [${e}]`),u.push("  values:")),u.push(a.map(c=>"    "+c).join(`
`)),u.join(`
`)}function Pw(n,e,t,r){const s=Y(e),o=r[r.length-1],i=new Array(o).fill(0),a=e.length,u=t==="complex64"?bi(n):n;if(a>1)for(let c=0;c<s/o;c++){const h=c*o;for(let d=0;d<o;d++)i[d]=Math.max(i[d],xi(u[h+d],0,t).length)}return i}function xi(n,e,t){let r;return Array.isArray(n)?r=`${parseFloat(n[0].toFixed(Ec))} + ${parseFloat(n[1].toFixed(Ec))}j`:cr(n)?r=`'${n}'`:t==="bool"?r=Ny(n):r=parseFloat(n.toFixed(Ec)).toString(),hs(r,e)}function Ny(n){return n===0?"false":"true"}function Ma(n,e,t,r,s,o=!0){const i=t==="complex64"?2:1,a=e[0],u=e.length;if(u===0){if(t==="complex64"){const w=bi(n);return[xi(w[0],0,t)]}return t==="bool"?[Ny(n[0])]:[n[0].toString()]}if(u===1){if(a>$m){const b=mi*i;let $=Array.from(n.slice(0,b)),N=Array.from(n.slice((a-mi)*i,a*i));return t==="complex64"&&($=bi($),N=bi(N)),["["+$.map((k,I)=>xi(k,s[I],t)).join(", ")+", ..., "+N.map((k,I)=>xi(k,s[a-mi+I],t)).join(", ")+"]"]}return["["+(t==="complex64"?bi(n):Array.from(n)).map((b,$)=>xi(b,s[$],t)).join(", ")+"]"]}const c=e.slice(1),h=r.slice(1),d=r[0]*i,f=[];if(a>$m){for(let w=0;w<mi;w++){const b=w*d,$=b+d;f.push(...Ma(n.slice(b,$),c,t,h,s,!1))}f.push("...");for(let w=a-mi;w<a;w++){const b=w*d,$=b+d;f.push(...Ma(n.slice(b,$),c,t,h,s,w===a-1))}}else for(let w=0;w<a;w++){const b=w*d,$=b+d;f.push(...Ma(n.slice(b,$),c,t,h,s,w===a-1))}const g=u===2?",":"";f[0]="["+(a>0?f[0]+g:"");for(let w=1;w<f.length-1;w++)f[w]=" "+f[w]+g;let x=`,
`;for(let w=2;w<u;w++)x+=`
`;return f[f.length-1]=" "+f[f.length-1]+"]"+(o?"":x),f}function bi(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gs{constructor(e,t,r){if(this.dtype=t,this.shape=e.slice(),this.size=Y(e),r!=null){const s=r.length;A(s===this.size,()=>`Length of values '${s}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=r||et(t,this.size),this.strides=ot(e)}set(e,...t){t.length===0&&(t=[0]),A(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const r=this.locToIndex(t);this.values[r]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const s of e){if(s<0||s>=this.shape[t]){const o=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(o)}t++}let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=this.strides[s]*e[s];return this.values[r]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let r=0;r<e.length-1;++r)t+=this.strides[r]*e[r];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let r=0;r<t.length-1;++r)t[r]=Math.floor(e/this.strides[r]),e-=t[r]*this.strides[r];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Cn().makeTensor(this.values,this.shape,this.dtype)}}let Cn=null,zs=null;function Lw(n){Cn=n}function Bw(n){zs=n}class Te{constructor(e,t,r,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Y(e),this.strides=ot(e),this.dataId=r,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return zs.buffer(this.shape,this.dtype,e)}bufferSync(){return zs.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return ds(this.shape,e,this.dtype==="complex64")}arraySync(){return ds(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=Cn().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(r=>ms(r))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Cn().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Cn().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>ms(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Cn().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Cn().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return zs.print(this,e)}clone(){return this.throwIfDisposed(),zs.clone(this)}toString(e=!1){const t=this.dataSync();return Fw(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),zs.cast(this,e)}variable(e=!0,t,r){return this.throwIfDisposed(),Cn().makeVariable(this,e,t,r)}}Object.defineProperty(Te,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function Ey(){return Pl("Tensor",()=>Te)}Ey();class ki extends Te{constructor(e,t,r,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=r}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!ze(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Cn().disposeTensor(this),this.dataId=e.dataId,Cn().incRef(this,null)}dispose(){Cn().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(ki,Symbol.hasInstance,{value:n=>n instanceof Te&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Jc;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(Jc||(Jc={}));var el;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(el||(el={}));var tl;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(tl||(tl={}));var nl;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(nl||(nl={}));var rl;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(rl||(rl={}));const Mw={float32:nl,int32:el,bool:tl,complex64:rl};function An(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return Mw[n][e]}function bu(n){return An(n,"int32")}function Iy(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function ky(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function He(n,e){if(n.dtype===e.dtype)return[n,e];const t=An(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function Ry(n,e){A(n.dtype===e.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${e.dtype}) input must match`)}function Vw(n,e){return e.some(t=>t.id===n.id)}function _f(n){const e=[];return _y(n,e,new Set),e}function _y(n,e,t){if(n==null)return;if(n instanceof Te){e.push(n);return}if(!Uw(n))return;const r=n;for(const s in r){const o=r[s];t.has(o)||(t.add(o),_y(o,e,t))}}function Uw(n){return Array.isArray(n)||typeof n=="object"}const zw=Object.freeze(Object.defineProperty({__proto__:null,assertTypesMatch:Ry,getTensorsInContainer:_f,isTensorInList:Vw,makeTypesMatch:He},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ic(n){return n.kernelName!=null}class Sm{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Zs{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Sm}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const r=e[t];if(await this.initializeBackend(r).success){await this.setBackend(r);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,r=1){return e in this.registryFactory?(nn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:r},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:r}=this.initializeBackend(e);if(!(r?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Rw(this.backendInstance),!0}setupRegisteredKernels(){Ya(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Ya(e).forEach(r=>{r.disposeFunc!=null&&r.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const r=t.factory();if(r&&!(r instanceof Ol)&&typeof r.then=="function"){const s=++this.pendingBackendInitId,o=r.then(i=>s<this.pendingBackendInitId?!1:(this.registry[e]=i,this.pendingBackendInit=null,!0)).catch(i=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,nn(`Initialization of backend ${e} failed`),nn(i.stack||i.message)),!1));return this.pendingBackendInit=o,{success:o,asyncInit:!0}}else return this.registry[e]=r,{success:!0,asyncInit:!1}}catch(r){return nn(`Initialization of backend ${e} failed`),nn(r.stack||r.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const r=e[t],{success:s,asyncInit:o}=this.initializeBackend(r);if(o||s)return{name:r,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const r=this.state.tensorInfo.get(t),s=r.backend,o=this.readSync(t),i=s.refCount(t);s.disposeData(t,!0),r.backend=e,e.move(t,o,r.shape,r.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let r=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}let s;return this.scopedRun(()=>this.startScope(r),()=>this.endScope(s),()=>(s=t(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(e,t,r){e();try{const s=r();return t(),s}catch(s){throw t(),s}}nextTensorId(){return Zs.nextTensorId++}nextVariableId(){return Zs.nextVariableId++}clone(e){const t=L.runKernel(yu,{x:e}),r={x:e},s=i=>({x:()=>{const a="float32",u={x:i},c={dtype:a};return L.runKernel(gu,u,c)}}),o=[];return this.addTapeNode(this.state.activeScope.name,r,[t],s,o,{}),t}runKernel(e,t,r){if(this.backendName==null&&this.backend,!(Ii(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:r})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,r){const s=this.backend.numDataIds();let o=0;r.forEach(u=>{o+=u.dtype==="complex64"?3:1});const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=s-t-o-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,r=[];const s=this.isTapeOn(),o=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let u;const c=Ic(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Ic(e)){const{kernelName:x,inputs:w,attrs:b}=e;this.backendName==null&&this.backend;const $=Ii(x,this.backendName);A($!=null,()=>`Cannot find registered kernel '${x}' for backend '${this.backendName}'`),a=()=>{const N=this.backend.numDataIds();u=$.kernelFunc({inputs:w,attrs:b,backend:this.backend});const k=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(x,N,k);const I=k.map(O=>O.rank!=null?O:this.makeTensorFromTensorInfo(O));if(s){const O=this.getTensorsForGradient(x,w,I);r=this.saveTensorsForBackwardMode(O)}return I}}else{const{forwardFunc:x}=e,w=b=>{s&&(r=b.map($=>this.keep(this.clone($))))};a=()=>{const b=this.backend.numDataIds();u=this.tidy(()=>x(this.backend,w));const $=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,b,$),$}}const{inputs:h,attrs:d}=e,f=Ic(e)?null:e.backwardsFunc;let g;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=a():(g=this.profiler.profileKernel(c,h,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(g),t=g.outputs)}),s&&this.addTapeNode(c,h,t,f,r,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(h).map(x=>h[x]!=null?h[x].shape:null),outputShapes:t.map(x=>x.shape),kernelTimeMs:g.timeMs,extraInfo:g.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(r=>this.keep(this.clone(r)))}getTensorsForGradient(e,t,r){const s=Yc(e);if(s!=null){const o=s.inputsToSave||[],i=s.outputsToSave||[];let a;s.saveAllInputs?(A(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(t).map(c=>t[c])):a=o.map(c=>t[c]);const u=r.filter((c,h)=>i[h]);return a.concat(u)}return[]}makeTensor(e,t,r,s){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");r=r||"float32",s=s||this.backend;let o=e;r==="string"&&cr(e[0])&&(o=e.map(u=>lr(u)));const i=s.write(o,t,r),a=new Te(t,r,i,this.nextTensorId());if(this.trackTensor(a,s),r==="string"){const u=this.state.tensorInfo.get(i),c=ey(o);this.state.numBytes+=c-u.bytes,u.bytes=c}return a}makeTensorFromDataId(e,t,r,s){r=r||"float32";const o={dataId:e,shape:t,dtype:r};return this.makeTensorFromTensorInfo(o,s)}makeTensorFromTensorInfo(e,t){const{dataId:r,shape:s,dtype:o}=e,i=new Te(s,o,r,this.nextTensorId());return this.trackTensor(i,t),i}makeVariable(e,t=!0,r,s){r=r||this.nextVariableId().toString(),s!=null&&s!==e.dtype&&(e=e.cast(s));const o=new ki(e,t,r,this.nextTensorId());if(this.state.registeredVariables[o.name]!=null)throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let r=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(r=e.size*Ni(e.dtype)),this.state.numBytes+=r,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:r})),e instanceof ki||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const r=e.size*Ni(e.dtype);this.state.numBytes-=r}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,r=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-r;for(const s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,r,s,o,i){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:r,saved:o},u=Yc(e);u!=null&&(s=u.gradFunc),s!=null&&(a.gradient=c=>(c=c.map((h,d)=>{if(h==null){const f=r[d],g=mr(f.size,f.dtype);return this.makeTensor(g,f.shape,f.dtype)}return h}),s(c.length>1?c:c[0],o,i))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=_f(e),r=new Set(t.map(o=>o.id));for(let o=0;o<this.state.activeScope.track.length;o++){const i=this.state.activeScope.track[o];!i.kept&&!r.has(i.id)&&i.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(o=>{!o.kept&&o.scopeId===s.id&&this.track(o)})}gradients(e,t,r,s=!1){if(A(t.length>0,()=>"gradients() received an empty list of xs."),r!=null&&r.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));A(o instanceof Te,()=>"The result y returned by f() must be a tensor.");const i=Ow(this.state.activeTape,t,o);if(!s&&i.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const a={};a[o.id]=r??Ww(o.shape),Dw(a,i,c=>this.tidy(c),Gw);const u=t.map(c=>a[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(const h of c.saved)h.dispose()}),this.state.activeTape=null),{value:o,grads:u}})}customGrad(e){return A(Ir(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{A(t.every(a=>a instanceof Te),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let r;const s={};t.forEach((a,u)=>{s[u]=a});const o=(a,u)=>(r=e(...t,u),A(r.value instanceof Te,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),A(Ir(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),i=(a,u)=>{const c=r.gradFunc(a,u),h=Array.isArray(c)?c:[c];A(h.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),A(h.every(f=>f instanceof Te),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const d={};return h.forEach((f,g)=>{d[g]=()=>f}),d};return this.runKernelFunc({forwardFunc:o,backwardsFunc:i,inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=tn(),r=await this.backend.time(e);return r.wallMs=tn()-t,r}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Sm;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Zs.nextTensorId=0;Zs.nextVariableId=0;function Ww(n){const e=Dl(Y(n),"float32");return L.makeTensor(e,n,"float32")}function Ay(){const n=oy();if(n._tfengine==null){const e=new sy(n);n._tfengine=new Zs(e)}return rw(n._tfengine.ENV),Lw(()=>n._tfengine),n._tfengine}const L=Ay();function Gw(n,e){const t={a:n,b:e};return L.runKernel(mu,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jw(){return typeof navigator<"u"&&navigator!=null}let sl;function Hw(n){sl=n}function Af(n){if(sl!==void 0)return sl;if(n||jw()){if(n||(n=navigator),n.product==="ReactNative")return!0;const e=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!e){const t=n;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function Of(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}const Kw=Object.freeze(Object.defineProperty({__proto__:null,isBrowser:Of,isMobile:Af,mockIsMobile:Hw},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ot=W();Ot.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Ot.registerFlag("IS_BROWSER",()=>Of());Ot.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Ot.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Ot.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));Ot.registerFlag("PROD",()=>!1);Ot.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Ot.getBool("DEBUG"));Ot.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Ot.registerFlag("IS_TEST",()=>!1);Ot.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>Ot.getBool("DEBUG"));Ot.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Ot.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Ot.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zn(n,e){let t=n;if(st(n))return e==="string"?[]:[n.length];if(Iy(n)){const s=n.channels||"RGBA";return[n.height,n.width*s.length]}else if(ky(n))return[n.buffer.size/(e==null?4:Ni(e))];if(!Array.isArray(n))return[];const r=[];for(;Array.isArray(t)||st(t)&&e!=="string";)r.push(t.length),t=t[0];return Array.isArray(n)&&W().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Oy(n,r,[]),r}function Oy(n,e,t){if(t=t||[],!Array.isArray(n)&&!st(n)){A(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}A(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),A(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const r=e.slice(1);for(let s=0;s<n.length;++s)Oy(n[s],r,t.concat(s))}function Cm(n,e,t,r){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${r}' must be ${n} tensor, but got ${e} tensor`)}}function _(n,e,t,r="numeric"){if(n instanceof Ey())return Cm(r,n.dtype,e,t),n;let s=ao(n);if(s!=="string"&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),Cm(r,s,e,t),n==null||!st(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const u=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${u}'`)}const o=zn(n,s);!st(n)&&!Array.isArray(n)&&(n=[n]);const a=s!=="string"?Xi(n,s):Un(n,[],!0);return L.makeTensor(a,o,s)}function Ri(n,e,t,r="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((o,i)=>_(o,`${e}[${i}]`,t,r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Df="__op";function P(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const r=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+Df;const s=(...o)=>{L.startScope(t);try{const i=r(...o);return kr(i)&&console.error("Cannot return a Promise inside of tidy."),L.endScope(i),i}catch(i){throw L.endScope(null),i}};return Object.defineProperty(s,"name",{value:t,configurable:!0}),s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xw(n,e){const t=_(n,"real","complex"),r=_(e,"imag","complex");xt(t.shape,r.shape,`real and imag shapes, ${t.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:t,imag:r};return L.runKernel(oh,s)}const gr=P({complex_:Xw});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dr(n,e,t,r){if(r==null)r=ao(n);else if(r==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(ky(n)||Iy(n)){if(r!=="float32"&&r!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return L.backend.createTensorFromGPUData(n,e||t,r)}if(!st(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){zt(e);const s=Y(e),o=Y(t);A(s===o,()=>`Based on the provided shape, [${e}], the tensor should have ${s} values but has ${o}`);for(let i=0;i<t.length;++i){const a=t[i],u=i===t.length-1?a!==Y(e.slice(i)):!0;A(t[i]===e[i]||!u,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!st(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=r!=="string"?Xi(n,r):Un(n,[],!0),L.makeTensor(n,e,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function un(n,e,t){const r=zn(n,t);return Dr(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ys={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class Fn{static join(e){return new Fn(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(r=>st(r)?r.buffer:r),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let r=0;r<e.length;r++){const s=e[r];r!==e.length-1&&s.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const o=t+s.byteLength;this.shards.push({buffer:s,start:t,end:o}),t=o}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const r=this.findShardForByte(e);if(r===-1)throw new Error(`Could not find start shard for byte ${e}`);const s=t-e,o=new ArrayBuffer(s),i=new Uint8Array(o);let a=0;for(let u=r;u<this.shards.length;u++){const c=this.shards[u],d=e+a-c.start,f=a,x=Math.min(t,c.end)-c.start,w=new Uint8Array(c.buffer,d,x-d);if(i.set(w,f),a+=w.length,t<c.end)break}return o}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(s){return e<s.start?-1:e>=s.end?1:0}if(t(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const r=qw(this.shards,t);return r===-1?-1:(this.previousShardIndex=r,this.previousShardIndex)}}function qw(n,e){let t=0,r=n.length;for(;t<=r;){const s=Math.floor((r-t)/2)+t,o=e(n[s]);if(o===0)return s;o<0?r=s:t=s+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yw(){W().set("PROD",!0)}function Qw(){W().set("DEBUG",!0)}function Zw(){W().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Jw(n){W().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(n+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function e2(){L.disposeVariables()}function Sn(){return L}function t2(){return L.memory()}function n2(n){return L.profile(n)}function ce(n,e){return L.tidy(n,e)}function We(n){_f(n).forEach(t=>t.dispose())}function En(n){return L.keep(n)}function r2(n){return L.time(n)}function s2(n){return L.setBackend(n)}function o2(){return L.ready()}function Ff(){return L.backendName}function i2(n){L.removeBackend(n)}function a2(n){return L.findBackend(n)}function u2(n){return L.findBackendFactory(n)}function Dy(n,e,t=1){return L.registerBackend(n,e,t)}function Pf(){return L.backend}function c2(n,e){W().setPlatform(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rr=4;async function l2(n,e){const t=[],r=[],s=Array.isArray(n)?n.map(i=>i.name):Object.keys(n);for(let i=0;i<s.length;++i){const a=s[i],u=Array.isArray(n)?n[i].tensor:n[a];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${u.dtype}`);const c={name:a,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){const h=new Promise(async d=>{const f=await u.bytes(),g=f.reduce((b,$)=>b+$.length,0)+Rr*f.length,x=new Uint8Array(g);let w=0;for(let b=0;b<f.length;b++){const $=f[b],N=new Uint8Array(new Uint32Array([$.length]).buffer);x.set(N,w),w+=Rr,x.set($,w),w+=$.length}d(x)});r.push(h)}else r.push(u.data());e!=null&&(c.group=e),t.push(c)}const o=await Promise.all(r);return{data:f2(o),specs:t}}function Fy(n,e){const t=new Fn(n),r={};let s=0;for(const o of e){const i=h2(o,(a,u)=>t.slice(s+a,s+u));r[o.name]=Py(o,t.slice(s,s+i)),s+=i}return r}function h2(n,e){const t=Y(n.shape);let r;if("quantization"in n){const s=n.quantization;r=ys[s.dtype]}else if(n.dtype==="string"){let s=0;for(let o=0;o<t;o++)s+=Rr+new Uint32Array(e(s,s+Rr))[0];return s}else r=ys[n.dtype];return t*r}async function d2(n,e){const t=Y(n.shape);let r;if("quantization"in n){const s=n.quantization;r=ys[s.dtype]}else if(n.dtype==="string"){let s=0;for(let o=0;o<t;o++)s+=Rr+new Uint32Array(await e(s,s+Rr))[0];return s}else r=ys[n.dtype];return t*r}function Py(n,e){const t=n.name,r=n.dtype,s=n.shape,o=Y(s);let i,a=0;if("quantization"in n){const u=n.quantization;if(u.dtype==="uint8"||u.dtype==="uint16"){if(!("min"in u&&"scale"in u))throw new Error(`Weight ${n.name} with quantization ${u.dtype} doesn't have corresponding metadata min and scale.`)}else if(u.dtype==="float16"){if(r!=="float32")throw new Error(`Weight ${n.name} is quantized with ${u.dtype} which only supports weights of type float32 not ${r}.`)}else throw new Error(`Weight ${n.name} has unknown quantization dtype ${u.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const c=ys[u.dtype],h=u.dtype==="uint8"?new Uint8Array(e):new Uint16Array(e);if(r==="float32")if(u.dtype==="uint8"||u.dtype==="uint16"){i=new Float32Array(h.length);for(let d=0;d<h.length;d++){const f=h[d];i[d]=f*u.scale+u.min}}else if(u.dtype==="float16")i=v2()(h);else throw new Error(`Unsupported quantization type ${u.dtype} for weight type float32.`);else if(r==="int32"){if(u.dtype!=="uint8"&&u.dtype!=="uint16")throw new Error(`Unsupported quantization type ${u.dtype} for weight type int32.`);i=new Int32Array(h.length);for(let d=0;d<h.length;d++){const f=h[d];i[d]=Math.round(f*u.scale+u.min)}}else throw new Error(`Unsupported dtype in weight '${t}': ${r}`);a+=o*c}else if(r==="string"){const u=Y(n.shape);i=[];for(let c=0;c<u;c++){const h=new Uint32Array(e.slice(a,a+Rr))[0];a+=Rr;const d=new Uint8Array(e.slice(a,a+h));i.push(d),a+=h}}else{const u=ys[r];if(r==="float32")i=new Float32Array(e);else if(r==="int32")i=new Int32Array(e);else if(r==="bool")i=new Uint8Array(e);else if(r==="complex64"){i=new Float32Array(e);const c=new Float32Array(i.length/2),h=new Float32Array(i.length/2);for(let x=0;x<c.length;x++)c[x]=i[x*2],h[x]=i[x*2+1];const d=un(c,s,"float32"),f=un(h,s,"float32"),g=gr(d,f);return d.dispose(),f.dispose(),g}else throw new Error(`Unsupported dtype in weight '${t}': ${r}`);a+=o*u}return un(i,s,r)}async function Tm(n,e,t){let r=new Uint8Array(e);for(;r.byteLength<t;){const{done:s,value:o}=await n.read();if(s&&o==null){const a=t-r.byteLength;throw new Error(`Reader is done but ${a} bytes are still expected`)}const i=new Uint8Array(r.length+o.byteLength);i.set(r,0),i.set(new Uint8Array(o),r.length),r=i}return r.buffer}async function Ly(n,e){const t={},r=n.getReader();let s=new ArrayBuffer(0);for(const o of e){const i=await d2(o,async(c,h)=>(s=await Tm(r,s,h),s.slice(c,h)));s=await Tm(r,s,i);const a=s.slice(0,i);s=s.slice(i);const u=Py(o,a);if(t[o.name]=u,Ff()==="webgpu"){const c=Pf();"uploadToGPU"in c&&Y(u.shape)>=W().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&c.uploadToGPU(u.dataId)}}return t}function f2(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(o=>{if(e+=o.byteLength,t.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${o.constructor.name}`)});const r=new Uint8Array(e);let s=0;return t.forEach(o=>{r.set(new Uint8Array(o.buffer),s),s+=o.byteLength}),r.buffer}const Lf=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function Nm(n){return Lf?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function p2(n){if(Lf)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let r=0,s=e.length;r<s;r++)t+=String.fromCharCode(e[r]);return btoa(t)}function m2(n){if(Lf){const r=Buffer.from(n,"base64");return r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let r=0;r<e.length;++r)t.set([e.charCodeAt(r)],r);return t.buffer}function g2(n){return Fn.join(n)}function Em(n){const e="/";for(n=n.trim();n.endsWith(e);)n=n.slice(0,n.length-1);const t=n.split(e);return t[t.length-1]}function By(n,e){const t={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:e};return n.signature!=null&&(t.signature=n.signature),n.userDefinedMetadata!=null&&(t.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(t.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(t.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(t.trainingConfig=n.trainingConfig),t}function My(n,e,t){const r={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(r.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=e,r.weightData=t}return n.signature!=null&&(r.signature=n.signature),n.userDefinedMetadata!=null&&(r.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(r.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(r.initializerSignature=n.initializerSignature),r}async function Bf(n,e){let t,r;return n.weightsManifest!=null&&([t,r]=await e(n.weightsManifest)),My(n,t,r)}function qi(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:Nm(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:Nm(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new Fn(n.weightData).byteLength}}function ol(n){const e=[];for(const t of n)e.push(...t.weights);return e}function y2(){const n=t=>{let r=t<<13,s=0;for(;!(r&8388608);)s-=8388608,r<<=1;return r&=-8388609,s+=947912704,r|s},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=n(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function x2(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let e=1;e<31;e++)n[e]=e<<23;for(let e=33;e<63;e++)n[e]=2147483648+(e-32<<23);return n}function b2(){const n=new Uint32Array(64);for(let e=0;e<64;e++)n[e]=1024;return n[0]=n[32]=0,n}function v2(){const n=y2(),e=x2(),t=b2();return r=>{const s=new ArrayBuffer(4*r.length),o=new Uint32Array(s);for(let i=0;i<r.length;i++){const a=r[i],u=n[t[a>>10]+(a&1023)]+e[a>>10];o[i]=u}return new Float32Array(s)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class je{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return je.instance==null&&(je.instance=new je),je.instance}static registerSaveRouter(e){je.getInstance().saveRouters.push(e)}static registerLoadRouter(e){je.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return je.getHandlers(e,"save")}static getLoadHandlers(e,t){return je.getHandlers(e,"load",t)}static getHandlers(e,t,r){const s=[];return(t==="load"?je.getInstance().loadRouters:je.getInstance().saveRouters).forEach(i=>{const a=i(e,r);a!==null&&s.push(a)}),s}}const w2=n=>je.registerSaveRouter(n),$2=n=>je.registerLoadRouter(n),S2=n=>je.getSaveHandlers(n),C2=(n,e)=>je.getLoadHandlers(n,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const il="tensorflowjs",al=1,ls="models_store",Cr="model_info_store";function Vy(){if(!W().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function ul(n){const e=n.result;e.createObjectStore(ls,{keyPath:"modelPath"}),e.createObjectStore(Cr,{keyPath:"modelPath"})}class xs{constructor(e){if(this.indexedDB=Vy(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((r,s)=>{const o=this.indexedDB.open(il,al);o.onupgradeneeded=()=>ul(o),o.onsuccess=()=>{const i=o.result;if(t==null){const a=i.transaction(ls,"readonly"),c=a.objectStore(ls).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return i.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));r(c.result.modelArtifacts)},c.onerror=h=>(i.close(),s(c.error)),a.oncomplete=()=>i.close()}else{t.weightData=Fn.join(t.weightData);const a=qi(t),u=i.transaction(Cr,"readwrite");let c=u.objectStore(Cr),h;try{h=c.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(f){return s(f)}let d;h.onsuccess=()=>{d=i.transaction(ls,"readwrite");const f=d.objectStore(ls);let g;try{g=f.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a})}catch(x){return s(x)}g.onsuccess=()=>r({modelArtifactsInfo:a}),g.onerror=x=>{c=u.objectStore(Cr);const w=c.delete(this.modelPath);w.onsuccess=()=>(i.close(),s(g.error)),w.onerror=b=>(i.close(),s(g.error))}},h.onerror=f=>(i.close(),s(h.error)),u.oncomplete=()=>{d==null?i.close():d.oncomplete=()=>i.close()}}},o.onerror=i=>s(o.error)})}}xs.URL_SCHEME="indexeddb://";const Uy=n=>W().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(xs.URL_SCHEME)?T2(n.slice(xs.URL_SCHEME.length)):null;je.registerSaveRouter(Uy);je.registerLoadRouter(Uy);function T2(n){return new xs(n)}function N2(n){return n.startsWith(xs.URL_SCHEME)?n.slice(xs.URL_SCHEME.length):n}class E2{constructor(){this.indexedDB=Vy()}async listModels(){return new Promise((e,t)=>{const r=this.indexedDB.open(il,al);r.onupgradeneeded=()=>ul(r),r.onsuccess=()=>{const s=r.result,o=s.transaction(Cr,"readonly"),a=o.objectStore(Cr).getAll();a.onsuccess=()=>{const u={};for(const c of a.result)u[c.modelPath]=c.modelArtifactsInfo;e(u)},a.onerror=u=>(s.close(),t(a.error)),o.oncomplete=()=>s.close()},r.onerror=s=>t(r.error)})}async removeModel(e){return e=N2(e),new Promise((t,r)=>{const s=this.indexedDB.open(il,al);s.onupgradeneeded=()=>ul(s),s.onsuccess=()=>{const o=s.result,i=o.transaction(Cr,"readwrite"),a=i.objectStore(Cr),u=a.get(e);let c;u.onsuccess=()=>{if(u.result==null)return o.close(),r(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const h=a.delete(e),d=()=>{c=o.transaction(ls,"readwrite");const g=c.objectStore(ls).delete(e);g.onsuccess=()=>t(u.result.modelArtifactsInfo),g.onerror=x=>r(u.error)};h.onsuccess=d,h.onerror=f=>(d(),o.close(),r(u.error))}},u.onerror=h=>(o.close(),r(u.error)),i.oncomplete=()=>{c==null?o.close():c.oncomplete=()=>o.close()}},s.onerror=o=>r(s.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ur="/",Ws="tensorflowjs_models",zy="info",I2="model_topology",k2="weight_specs",R2="weight_data",_2="model_metadata";function Wy(n){return{info:[Ws,n,zy].join(ur),topology:[Ws,n,I2].join(ur),weightSpecs:[Ws,n,k2].join(ur),weightData:[Ws,n,R2].join(ur),modelMetadata:[Ws,n,_2].join(ur)}}function Gy(n){for(const e of Object.values(n))window.localStorage.removeItem(e)}function A2(n){const e=n.split(ur);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(ur)}function O2(n){return n.startsWith(bs.URL_SCHEME)?n.slice(bs.URL_SCHEME.length):n}class bs{constructor(e){if(!W().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Wy(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),s=qi(e),o=Fn.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,p2(o));const i={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:s}}catch{throw Gy(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},r=JSON.parse(this.LS.getItem(this.keys.topology));if(r==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=r;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;const o=this.LS.getItem(this.keys.modelMetadata);if(o!=null){const a=JSON.parse(o);t.format=a.format,t.generatedBy=a.generatedBy,t.convertedBy=a.convertedBy,a.signature!=null&&(t.signature=a.signature),a.userDefinedMetadata!=null&&(t.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(t.modelInitializer=a.modelInitializer),a.initializerSignature!=null&&(t.initializerSignature=a.initializerSignature),a.trainingConfig!=null&&(t.trainingConfig=a.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(i==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=m2(i),t}}bs.URL_SCHEME="localstorage://";const jy=n=>W().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(bs.URL_SCHEME)?D2(n.slice(bs.URL_SCHEME.length)):null;je.registerSaveRouter(jy);je.registerLoadRouter(jy);function D2(n){return new bs(n)}class F2{constructor(){A(W().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),A(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=Ws+ur,r=ur+zy;for(let s=0;s<this.LS.length;++s){const o=this.LS.key(s);if(o.startsWith(t)&&o.endsWith(r)){const i=A2(o);e[i]=JSON.parse(this.LS.getItem(o))}}return e}async removeModel(e){e=O2(e);const t=Wy(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(t.info));return Gy(t),r}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const js="://";class $t{constructor(){this.managers={}}static getInstance(){return $t.instance==null&&($t.instance=new $t),$t.instance}static registerManager(e,t){A(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(js)&&(e=e.slice(0,e.indexOf(js))),A(e.length>0,()=>"scheme must not be an empty string.");const r=$t.getInstance();A(r.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),r.managers[e]=t}static getManager(e){const t=$t.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys($t.getInstance().managers)}}function Va(n){if(n.indexOf(js)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${$t.getSchemes().join(",")}`);return{scheme:n.split(js)[0],path:n.split(js)[1]}}async function Hy(n,e,t=!1){A(n!==e,()=>`Old path and new path are the same: '${n}'`);const r=je.getLoadHandlers(n);A(r.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),A(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${n}.`);const s=r[0],o=je.getSaveHandlers(e);A(o.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),A(o.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${e}.`);const i=o[0],a=Va(n).scheme,u=Va(n).path,c=a===Va(n).scheme,h=await s.load();t&&c&&await $t.getManager(a).removeModel(u);const d=await i.save(h);return t&&!c&&await $t.getManager(a).removeModel(u),d.modelArtifactsInfo}async function P2(){const n=$t.getSchemes(),e={};for(const t of n){const r=await $t.getManager(t).listModels();for(const s in r){const o=t+js+s;e[o]=r[s]}}return e}async function L2(n){const e=Va(n);return $t.getManager(e.scheme).removeModel(e.path)}async function B2(n,e){return Hy(n,e,!1)}async function M2(n,e){return Hy(n,e,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class V2{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!W().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",r=>{if(r.source===window&&r.data.name===this.messageName){r.stopPropagation();const s=this.functionRefs[r.data.index];s(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return gy(e)}}if(W().get("IS_BROWSER")){W().setPlatform("browser",new V2);try{$t.registerManager(bs.URL_SCHEME,new F2)}catch{}try{$t.registerManager(xs.URL_SCHEME,new E2)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U2={importFetch:()=>require("node-fetch")};let kc;class z2{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return W().global.fetch!=null?W().global.fetch(e,t):(kc==null&&(kc=U2.importFetch()),kc(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}W().get("IS_NODE")&&!W().get("IS_BROWSER")&&W().setPlatform("node",new z2);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ge(n,e="float32",t){return e=e||"float32",zt(n),new gs(n,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W2(n,e){const t=_(n,"x","cast");if(!Zg(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const r={x:t},s={dtype:e};return L.runKernel(gu,r,s)}const Se=P({cast_:W2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G2(n){const t={x:_(n,"x","clone","string_or_numeric")};return L.runKernel(yu,t)}const hr=P({clone_:G2});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mf(n,e=!1){console.log(n.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Ay();const j2={buffer:Ge,cast:Se,clone:hr,print:Mf};Bw(j2);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H2(n,e){let t=_(n,"a","add"),r=_(e,"b","add");[t,r]=He(t,r);const s={a:t,b:r};return L.runKernel(mu,s)}const ue=P({add_:H2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K2(n,e){let t=_(n,"a","floorDiv"),r=_(e,"b","floorDiv");[t,r]=He(t,r);const s={a:t,b:r};return L.runKernel(Bh,s)}const Vf=P({floorDiv_:K2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X2(n,e){let t=_(n,"a","div"),r=_(e,"b","div");if([t,r]=He(t,r),t.dtype==="int32"&&r.dtype==="int32")return Vf(t,r);const s={a:t,b:r},o={};return L.runKernel(Nh,s,o)}const ve=P({div_:X2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q2(n,e){let t=_(n,"a","mul"),r=_(e,"b","mul");[t,r]=He(t,r);const s={a:t,b:r};return L.runKernel(gd,s)}const Z=P({mul_:q2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y2(n){const e=_(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return L.runKernel(ih,t)}else{const t={x:e};return L.runKernel(Ll,t)}}const Bt=P({abs_:Y2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q2(n){const t={x:_(n,"x","acos")};return L.runKernel(Bl,t)}const Ky=P({acos_:Q2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z2(n){const t={x:_(n,"x","acosh")};return L.runKernel(Ml,t)}const Xy=P({acosh_:Z2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J2(n){A(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),A(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const e=n.map((s,o)=>_(s,`tensors${o}`,"addN")),t=e[0];e.forEach(s=>{if(s.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(s=>{if(!ze(s.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=e;return L.runKernel(Vl,r)}const qy=P({addN_:J2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e$(n,e=null,t=!1){const s={x:_(n,"x","all","bool")},o={axis:e,keepDims:t};return L.runKernel(Ul,s,o)}const Yy=P({all_:e$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t$(n,e=null,t=!1){const s={x:_(n,"x","any","bool")},o={axis:e,keepDims:t};return L.runKernel(zl,s,o)}const Qy=P({any_:t$});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n$(n,e=0){const r={x:_(n,"x","argMax")},s={axis:e};return L.runKernel(Wl,r,s)}const Uf=P({argMax_:n$});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r$(n,e=0){const r={x:_(n,"x","argMin")},s={axis:e};return L.runKernel(Gl,r,s)}const Zy=P({argMin_:r$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s$(n){const t={x:_(n,"x","asin")};return L.runKernel(jl,t)}const Jy=P({asin_:s$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o$(n){const t={x:_(n,"x","asinh")};return L.runKernel(Hl,t)}const e0=P({asinh_:o$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i$(n){const t={x:_(n,"x","atan")};return L.runKernel(Kl,t)}const t0=P({atan_:i$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a$(n,e){let t=_(n,"a","atan2"),r=_(e,"b","atan2");[t,r]=He(t,r);const s={a:t,b:r};return L.runKernel(ql,s)}const n0=P({atan2_:a$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u$(n){const t={x:_(n,"x","atanh")};return L.runKernel(Xl,t)}const r0=P({atanh_:u$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s0(n,e,t,r,s="NHWC",o){const i=n[3],a=[...e,i],u=uo(s);return Yt(n,a,t,o,r,null,null,u)}function Is(n,e,t,r,s,o,i="channelsLast"){const[a,u]=_i(e);let c;if(i==="channelsLast")c=[a,u,n[3],n[3]];else if(i==="channelsFirst")c=[a,u,n[1],n[1]];else throw new Error(`Unknown dataFormat ${i}`);return Yt(n,c,t,r,s,o,!1,i)}function Yi(n,e,t,r,s,o,i="NDHWC"){const[a,u,c]=cl(e);let h,d;if(i==="NDHWC")d="channelsLast",h=[a,u,c,n[4],n[4]];else if(i==="NCDHW")d="channelsFirst",h=[a,u,c,n[1],n[1]];else throw new Error(`Unknown dataFormat ${i}`);return Qi(n,h,t,r,s,!1,d,o)}function Yt(n,e,t,r,s,o,i=!1,a="channelsLast"){let[u,c,h,d]=[-1,-1,-1,-1];if(a==="channelsLast")[u,c,h,d]=n;else if(a==="channelsFirst")[u,d,c,h]=n;else throw new Error(`Unknown dataFormat ${a}`);const[f,g,,x]=e,[w,b]=_i(t),[$,N]=_i(r),k=Hs(f,$),I=Hs(g,N),{padInfo:O,outHeight:F,outWidth:M}=h$(s,c,h,w,b,k,I,o,a),B=i?x*d:x;let z;return a==="channelsFirst"?z=[u,B,F,M]:a==="channelsLast"&&(z=[u,F,M,B]),{batchSize:u,dataFormat:a,inHeight:c,inWidth:h,inChannels:d,outHeight:F,outWidth:M,outChannels:B,padInfo:O,strideHeight:w,strideWidth:b,filterHeight:f,filterWidth:g,effectiveFilterHeight:k,effectiveFilterWidth:I,dilationHeight:$,dilationWidth:N,inShape:n,outShape:z,filterShape:e}}function Qi(n,e,t,r,s,o=!1,i="channelsLast",a){let[u,c,h,d,f]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[u,c,h,d,f]=n;else if(i==="channelsFirst")[u,f,c,h,d]=n;else throw new Error(`Unknown dataFormat ${i}`);const[g,x,w,,b]=e,[$,N,k]=cl(t),[I,O,F]=cl(r),M=Hs(g,I),B=Hs(x,O),z=Hs(w,F),{padInfo:G,outDepth:U,outHeight:Q,outWidth:J}=d$(s,c,h,d,$,N,k,M,B,z,a),se=o?b*f:b;let oe;return i==="channelsFirst"?oe=[u,se,U,Q,J]:i==="channelsLast"&&(oe=[u,U,Q,J,se]),{batchSize:u,dataFormat:i,inDepth:c,inHeight:h,inWidth:d,inChannels:f,outDepth:U,outHeight:Q,outWidth:J,outChannels:se,padInfo:G,strideDepth:$,strideHeight:N,strideWidth:k,filterDepth:g,filterHeight:x,filterWidth:w,effectiveFilterDepth:M,effectiveFilterHeight:B,effectiveFilterWidth:z,dilationDepth:I,dilationHeight:O,dilationWidth:F,inShape:n,outShape:oe,filterShape:e}}function c$(n,e,t,r,s){r==null&&(r=zf(n,e,t));const o=n[0],i=n[1],a=Ai((o-e+2*r)/t+1,s),u=Ai((i-e+2*r)/t+1,s);return[a,u]}function l$(n,e,t,r,s,o){s==null&&(s=zf(n,e[0],r[0]));const i=[0,0,0,t];for(let a=0;a<3;a++)n[a]+2*s>=e[a]&&(i[a]=Ai((n[a]-e[a]+2*s)/r[a]+1,o));return i}function zf(n,e,t,r=1){const s=Hs(e,r);return Math.floor((n[0]*(t-1)-t+s)/2)}function _i(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function cl(n){return typeof n=="number"?[n,n,n]:n}function Hs(n,e){return e<=1?n:n+(n-1)*(e-1)}function h$(n,e,t,r,s,o,i,a,u){let c,h,d;if(typeof n=="number"){c={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const g=c$([e,t],o,r,n,a);h=g[0],d=g[1]}else if(n==="same"){h=Math.ceil(e/r),d=Math.ceil(t/s);const f=Math.max(0,(h-1)*r+o-e),g=Math.max(0,(d-1)*s+i-t),x=Math.floor(f/2),w=f-x,b=Math.floor(g/2),$=g-b;c={top:x,bottom:w,left:b,right:$,type:"SAME"}}else if(n==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((e-o+1)/r),d=Math.ceil((t-i+1)/s);else if(typeof n=="object"){const f=u==="channelsLast"?n[1][0]:n[2][0],g=u==="channelsLast"?n[1][1]:n[2][1],x=u==="channelsLast"?n[2][0]:n[3][0],w=u==="channelsLast"?n[2][1]:n[3][1];c={top:f,bottom:g,left:x,right:w,type:f===0&&g===0&&x===0&&w===0?"VALID":"EXPLICIT"},h=Ai((e-o+f+g)/r+1,a),d=Ai((t-i+x+w)/s+1,a)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:c,outHeight:h,outWidth:d}}function d$(n,e,t,r,s,o,i,a,u,c,h){let d,f,g,x;if(n==="valid"&&(n=0),typeof n=="number"){d={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const b=l$([e,t,r,1],[a,u,c],1,[s,o,i],n,h);f=b[0],g=b[1],x=b[2]}else if(n==="same"){f=Math.ceil(e/s),g=Math.ceil(t/o),x=Math.ceil(r/i);const w=(f-1)*s+a-e,b=(g-1)*o+u-t,$=(x-1)*i+c-r,N=Math.floor(w/2),k=w-N,I=Math.floor(b/2),O=b-I,F=Math.floor($/2),M=$-F;d={top:I,bottom:O,left:F,right:M,front:N,back:k,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:d,outDepth:f,outHeight:g,outWidth:x}}function Ai(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function Oi(n){const[e,t,r]=_i(n);return e===1&&t===1&&r===1}function Gt(n,e){return Oi(n)||Oi(e)}function vs(n){return _i(n).every(e=>e>0)}function uo(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function ln(n,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")A(ps(e),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(r=>{r.forEach(s=>{A(ps(s),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${s}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f$(n,e){const r={x:_(n,"x","reshape","string_or_numeric")},s={shape:e};return L.runKernel(Pd,r,s)}const K=P({reshape_:f$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p$(n,e,t,r,s){const o=_(n,"x","avgPool","float32"),i=1;A(Gt(t,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`);let a=o,u=!1;o.rank===3&&(u=!0,a=K(o,[1,o.shape[0],o.shape[1],o.shape[2]])),A(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),ln("avgPool",r,s);const c={x:a},h={filterSize:e,strides:t,pad:r,dimRoundingMode:s};let d=L.runKernel(Yl,c,h);return d=Se(d,o.dtype),u?K(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Wf=P({avgPool_:p$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m$(n,e,t,r,s,o="NDHWC"){const i=_(n,"x","avgPool3d","float32");let a=i,u=!1;i.rank===4&&(u=!0,a=K(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),A(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),A(o==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),A(typeof t=="number"&&t>0||Array.isArray(t)&&t[0]>0&&t[1]>0&&t[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${t}'`),ln("avgPool3d",r,s);const c={x:a},h={filterSize:e,strides:t,pad:r,dimRoundingMode:s,dataFormat:o};let d=L.runKernel(Ql,c,h);return d=Se(d,a.dtype),u?K(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const o0=P({avgPool3d_:m$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g$(n,e=0){A(n.length>=1,()=>"Pass at least one tensor to concat");const t=Ri(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(o=>{if(o.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${o.dtype}. `)}),t.length===1)return hr(t[0]);const r=t,s={axis:e};return L.runKernel(ah,r,s)}const it=P({concat_:g$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y$(n,e,t=!1,r=!1){let s=_(n,"a","matMul"),o=_(e,"b","matMul");[s,o]=He(s,o);const i={a:s,b:o},a={transposeA:t,transposeB:r};return L.runKernel(Zl,i,a)}const Re=P({matMul_:y$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x$(n){const t={x:_(n,"x","sigmoid","float32")};return L.runKernel(Zd,t)}const In=P({sigmoid_:x$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b$(n,e,t){const r=_(n,"x","slice","string_or_numeric");if(r.rank===0)throw new Error("Slicing scalar is not possible");const s={x:r},o={begin:e,size:t};return L.runKernel(Xd,s,o)}const xe=P({slice_:b$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v$(n){const t={x:_(n,"x","tanh","float32")};return L.runKernel(bf,t)}const Za=P({tanh_:v$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w$(n,e,t,r,s,o){const i=_(n,"forgetBias","basicLSTMCell"),a=_(e,"lstmKernel","basicLSTMCell"),u=_(t,"lstmBias","basicLSTMCell"),c=_(r,"data","basicLSTMCell"),h=_(s,"c","basicLSTMCell"),d=_(o,"h","basicLSTMCell"),f=it([c,d],1),g=Re(f,a),x=ue(g,u),w=x.shape[0],b=x.shape[1]/4,$=[w,b],N=xe(x,[0,0],$),k=xe(x,[0,b],$),I=xe(x,[0,b*2],$),O=xe(x,[0,b*3],$),F=ue(Z(In(N),Za(k)),Z(h,In(ue(i,I)))),M=Z(Za(F),In(O));return[F,M]}const i0=P({basicLSTMCell_:w$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $$(n,e,t){const r=_(n,"x","batchToSpaceND"),s=e.reduce((a,u)=>a*u);A(r.rank>=1+e.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`),A(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),A(r.shape[0]%s===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`);const o={x:r},i={blockShape:e,crops:t};return L.runKernel(Jl,o,i)}const Gf=P({batchToSpaceND_:$$});function S$(n){let e;return n.rank===0||n.rank===1?e=K(n,[1,1,1,n.size]):n.rank===2?e=K(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=K(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C$(n,e,t,r,s,o){o==null&&(o=.001);const i=_(n,"x","batchNorm"),a=_(e,"mean","batchNorm"),u=_(t,"variance","batchNorm");let c;s!=null&&(c=_(s,"scale","batchNorm"));let h;r!=null&&(h=_(r,"offset","batchNorm")),A(a.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),A(h==null||a.rank===h.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),A(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const f={x:S$(i),scale:c,offset:h,mean:a,variance:u},g={varianceEpsilon:o},x=L.runKernel(Mh,f,g);return K(x,i.shape)}const Zi=P({batchNorm_:C$});function T$(n,e,t,r,s,o){const i=_(n,"x","batchNorm"),a=_(e,"mean","batchNorm"),u=_(t,"variance","batchNorm");let c;s!=null&&(c=_(s,"scale","batchNorm"));let h;return r!=null&&(h=_(r,"offset","batchNorm")),A(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),A(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),A(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),c!=null&&A(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),h!=null&&A(h.rank===2||h.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${h.rank}.`),Zi(i,a,u,h,c,o)}const a0=P({batchNorm2d_:T$});function N$(n,e,t,r,s,o){const i=_(n,"x","batchNorm"),a=_(e,"mean","batchNorm"),u=_(t,"variance","batchNorm");let c;s!=null&&(c=_(s,"scale","batchNorm"));let h;return r!=null&&(h=_(r,"offset","batchNorm")),A(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),A(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),A(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),c!=null&&A(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),h!=null&&A(h.rank===3||h.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${h.rank}.`),Zi(i,a,u,h,c,o)}const u0=P({batchNorm3d_:N$});function E$(n,e,t,r,s,o){const i=_(n,"x","batchNorm"),a=_(e,"mean","batchNorm"),u=_(t,"variance","batchNorm");let c;s!=null&&(c=_(s,"scale","batchNorm"));let h;return r!=null&&(h=_(r,"offset","batchNorm")),A(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),A(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),A(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),c!=null&&A(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),h!=null&&A(h.rank===4||h.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${h.rank}.`),Zi(i,a,u,h,c,o)}const c0=P({batchNorm4d_:E$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I$(n,e,t){const r=_(n,"x","bincount"),s=_(e,"weights","bincount");A(r.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),A(t>=0,()=>`size must be non-negative, but got ${t}.`),A(s.size===r.size||s.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`);const o={x:r,weights:s},i={size:t};return L.runKernel(eh,o,i)}const jf=P({bincount_:I$});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k$(n,e){const t=_(n,"x","bitwiseAnd"),r=_(e,"y","bitwiseAnd");if(!ze(t.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${t.shape}, y: ${r.shape}`);if(t.dtype!=="int32"||r.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${t.dtype} and type of y: ${r.dtype}`);const s={a:t,b:r};return L.runKernel(th,s)}const l0=P({bitwiseAnd_:k$});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R$(n,e){const t=_(n,"s0","broadcastArgs","int32"),r=_(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(r.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:t,s1:r};return L.runKernel(nh,s)}const h0=P({broadcastArgs_:R$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _$(n,e){let t=_(n,"broadcastTo","x");const r=t.shape;if(zt(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const c=t.shape.slice();for(;c.length<e.length;)c.unshift(1);t=K(t,c)}const s=t.shape,o=Array.from(e);for(let c=e.length-1;c>=0;c--)if(s[c]===e[c])o[c]=1;else if(t.shape[c]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(o.map((c,h)=>c>1?h:-1).filter(c=>c>=0).length===0)return hr(t);const a={x:t},u={reps:o};return L.runKernel(xu,a,u)}const Ks=P({broadcastTo_:_$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A$(n){const t={x:_(n,"x","ceil","float32")};return L.runKernel(rh,t)}const d0=P({ceil_:A$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function co(n,e,t){zt(n),t=t||ao(e);const r={shape:n,value:e,dtype:t};return L.runKernel(Fh,{},r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O$(n,e,t){const r=_(n,"x","clipByValue");if(A(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return co(r.shape,e,r.dtype);const s={x:r},o={clipValueMin:e,clipValueMax:t};return L.runKernel(sh,s,o)}const Hf=P({clipByValue_:O$});function D$(n){return it(n,0)}const f0=P({concat1d_:D$});function F$(n,e){return it(n,e)}const p0=P({concat2d_:F$});function P$(n,e){return it(n,e)}const m0=P({concat3d_:P$});function L$(n,e){return it(n,e)}const g0=P({concat4d_:L$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B$(n,e,t,r,s="NHWC",o=[1,1],i){const a=_(n,"x","conv2d","float32"),u=_(e,"filter","conv2d","float32");let c=a,h=!1;a.rank===3&&(h=!0,c=K(a,[1,a.shape[0],a.shape[1],a.shape[2]])),A(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),A(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),ln("conv2d",r,i);const d=s==="NHWC"?c.shape[3]:c.shape[1];A(d===u.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${u.shape[2]}.`),A(Gt(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),A(vs(o),()=>"Error in conv2D: Dilated rates should be larger than 0."),A(vs(t),()=>"Error in conv2D: Strides should be larger than 0.");const f={x:c,filter:u},g={strides:t,pad:r,dataFormat:s,dilations:o,dimRoundingMode:i},x=L.runKernel(uh,f,g);return h?K(x,[x.shape[1],x.shape[2],x.shape[3]]):x}const Ji=P({conv2d_:B$});function M$(n,e,t,r,s="NWC",o=1,i){const a=_(n,"x","conv1d"),u=_(e,"filter","conv1d");let c=a,h=!1;a.rank===2&&(h=!0,c=K(a,[1,a.shape[0],a.shape[1]])),A(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),A(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),ln("conv1d",r,i),A(c.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${u.shape[1]}.`),A(Gt(t,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${o}'`),A(vs(o),()=>"Error in conv1D: Dilated rates should be larger than 0."),A(vs(t),()=>"Error in conv1D: Stride should be larger than 0."),A(s==="NWC",()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);const d=K(u,[1,u.shape[0],u.shape[1],u.shape[2]]),f=K(c,[c.shape[0],1,c.shape[1],c.shape[2]]),b=Ji(f,d,[1,t],r,"NHWC",[1,o],i);return h?K(b,[b.shape[2],b.shape[3]]):K(b,[b.shape[0],b.shape[2],b.shape[3]])}const y0=P({conv1d_:M$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V$(n,e,t,r,s,o="NHWC",i){A(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let a=n,u=e,c=!1;e.rank===3&&(c=!0,u=K(e,[1,e.shape[0],e.shape[1],e.shape[2]]),a=[1,n[0],n[1],n[2]]),A(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),A(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),A(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const h=o==="NHWC"?a[3]:a[1],d=o==="NHWC"?u.shape[3]:u.shape[1];A(h===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${h}) must match input depth for filter ${t.shape[2]}.`),A(d===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${t.shape[3]}.`),ln("conv2dDerInput",s,i);const f={dy:u,filter:t},g={strides:r,pad:s,dataFormat:o,dimRoundingMode:i,inputShape:a},x=L.runKernel(lh,f,g);return c?K(x,[x.shape[1],x.shape[2],x.shape[3]]):x}const x0=P({conv2DBackpropInput_:V$});function U$(n,e,t,r,s,o){const i=_(n,"x","conv2dTranspose"),a=_(e,"filter","conv2dTranspose");return x0(t,i,a,r,s,"NHWC",o)}const b0=P({conv2dTranspose_:U$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z$(n,e,t,r,s="NDHWC",o=[1,1,1]){const i=_(n,"x","conv3d"),a=_(e,"filter","conv3d");let u=i,c=!1;i.rank===4&&(c=!0,u=K(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),A(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),A(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),A(u.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${a.shape[3]}.`),A(Gt(t,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),A(s==="NDHWC",()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`),A(vs(o),()=>"Error in conv3D: Dilated rates should be larger than 0."),A(vs(t),()=>"Error in conv3D: Strides should be larger than 0.");const h={x:u,filter:a},d={strides:t,pad:r,dataFormat:s,dilations:o},f=L.runKernel(hh,h,d);return c?K(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}const v0=P({conv3d_:z$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W$(n,e,t,r,s){A(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let o=n,i=e,a=!1;e.rank===4&&(a=!0,i=K(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),o=[1,n[0],n[1],n[2],n[3]]);const u=o[4],c=i.shape[4];A(o.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`),A(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),A(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),A(u===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${t.shape[3]}.`),A(c===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${t.shape[4]}.`);const h={dy:i,filter:t},d={pad:s,strides:r,inputShape:o},f=L.runKernel(dh,h,d);return a?K(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}const G$=P({conv3DBackpropInput_:W$});function j$(n,e,t,r,s){const o=_(n,"x","conv3dTranspose"),i=_(e,"filter","conv3dTranspose");return G$(t,o,i,r,s)}const w0=P({conv3dTranspose_:j$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H$(n){const t={x:_(n,"x","cos","float32")};return L.runKernel(fh,t)}const $0=P({cos_:H$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K$(n){const t={x:_(n,"x","cosh","float32")};return L.runKernel(ph,t)}const S0=P({cosh_:K$});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X$(n,e=0,t=!1,r=!1){const o={x:_(n,"x","cumprod")},i={axis:e,exclusive:t,reverse:r};return L.runKernel(mh,o,i)}const C0=P({cumprod_:X$});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q$(n,e=0,t=!1,r=!1){const o={x:_(n,"x","cumsum")},i={axis:e,exclusive:t,reverse:r};return L.runKernel(gh,o,i)}const T0=P({cumsum_:q$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y$(n,e,t,r=!1){const s=_(n,"x","denseBincount"),o=_(e,"weights","denseBincount");A(s.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`),A(s.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`),A(t>=0,()=>`size must be non-negative, but got ${t}.`),A(o.size===s.size||o.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${o.shape}.`);const i={x:s,weights:o},a={size:t,binaryOutput:r};return L.runKernel(xh,i,a)}const N0=P({denseBincount_:Y$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q$(n,e,t="NHWC"){const r=_(n,"x","depthToSpace","float32"),s=t==="NHWC"?r.shape[1]:r.shape[2],o=t==="NHWC"?r.shape[2]:r.shape[3],i=t==="NHWC"?r.shape[3]:r.shape[1];A(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),A(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${e}  for depthToSpace with input shape
    ${r.shape}`),A(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e} for depthToSpace with input shape
        ${r.shape}`),A(i%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${i} for depthToSpace with input shape ${r.shape}`);const a={x:r},u={blockSize:e,dataFormat:t};return L.runKernel(bh,a,u)}const E0=P({depthToSpace_:Q$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z$(n,e,t,r,s="NHWC",o=[1,1],i){const a=_(n,"x","depthwiseConv2d","float32"),u=_(e,"filter","depthwiseConv2d","float32");let c=a,h=!1;a.rank===3&&(h=!0,c=K(a,[1,a.shape[0],a.shape[1],a.shape[2]])),A(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),A(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);const d=s==="NHWC"?c.shape[3]:c.shape[1];A(d===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${d}) must match the inChannels dimension in filter ${u.shape[2]}.`),ln("depthwiseConv2d",r,i);const f={x:c,filter:u},g={strides:t,pad:r,dataFormat:s,dilations:o,dimRoundingMode:i},x=L.runKernel(vh,f,g);return h?K(x,[x.shape[1],x.shape[2],x.shape[3]]):x}const vu=P({depthwiseConv2d_:Z$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J$(n){const t={x:_(n,"x","diag")};return L.runKernel(Sh,t)}const I0=P({diag_:J$});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eS(n,e,t,r,s=[1,1],o="NHWC"){const i=_(n,"x","dilation2d"),a=_(e,"filter","dilation2d");A(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),A(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),A(o==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let u=i,c=!1;i.rank===3&&(u=K(i,[1,i.shape[0],i.shape[1],i.shape[2]]),c=!0),A(u.shape[3]===a.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${a.shape[2]}`);const h={x:u,filter:a},d={strides:t,pad:r,dilations:s},f=L.runKernel(Ch,h,d);return c?K(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const k0=P({dilation2d_:eS});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Di(n,e){const t=n.length,r=[];for(let s=0;s<t;s++){const o=t-1-s,i=n[o]||1;(e[e.length-1-s]||1)>1&&i===1&&r.unshift(o)}return r}function Kf(n,e){const t=[];for(let r=0;r<e.length;r++){const s=n[n.length-r-1],o=e.length-r-1,i=e[o];(s==null||s===1&&i>1)&&t.unshift(o)}return t}function Ne(n,e){const t=Math.max(n.length,e.length),r=new Array(t);for(let s=0;s<t;s++){let o=n[n.length-s-1];o==null&&(o=1);let i=e[e.length-s-1];if(i==null&&(i=1),o===1)r[t-s-1]=i;else if(i===1)r[t-s-1]=o;else if(o!==i){const a=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(a)}else r[t-s-1]=o}return r}const tS=Object.freeze(Object.defineProperty({__proto__:null,assertAndGetBroadcastShape:Ne,getBroadcastDims:Di,getReductionAxes:Kf},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nS(n,e){let t=_(n,"a","equal","string_or_numeric"),r=_(e,"b","equal","string_or_numeric");[t,r]=He(t,r),Ne(t.shape,r.shape);const s={a:t,b:r};return L.runKernel(Rh,s)}const ea=P({equal_:nS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rS(n,e,t){const r=_(e,"a","where"),s=_(t,"b","where"),o=_(n,"condition","where","bool"),i=Ne(Ne(o.shape,r.shape),s.shape),a=Ks(o,i),u=Ks(r,i),c=Ks(s,i),h={condition:a,t:u,e:c};return L.runKernel(Hd,h)}const dr=P({where_:rS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sS(n){const t={x:_(n,"x","zerosLike")};return L.runKernel(Tf,t)}const Vt=P({zerosLike_:sS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oS(n,e){let t=_(n,"a","div"),r=_(e,"b","div");[t,r]=He(t,r);const s=ve(t,r),o=Vt(s),i=ea(r,o);return dr(i,o,s)}const R0=P({divNoNan_:oS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iS(n,e){const t=_(n,"t1","dot"),r=_(e,"t2","dot");A((t.rank===1||t.rank===2)&&(r.rank===1||r.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${r.rank}.`);const s=t.rank===1?t.size:t.shape[1],o=r.rank===1?r.size:r.shape[0];if(A(s===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${o}.`),t.rank===1&&r.rank===1){const i=K(t,[1,-1]),a=K(r,[-1,1]),u=Re(i,a);return K(u,[])}else if(t.rank===1&&r.rank===2){const i=K(t,[1,-1]),a=K(r,[r.shape[0],r.shape[1]]),u=Re(i,a);return K(u,[u.size])}else if(t.rank===2&&r.rank===1){const i=K(r,[-1,1]),a=Re(t,i);return K(a,[a.size])}else{const i=K(r,[r.shape[0],r.shape[1]]);return Re(t,i)}}const _0=P({dot_:iS});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aS(n,...e){const t=e.map((s,o)=>_(s,`tensors${o}`,"einsum")),r={equation:n};return L.runKernel(Eh,t,r)}const is=P({einsum_:aS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uS(n){const t={x:_(n,"x","elu","float32")};return L.runKernel(Ih,t)}const Xf=P({elu_:uS});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cS(n,e){const t=_(n,"x","ensureShape","string_or_numeric");if(!qg(t.shape,e))throw new Error(`EnsureShape: Shape of tensor ${t.shape} is not compatible with expected shape ${e}`);return n}const A0=P({ensureShape_:cS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lS(n){let e=_(n,"x","erf");A(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=Se(e,"float32"));const t={x:e};return L.runKernel(kh,t)}const O0=P({erf_:lS});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qf(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function D0(n,e,t){const r=n.length+e.length,s=[];let o=0,i=0;for(let a=0;a<r;a++)t.indexOf(a)===-1?s.push(n[o++]):s.push(e[i++]);return s}function Xn(n,e){const t=[],r=n.length;for(let o=0;o<r;o++)e.indexOf(o)===-1&&t.push(n[o]);const s=e.map(o=>n[o]);return[t,s]}function Qt(n,e){const t=e.map(r=>1);return D0(n,t,e)}function Pn(n,e,t){A(qf(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function hn(n,e){if(qf(n,e))return null;const t=[];for(let r=0;r<e;++r)n.indexOf(r)===-1&&t.push(r);return n.forEach(r=>t.push(r)),t}function Yf(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function dn(n,e){const t=[];for(let r=e-n;r<e;++r)t.push(r);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hS(n,e=null,t=!1){const s={x:_(n,"x","max")},o={reductionIndices:e,keepDims:t};return L.runKernel(od,s,o)}const fs=P({max_:hS});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dS(n,e=null,t=!1){const s={x:_(n,"x","min")},o={axis:e,keepDims:t};return L.runKernel(hd,s,o)}const Ja=P({min_:dS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fS(n,e){let t=_(n,"base","pow"),r=_(e,"exp","pow");[t,r]=He(t,r);const s={a:t,b:r};return L.runKernel(Nd,s)}const Js=P({pow_:fS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function be(n,e){if((st(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&st(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Dr(n,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pS(n){const t={x:_(n,"x","sqrt","float32")};return L.runKernel(ef,t)}const Wn=P({sqrt_:pS});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mS(n){const e=_(n,"x","square"),t={};return L.runKernel("Square",{x:e},t)}const cn=P({square_:mS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gS(n,e=null,t=!1){let r=_(n,"x","sum");r.dtype==="bool"&&(r=Se(r,"int32"));const s={x:r},o={axis:e,keepDims:t};return L.runKernel(tf,s,o)}const Be=P({sum_:gS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yS(n,e="euclidean",t=null,r=!1){n=_(n,"x","norm");const s=F0(n,e,t);let o=s.shape;if(r){const i=tt(t,n.shape);o=Qt(s.shape,i)}return K(s,o)}function F0(n,e,t=null){if(n.rank===0)return Bt(n);if(n.rank!==1&&t===null)return F0(K(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return Be(Bt(n),t);if(e===1/0)return fs(Bt(n),t);if(e===-1/0)return Ja(Bt(n),t);if(e==="euclidean"||e===2)return Wn(Be(Js(Bt(n),be(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return fs(Be(Bt(n),t[0]),t[1]-1);if(e===1/0)return fs(Be(Bt(n),t[1]),t[0]);if(e===-1/0)return Ja(Be(Bt(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return Wn(Be(cn(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const ta=P({norm_:yS});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xS(n,e=null,t=!1){return ta(n,"euclidean",e,t)}const P0=P({euclideanNorm_:xS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bS(n){const t={x:_(n,"x","exp")};return L.runKernel(_h,t)}const Gn=P({exp_:bS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vS(n,e=0){const t=_(n,"x","expandDims","string_or_numeric");A(e<=t.rank,()=>"Axis must be <= rank of the tensor");const r={input:t},s={dim:e};return L.runKernel(Ah,r,s)}const yt=P({expandDims_:vS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wS(n){const t={x:_(n,"x","expm1")};return L.runKernel(Oh,t)}const L0=P({expm1_:wS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $S(n,e){const t=_(n,"x","tile","string_or_numeric");A(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const r={x:t},s={reps:e};return L.runKernel(xu,r,s)}const Xs=P({tile_:$S});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SS(n,e,t,r="float32"){e==null&&(e=n);const s=Ge([n,e],r),o=n<=e?n:e;for(let a=0;a<o;++a)s.set(1,a,a);const i=K(s.toTensor(),[n,e]);if(t==null)return i;if(t.length===1)return Xs(yt(i,0),[t[0],1,1]);if(t.length===2)return Xs(yt(yt(i,0),0),[t[0],t[1],1,1]);if(t.length===3)return Xs(yt(yt(yt(i,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const Qf=P({eye_:SS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CS(n){const t={x:_(n,"x","floor","float32")};return L.runKernel(Lh,t)}const Zf=P({floor_:CS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TS(n,e,t=0,r=0){const s=_(n,"x","gather"),o=_(e,"indices","gather","int32"),i={x:s,indices:o},a={axis:t,batchDims:r};return L.runKernel(Vh,i,a)}const Jf=P({gather_:TS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NS(n,e){let t=_(n,"a","greater","string_or_numeric"),r=_(e,"b","greater","string_or_numeric");[t,r]=He(t,r),Ne(t.shape,r.shape);const s={a:t,b:r};return L.runKernel(zh,s)}const lo=P({greater_:NS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ES(n,e){let t=_(n,"a","greaterEqual","string_or_numeric"),r=_(e,"b","greaterEqual","string_or_numeric");[t,r]=He(t,r),Ne(t.shape,r.shape);const s={a:t,b:r};return L.runKernel(Wh,s)}const ep=P({greaterEqual_:ES});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IS(n){const t={input:_(n,"input","imag")};return L.runKernel(jh,t)}const na=P({imag_:IS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kS(n){const t={x:_(n,"x","isFinite")};return L.runKernel(Hh,t)}const B0=P({isFinite_:kS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RS(n){const t={x:_(n,"x","isInf")};return L.runKernel(Kh,t)}const M0=P({isInf_:RS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _S(n){const t={x:_(n,"x","isNaN")};return L.runKernel(Xh,t)}const V0=P({isNaN_:_S});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AS(n,e=.2){const r={x:_(n,"x","leakyRelu")},s={alpha:e};return L.runKernel(qh,r,s)}const tp=P({leakyRelu_:AS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OS(n,e){let t=_(n,"a","less","string_or_numeric"),r=_(e,"b","less","string_or_numeric");[t,r]=He(t,r),Ne(t.shape,r.shape);const s={a:t,b:r};return L.runKernel(Yh,s)}const eu=P({less_:OS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DS(n,e){let t=_(n,"a","lessEqual","string_or_numeric"),r=_(e,"b","lessEqual","string_or_numeric");[t,r]=He(t,r),Ne(t.shape,r.shape);const s={a:t,b:r};return L.runKernel(Qh,s)}const wu=P({lessEqual_:DS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U0(n,e,t){if(t<=0)throw new Error("The number of values should be positive.");const r={start:n,stop:e,num:t};return L.runKernel(Zh,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FS(n,e=5,t=1,r=1,s=.5){const o=_(n,"x","localResponseNormalization");A(o.rank===4||o.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${o.rank}.`),A(ps(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let i=o,a=!1;o.rank===3&&(a=!0,i=K(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const u={x:i},c={depthRadius:e,bias:t,alpha:r,beta:s},h=L.runKernel(sd,u,c);return a?K(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const z0=P({localResponseNormalization_:FS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PS(n){const t={x:_(n,"x","log","float32")};return L.runKernel(Jh,t)}const eo=P({log_:PS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LS(n){const t={x:_(n,"x","log1p")};return L.runKernel(ed,t)}const np=P({log1p_:LS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BS(n){return A(Ir(n),()=>"The f passed in grad(f) must be a function"),(e,t)=>{const r=_(e,"x","tf.grad","string_or_numeric"),s=t!=null?_(t,"dy","tf.grad"):null;return L.tidy(()=>{const{value:o,grads:i}=L.gradients(()=>n(r),[r],s);return s!=null&&xt(o.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),$u(i),i[0]})}}function MS(n){return A(Ir(n),()=>"The f passed in grads(f) must be a function"),(e,t)=>{A(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const r=Ri(e,"args","tf.grads","string_or_numeric"),s=t!=null?_(t,"dy","tf.grads"):null;return L.tidy(()=>{const{value:o,grads:i}=L.gradients(()=>n(...r),r,s);return s!=null&&xt(o.shape,s.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),$u(i),i})}}function VS(n){return A(Ir(n),()=>"The f passed in valueAndGrad(f) must be a function"),(e,t)=>{A(e instanceof Te,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),A(t==null||t instanceof Te,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:r,value:s}=L.gradients(()=>n(e),[e],t);return $u(r),{grad:r[0],value:s}}}function US(n){return A(Ir(n),()=>"The f passed in valueAndGrads(f) must be a function"),(e,t)=>{A(Array.isArray(e)&&e.every(s=>s instanceof Te),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),A(t==null||t instanceof Te,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const r=L.gradients(()=>n(...e),e,t);return t!=null&&xt(r.value.shape,t.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),$u(r.grads),r}}function W0(n,e){A(Ir(n),()=>"The f passed in variableGrads(f) must be a function"),A(e==null||Array.isArray(e)&&e.every(c=>c instanceof ki),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const c in L.registeredVariables)e.push(L.registeredVariables[c])}const r=t?e.filter(c=>!c.trainable):null,s=e.length;e=e.filter(c=>c.trainable),A(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);const o=!0,{value:i,grads:a}=L.gradients(n,e,null,o);A(a.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),A(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);const u={};return e.forEach((c,h)=>{a[h]!=null&&(u[c.name]=a[h])}),r!=null&&r.forEach(c=>u[c.name]=null),{value:i,grads:u}}function jn(n){return L.customGrad(n)}function $u(n){if(n.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zS(n){const t={x:_(n,"x","neg")};return L.runKernel(yd,t)}const kn=P({neg_:zS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WS(n){const t={x:_(n,"x","softplus")};return L.runKernel(Jd,t)}const rp=P({softplus_:WS});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GS(n){const e=_(n,"x","logSigmoid");return jn(r=>({value:kn(rp(kn(r))),gradFunc:i=>Z(i,In(kn(r)))}))(e)}const G0=P({logSigmoid_:GS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jS(n,e){let t=_(n,"a","sub"),r=_(e,"b","sub");[t,r]=He(t,r);const s={a:t,b:r};return L.runKernel(yf,s)}const pe=P({sub_:jS});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HS(n,e=-1){const t=_(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return jn((s,o)=>{const a=fs(s,e,!0),u=pe(s,a),c=pe(Se(u,"float32"),eo(Be(Gn(u),e,!0)));return o([c]),{value:c,gradFunc:(d,f)=>{const[g]=f,x=!0,w=Gn(g);return pe(d,Z(Be(d,e,x),w))}}})(t)}const j0=P({logSoftmax_:HS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KS(n,e=null,t=!1){const r=_(n,"x","logSumExp"),s=tt(e,r.shape),o=fs(r,s,!0),i=pe(r,o),a=Gn(i),u=Be(a,s),c=eo(u),h=ue(K(o,c.shape),c);if(t){const d=Qt(h.shape,s);return K(h,d)}return h}const sp=P({logSumExp_:KS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XS(n,e){const t=_(n,"a","logicalAnd","bool"),r=_(e,"b","logicalAnd","bool");Ne(t.shape,r.shape);const s={a:t,b:r};return L.runKernel(td,s)}const Fi=P({logicalAnd_:XS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qS(n){const t={x:_(n,"x","logicalNot","bool")};return L.runKernel(nd,t)}const op=P({logicalNot_:qS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YS(n,e){const t=_(n,"a","logicalOr","bool"),r=_(e,"b","logicalOr","bool");Ne(t.shape,r.shape);const s={a:t,b:r};return L.runKernel(rd,s)}const ip=P({logicalOr_:YS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QS(n,e){const t=_(n,"a","logicalXor","bool"),r=_(e,"b","logicalXor","bool");return Ne(t.shape,r.shape),Fi(ip(n,e),op(Fi(n,e)))}const H0=P({logicalXor_:QS});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wa=2147483648;function ZS(n,e,t="left"){const r=_(n,"sortedSequence","searchSorted"),s=_(e,"values","searchSorted"),o=r.shape[r.shape.length-1],i=s.shape[s.shape.length-1],a=K(r,[-1,o]),u=K(s,[-1,i]);if(a.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(a.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(Y(u.shape)>=wa)throw new Error(`values tensor size must less than ${wa}`);if(a.shape[1]>=wa)throw new Error(`trailing dim_size must less than ${wa} for int32 output type, was ${a.shape[1]}`);const c={sortedSequence:a,values:u},h={side:t};return L.runKernel(jd,c,h)}const Su=P({searchSorted_:ZS});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K0(n,e){return Su(n,e,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JS(n,e,t,r,s){const o=_(n,"x","maxPool"),i=1;let a=o,u=!1;o.rank===3&&(u=!0,a=K(o,[1,o.shape[0],o.shape[1],o.shape[2]])),A(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),A(Gt(t,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),ln("maxPool",r,s);const c={x:a},h={filterSize:e,strides:t,pad:r,dimRoundingMode:s},d=L.runKernel(ad,c,h);return u?K(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const ap=P({maxPool_:JS});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eC(n,e=[1,1,1],t,r,s,o="NDHWC"){const i=_(n,"x","maxPool3d");let a=i,u=!1;i.rank===4&&(u=!0,a=K(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),A(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),A(o==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),ln("maxPool3d",r,s);const c={x:a},h={filterSize:e,strides:t,pad:r,dimRoundingMode:s,dataFormat:o},d=L.runKernel(ud,c,h);return u?K(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const X0=P({maxPool3d_:eC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tC(n,e,t,r,s=!1){const i={x:_(n,"x","maxPoolWithArgmax")},a={filterSize:e,strides:t,pad:r,includeBatchInIndex:s},u=L.runKernel(cd,i,a);return{result:u[0],indexes:u[1]}}const q0=P({maxPoolWithArgmax_:tC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nC(n,e){let t=_(n,"a","maximum"),r=_(e,"b","maximum");[t,r]=He(t,r),t.dtype==="bool"&&(t=Se(t,"int32"),r=Se(r,"int32")),Ne(t.shape,r.shape);const s={a:t,b:r};return L.runKernel(id,s)}const up=P({maximum_:nC});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rC(n,e=null,t=!1){const s={x:_(n,"x","mean")},o={axis:e,keepDims:t};return L.runKernel(ld,s,o)}const Pi=P({mean_:rC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _r(n,e="float32"){if(zt(n),e==="complex64"){const r=_r(n,"float32"),s=_r(n,"float32");return gr(r,s)}const t=mr(Y(n),e);return L.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tr(n,e="float32"){if(zt(n),e==="complex64"){const r=Tr(n,"float32"),s=_r(n,"float32");return gr(r,s)}const t=Dl(Y(n),e);return L.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y0(n,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(n===void 0)return[];let r=_(n,"x","meshgrid",n instanceof Te?n.dtype:"float32");if(e===void 0)return[r];let s=_(e,"y","meshgrid",e instanceof Te?e.dtype:"float32");const o=Y(r.shape),i=Y(s.shape);return t==="xy"?(r=K(r,[1,-1]),s=K(s,[-1,1]),[Re(Tr([i,1],r.dtype),r),Re(s,Tr([1,o],s.dtype))]):(r=K(r,[-1,1]),s=K(s,[1,-1]),[Re(r,Tr([1,i],r.dtype)),Re(Tr([o,1],s.dtype),s)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sC(n,e){let t=_(n,"a","minimum"),r=_(e,"b","minimum");[t,r]=He(t,r),t.dtype==="bool"&&(t=Se(t,"int32"),r=Se(r,"int32")),Ne(t.shape,r.shape);const s={a:t,b:r};return L.runKernel(dd,s)}const Li=P({minimum_:sC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oC(n,e,t){A(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const r=_(n,"x","mirrorPad");if(r.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");A(e.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${e.length}.`);const s=t==="reflect"?1:0;for(let a=0;a<r.rank;a++)A(e[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),A(e[a][0]>=0&&e[a][0]<=r.shape[a]-s&&e[a][1]>=0&&e[a][1]<=r.shape[a]-s,()=>`Padding in dimension ${a} cannot be greater than or equal to ${r.shape[a]-s} or less than 0 for input of shape ${r.shape}`);const o={paddings:e,mode:t},i={x:r};return L.runKernel(fd,i,o)}const cp=P({mirrorPad_:oC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iC(n,e){let t=_(n,"a","mod"),r=_(e,"b","mod");[t,r]=He(t,r);const s={a:t,b:r};return L.runKernel(pd,s)}const Q0=P({mod_:iC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aC(n,e=null,t=!1){n=_(n,"x","moments");const r=tt(e,n.shape),s=Pi(n,r,t);let o=s.shape;t||(o=Qt(s.shape,r));const i=cn(pe(Se(n,"float32"),K(s,o))),a=Pi(i,r,t);return{mean:s,variance:a}}const Z0=P({moments_:aC});function uC(n,e,t,r){const s=_(e,"data","multiRNNCell"),o=Ri(t,"c","multiRNNCell"),i=Ri(r,"h","multiRNNCell");let a=s;const u=[];for(let d=0;d<n.length;d++){const f=n[d](a,o[d],i[d]);u.push(f[0]),u.push(f[1]),a=f[1]}const c=[],h=[];for(let d=0;d<u.length;d+=2)c.push(u[d]),h.push(u[d+1]);return[c,h]}const J0=P({multiRNNCell_:uC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cC(n,e,t,r=!1){const s=_(n,"logits","multinomial"),o=s.size,i=s.rank;if(o<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${o}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);t=t||Math.random();const u={logits:i===1?K(s,[1,-1]):s},c={numSamples:e,seed:t,normalized:r},h=L.runKernel(md,u,c);return i===1?K(h,[h.size]):h}const ex=P({multinomial_:cC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lC(n,e){let t=_(n,"a","notEqual","string_or_numeric"),r=_(e,"b","notEqual","string_or_numeric");[t,r]=He(t,r),Ne(t.shape,r.shape);const s={a:t,b:r};return L.runKernel(xd,s)}const lp=P({notEqual_:lC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hC(n,e,t=1,r=0,s="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const i={indices:_(n,"indices","oneHot","int32")},a={dtype:s,depth:e,onValue:t,offValue:r};return L.runKernel(Sd,i,a)}const Bi=P({oneHot_:hC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dC(n){const t={x:_(n,"x","onesLike")};return L.runKernel($d,t)}const tx=P({onesLike_:dC});function fC(n,e){const t=_(n,"v1","outerProduct"),r=_(e,"v2","outerProduct");A(t.rank===1&&r.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${r.rank}.`);const s=K(t,[-1,1]),o=K(r,[1,-1]);return Re(s,o)}const nx=P({outerProduct_:fC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pC(n,e,t=0){const r=_(n,"x","pad");if(r.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:e,constantValue:t},o={x:r};return L.runKernel(Td,o,s)}const ks=P({pad_:pC});function mC(n,e,t=0){return A(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),ks(n,[e],t)}const rx=P({pad1d_:mC});function gC(n,e,t=0){return A(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),ks(n,e,t)}const sx=P({pad2d_:gC});function yC(n,e,t=0){return A(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),ks(n,e,t)}const hp=P({pad3d_:yC});function xC(n,e,t=0){return A(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),ks(n,e,t)}const ox=P({pad4d_:xC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bC(n,e,t){const r=_(n,"x","spaceToBatchND");A(r.rank>=1+e.length,()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`),A(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),A(r.shape.reduce((i,a,u)=>u>0&&u<=e.length?i&&(a+t[u-1][0]+t[u-1][1])%e[u-1]===0:i,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const s={x:r},o={blockShape:e,paddings:t};return L.runKernel(nf,s,o)}const dp=P({spaceToBatchND_:bC});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vC(n,e,t,r,s,o,i){s==null&&(s=[1,1]),o==null&&(o=1),r===0&&(r="valid");const a=_(n,"x","maxPool");let u=a,c=!1;a.rank===3&&(c=!0,u=K(a,[1,a.shape[0],a.shape[1],a.shape[2]])),A(Gt(o,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${s}'`);const h=Is(u.shape,e,o,s,r),d=[h.dilationHeight,h.dilationWidth];let f;r==="same"?f=$C([h.filterHeight,h.filterWidth],d):f=[[0,0],[0,0]];const g=d[0]===1&&d[1]===1,[x,w]=wC([h.inHeight,h.inWidth],d,f),b=g?r:"valid",$=g?u:dp(u,d,x),k=(t==="avg"?()=>Wf($,e,o,b,i):()=>ap($,e,o,b,i))(),I=g?k:Gf(k,d,w);return c?K(I,[I.shape[1],I.shape[2],I.shape[3]]):I}function wC(n,e,t){const r=t.map(h=>h[0]),s=t.map(h=>h[1]),o=n.concat(r,s),i=e.map((h,d)=>(h-o[d]%h)%h),a=s.map((h,d)=>h+i[d]),u=e.map((h,d)=>[r[d],a[d]]),c=e.map((h,d)=>[0,i[d]]);return[u,c]}function $C(n,e){const r=n.map((i,a)=>i+(i-1)*(e[a]-1)).map(i=>i-1),s=r.map(i=>Math.floor(i/2)),o=r.map((i,a)=>i-s[a]);return r.map((i,a)=>[s[a],o[a]])}const ix=P({pool_:vC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SC(n,e){const t=_(n,"x","prelu"),r=_(e,"alpha","prelu"),s={x:t,alpha:r};return L.runKernel(Ed,s)}const fp=P({prelu_:SC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CC(n,e=null,t=!1){let r=_(n,"x","prod");r.dtype==="bool"&&(r=Se(r,"int32"));const s={x:r},o={axis:e,keepDims:t};return L.runKernel(Id,s,o)}const ax=P({prod_:CC});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TC(n,e,t,r){const s=n.map((h,d)=>_(h,`tensors${d}`,"raggedGather","int32")),o=_(e,"paramsDenseValues","raggedGather"),i=_(t,"indices","raggedGather","int32"),a={paramsNestedSplits:s,paramsDenseValues:o,indices:i},u={outputRaggedRank:r},c=L.runKernel(kd,a,u);return{outputNestedSplits:c.slice(0,c.length-1),outputDenseValues:c[c.length-1]}}const ux=P({raggedGather_:TC});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NC(n,e,t){const r=_(n,"starts","raggedRange"),s=_(e,"limits","raggedRange",r.dtype),o=_(t,"deltas","raggedRange",r.dtype),i={starts:r,limits:s,deltas:o},a=L.runKernel(Rd,i);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}const cx=P({raggedRange_:NC});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EC(n,e,t,r,s){const o=_(n,"shape","raggedTensorToTensor","int32"),i=_(e,"values","raggedTensorToTensor"),a=_(t,"defaultValue","raggedTensorToTensor",i.dtype),u=r.map((d,f)=>_(d,`tensors${f}`,"raggedTensorToTensor","int32")),c={shape:o,values:i,defaultValue:a,rowPartitionTensors:u},h={rowPartitionTypes:s};return L.runKernel(_d,c,h)}const lx=P({raggedTensorToTensor_:EC});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IC(n,e,t){zt(n);const r=Y(n);let s=null;if(t==null||t==="float32")s=new Float32Array(r);else if(t==="int32")s=new Int32Array(r);else if(t==="bool")s=new Uint8Array(r);else throw new Error(`Unknown data type ${t}`);for(let o=0;o<r;o++)s[o]=e();return L.makeTensor(s,n,t)}const hx=P({rand_:IC});var pp={exports:{}};pp.exports;(function(n){(function(e,t,r){function s(u){var c=this,h=a();c.next=function(){var d=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=d-(c.c=d|0)},c.c=1,c.s0=h(" "),c.s1=h(" "),c.s2=h(" "),c.s0-=h(u),c.s0<0&&(c.s0+=1),c.s1-=h(u),c.s1<0&&(c.s1+=1),c.s2-=h(u),c.s2<0&&(c.s2+=1),h=null}function o(u,c){return c.c=u.c,c.s0=u.s0,c.s1=u.s1,c.s2=u.s2,c}function i(u,c){var h=new s(u),d=c&&c.state,f=h.next;return f.int32=function(){return h.next()*4294967296|0},f.double=function(){return f()+(f()*2097152|0)*11102230246251565e-32},f.quick=f,d&&(typeof d=="object"&&o(d,h),f.state=function(){return o(h,{})}),f}function a(){var u=4022871197,c=function(h){h=String(h);for(var d=0;d<h.length;d++){u+=h.charCodeAt(d);var f=.02519603282416938*u;u=f>>>0,f-=u,f*=u,u=f>>>0,f-=u,u+=f*4294967296}return(u>>>0)*23283064365386963e-26};return c}t&&t.exports?t.exports=i:this.alea=i})(qt,n)})(pp);var kC=pp.exports,mp={exports:{}};mp.exports;(function(n){(function(e,t,r){function s(a){var u=this,c="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var d=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^d^d>>>8},a===(a|0)?u.x=a:c+=a;for(var h=0;h<c.length+64;h++)u.x^=c.charCodeAt(h)|0,u.next()}function o(a,u){return u.x=a.x,u.y=a.y,u.z=a.z,u.w=a.w,u}function i(a,u){var c=new s(a),h=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var f=c.next()>>>11,g=(c.next()>>>0)/4294967296,x=(f+g)/(1<<21);while(x===0);return x},d.int32=c.next,d.quick=d,h&&(typeof h=="object"&&o(h,c),d.state=function(){return o(c,{})}),d}t&&t.exports?t.exports=i:this.xor128=i})(qt,n)})(mp);var RC=mp.exports,gp={exports:{}};gp.exports;(function(n){(function(e,t,r){function s(a){var u=this,c="";u.next=function(){var d=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(d^d<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,a===(a|0)?u.x=a:c+=a;for(var h=0;h<c.length+64;h++)u.x^=c.charCodeAt(h)|0,h==c.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function o(a,u){return u.x=a.x,u.y=a.y,u.z=a.z,u.w=a.w,u.v=a.v,u.d=a.d,u}function i(a,u){var c=new s(a),h=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var f=c.next()>>>11,g=(c.next()>>>0)/4294967296,x=(f+g)/(1<<21);while(x===0);return x},d.int32=c.next,d.quick=d,h&&(typeof h=="object"&&o(h,c),d.state=function(){return o(c,{})}),d}t&&t.exports?t.exports=i:this.xorwow=i})(qt,n)})(gp);var _C=gp.exports,yp={exports:{}};yp.exports;(function(n){(function(e,t,r){function s(a){var u=this;u.next=function(){var h=u.x,d=u.i,f,g;return f=h[d],f^=f>>>7,g=f^f<<24,f=h[d+1&7],g^=f^f>>>10,f=h[d+3&7],g^=f^f>>>3,f=h[d+4&7],g^=f^f<<7,f=h[d+7&7],f=f^f<<13,g^=f^f<<9,h[d]=g,u.i=d+1&7,g};function c(h,d){var f,g=[];if(d===(d|0))g[0]=d;else for(d=""+d,f=0;f<d.length;++f)g[f&7]=g[f&7]<<15^d.charCodeAt(f)+g[f+1&7]<<13;for(;g.length<8;)g.push(0);for(f=0;f<8&&g[f]===0;++f);for(f==8?g[7]=-1:g[f],h.x=g,h.i=0,f=256;f>0;--f)h.next()}c(u,a)}function o(a,u){return u.x=a.x.slice(),u.i=a.i,u}function i(a,u){a==null&&(a=+new Date);var c=new s(a),h=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var f=c.next()>>>11,g=(c.next()>>>0)/4294967296,x=(f+g)/(1<<21);while(x===0);return x},d.int32=c.next,d.quick=d,h&&(h.x&&o(h,c),d.state=function(){return o(c,{})}),d}t&&t.exports?t.exports=i:this.xorshift7=i})(qt,n)})(yp);var AC=yp.exports,xp={exports:{}};xp.exports;(function(n){(function(e,t,r){function s(a){var u=this;u.next=function(){var h=u.w,d=u.X,f=u.i,g,x;return u.w=h=h+1640531527|0,x=d[f+34&127],g=d[f=f+1&127],x^=x<<13,g^=g<<17,x^=x>>>15,g^=g>>>12,x=d[f]=x^g,u.i=f,x+(h^h>>>16)|0};function c(h,d){var f,g,x,w,b,$=[],N=128;for(d===(d|0)?(g=d,d=null):(d=d+"\0",g=0,N=Math.max(N,d.length)),x=0,w=-32;w<N;++w)d&&(g^=d.charCodeAt((w+32)%d.length)),w===0&&(b=g),g^=g<<10,g^=g>>>15,g^=g<<4,g^=g>>>13,w>=0&&(b=b+1640531527|0,f=$[w&127]^=g+b,x=f==0?x+1:0);for(x>=128&&($[(d&&d.length||0)&127]=-1),x=127,w=4*128;w>0;--w)g=$[x+34&127],f=$[x=x+1&127],g^=g<<13,f^=f<<17,g^=g>>>15,f^=f>>>12,$[x]=g^f;h.w=b,h.X=$,h.i=x}c(u,a)}function o(a,u){return u.i=a.i,u.w=a.w,u.X=a.X.slice(),u}function i(a,u){a==null&&(a=+new Date);var c=new s(a),h=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var f=c.next()>>>11,g=(c.next()>>>0)/4294967296,x=(f+g)/(1<<21);while(x===0);return x},d.int32=c.next,d.quick=d,h&&(h.X&&o(h,c),d.state=function(){return o(c,{})}),d}t&&t.exports?t.exports=i:this.xor4096=i})(qt,n)})(xp);var OC=xp.exports,bp={exports:{}};bp.exports;(function(n){(function(e,t,r){function s(a){var u=this,c="";u.next=function(){var d=u.b,f=u.c,g=u.d,x=u.a;return d=d<<25^d>>>7^f,f=f-g|0,g=g<<24^g>>>8^x,x=x-d|0,u.b=d=d<<20^d>>>12^f,u.c=f=f-g|0,u.d=g<<16^f>>>16^x,u.a=x-d|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,a===Math.floor(a)?(u.a=a/4294967296|0,u.b=a|0):c+=a;for(var h=0;h<c.length+20;h++)u.b^=c.charCodeAt(h)|0,u.next()}function o(a,u){return u.a=a.a,u.b=a.b,u.c=a.c,u.d=a.d,u}function i(a,u){var c=new s(a),h=u&&u.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var f=c.next()>>>11,g=(c.next()>>>0)/4294967296,x=(f+g)/(1<<21);while(x===0);return x},d.int32=c.next,d.quick=d,h&&(typeof h=="object"&&o(h,c),d.state=function(){return o(c,{})}),d}t&&t.exports?t.exports=i:this.tychei=i})(qt,n)})(bp);var DC=bp.exports,dx={exports:{}};const FC={},PC=Object.freeze(Object.defineProperty({__proto__:null,default:FC},Symbol.toStringTag,{value:"Module"})),LC=vw(PC);(function(n){(function(e,t,r){var s=256,o=6,i=52,a="random",u=r.pow(s,o),c=r.pow(2,i),h=c*2,d=s-1,f;function g(I,O,F){var M=[];O=O==!0?{entropy:!0}:O||{};var B=$(b(O.entropy?[I,k(t)]:I??N(),3),M),z=new x(M),G=function(){for(var U=z.g(o),Q=u,J=0;U<c;)U=(U+J)*s,Q*=s,J=z.g(1);for(;U>=h;)U/=2,Q/=2,J>>>=1;return(U+J)/Q};return G.int32=function(){return z.g(4)|0},G.quick=function(){return z.g(4)/4294967296},G.double=G,$(k(z.S),t),(O.pass||F||function(U,Q,J,se){return se&&(se.S&&w(se,z),U.state=function(){return w(z,{})}),J?(r[a]=U,Q):U})(G,B,"global"in O?O.global:this==r,O.state)}function x(I){var O,F=I.length,M=this,B=0,z=M.i=M.j=0,G=M.S=[];for(F||(I=[F++]);B<s;)G[B]=B++;for(B=0;B<s;B++)G[B]=G[z=d&z+I[B%F]+(O=G[B])],G[z]=O;(M.g=function(U){for(var Q,J=0,se=M.i,oe=M.j,le=M.S;U--;)Q=le[se=d&se+1],J=J*s+le[d&(le[se]=le[oe=d&oe+Q])+(le[oe]=Q)];return M.i=se,M.j=oe,J})(s)}function w(I,O){return O.i=I.i,O.j=I.j,O.S=I.S.slice(),O}function b(I,O){var F=[],M=typeof I,B;if(O&&M=="object")for(B in I)try{F.push(b(I[B],O-1))}catch{}return F.length?F:M=="string"?I:I+"\0"}function $(I,O){for(var F=I+"",M,B=0;B<F.length;)O[d&B]=d&(M^=O[d&B]*19)+F.charCodeAt(B++);return k(O)}function N(){try{var I;return f&&(I=f.randomBytes)?I=I(s):(I=new Uint8Array(s),(e.crypto||e.msCrypto).getRandomValues(I)),k(I)}catch{var O=e.navigator,F=O&&O.plugins;return[+new Date,e,F,e.screen,k(t)]}}function k(I){return String.fromCharCode.apply(0,I)}if($(r.random(),t),n.exports){n.exports=g;try{f=LC}catch{}}else r["seed"+a]=g})(typeof self<"u"?self:qt,[],Math)})(dx);var BC=dx.exports,MC=kC,VC=RC,UC=_C,zC=AC,WC=OC,GC=DC,Rs=BC;Rs.alea=MC;Rs.xor128=VC;Rs.xorwow=UC;Rs.xorshift7=zC;Rs.xor4096=WC;Rs.tychei=GC;var vp=Rs;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jC=.001,fx=.1;function HC(n,e,t){return t==null&&(t=wp()),ll(n,e,(r,s)=>$p(r,s,t))}function wp(){return L.backend.floatPrecision()===32?jC:fx}function ll(n,e,t){let r=!0;if((st(n)||st(e))&&(r=!1),st(n)&&st(e)&&(r=!0),r){const i=n.constructor.name,a=e.constructor.name;if(i!==a)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${a}`)}if(Array.isArray(n)&&Array.isArray(e)){const i=zn(n),a=zn(e);if(!ze(i,a))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${a}]`)}const s=st(n)?n:Un(n),o=st(e)?e:Un(e);if(s.length!==o.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${o.length}.
Actual:   ${s}.
Expected: ${o}.`);for(let i=0;i<o.length;++i){const a=s[i],u=o[i];if(!t(a,u))throw new Error(`Arrays differ: actual[${i}] = ${a}, expected[${i}] = ${u}.
Actual:   ${s}.
Expected: ${o}.`)}typeof expect<"u"&&expect().nothing()}function KC(n,e){n().then(()=>e.fail(),()=>e()),typeof expect<"u"&&expect().nothing()}function XC(n,e){const t=typeof e=="string"||typeof e=="number"||typeof e=="boolean"?[e]:e;return cr(n)||cr(n[0])||cr(e)||cr(e[0])?ll(n,t,(r,s)=>r==s):ll(n,e,(r,s)=>$p(r,s,0))}function qC(n,e,t){if(t==null&&(t=wp()),!$p(n,e,t))throw new Error(`Numbers differ: actual === ${n}, expected === ${e}`);typeof expect<"u"&&expect().nothing()}function $p(n,e,t){return!isFinite(n)&&!isFinite(e)?!0:!(isNaN(n)||isNaN(e)||Math.abs(n-e)>t)}function YC(n,e,t){for(let r=0;r<n.length;r++)if(n[r]<e||n[r]>t)throw new Error(`Value out of range:${n[r]} low: ${e}, high: ${t}`)}function QC(n,e){const t=new Float32Array(n),r=new Float32Array(e);if(t.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${t.length}`);for(let s=0;s<r.length;s++)if(t[s]!==r[s])throw new Error(`Expected ArrayBuffer value at ${s} to be ${r[s]} but got ${t[s]} instead`)}function px(n){for(let e=0;e<n.length;e++){const t=n[e];Array.isArray(t)?px(t):n[e]=lr(t)}return n}function ZC(n){const e=document.createElement("video");return"playsInline"in e&&(e.playsInline=!0),e.muted=!0,e.loop=!0,e.style.position="fixed",e.style.left="0px",e.style.top="0px",e.preload="auto",e.appendChild(n),new Promise(t=>{e.addEventListener("loadeddata",r=>t(e)),e.load()})}async function JC(n){await n.play(),"requestVideoFrameCallback"in n&&await new Promise(e=>{n.requestVideoFrameCallback(e)})}const eT=Object.freeze(Object.defineProperty({__proto__:null,TEST_EPSILON_FLOAT16:fx,createVideoElement:ZC,encodeStrings:px,expectArrayBuffersEqual:QC,expectArraysClose:HC,expectArraysEqual:XC,expectNumbersClose:qC,expectPromiseToFail:KC,expectValuesInRange:YC,play:JC,testEpsilon:wp},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sp{constructor(e,t,r,s,o){this.mean=e,this.stdDev=t,this.dtype=r,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const i=o||Math.random();this.random=vp.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const s=this.nextVal;return this.nextVal=NaN,s}let e,t,r=!1;for(;!r;){let s,o,i;do s=2*this.random()-1,o=2*this.random()-1,i=s*s+o*o;while(i>=1||i===0);const a=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*s*a,t=this.mean+this.stdDev*o*a,(!this.truncated||this.isValidTruncated(e))&&(r=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class tT{constructor(e,t,r,s){this.alpha=e,this.beta=1/t,this.dtype=r;const o=s||Math.random();this.randu=vp.alea(o.toString()),this.randn=new Sp(0,1,r,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,r,s,o,i;for(;;){do s=this.randn.nextValue(),i=1+this.c*s;while(i<=0);if(i*=i*i,e=s*s,t=1-.331*e*e,r=.5*e+this.d*(1-i+Math.log(i)),o=this.randu(),o<t||Math.log(o)<r)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class nT{constructor(e=0,t=1,r,s){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=r,s==null&&(s=Math.random()),typeof s=="number"&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=vp.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rT(n,e,t=1,r="float32",s){if(zt(n),t==null&&(t=1),r==null&&(r="float32"),r!=="float32"&&r!=="int32")throw new Error(`Unsupported data type ${r}`);const o=new tT(e,t,r,s),i=Ge(n,r);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}const mx=P({randomGamma_:rT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sT(n,e=0,t=1,r,s){if(zt(n),r!=null&&r==="bool")throw new Error(`Unsupported data type ${r}`);const o=new Sp(e,t,r,!1,s),i=Ge(n,r);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}const Cp=P({randomNormal_:sT});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oT(n,e,t){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return Cp(n,0,1,e,t)}const gx=P({randomStandardNormal_:oT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iT(n,e=0,t=1,r="float32",s){zt(n);const o=Ge(n,r),i=new nT(e,t,null,s);for(let a=0;a<o.values.length;a++)o.values[a]=i.nextValue();return o.toTensor()}const Cu=P({randomUniform_:iT});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aT(n,e,t,r){return Cu(n,e,t,"int32",r)}const yx=P({randomUniformInt_:aT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ar(n,e,t=1,r="float32"){if(t===0)throw new Error("Cannot have a step of zero");const s={start:n,stop:e,step:t,dtype:r};return L.runKernel(Ad,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uT(n){const t={input:_(n,"input","real")};return L.runKernel(Od,t)}const to=P({real_:uT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cT(n){const t={x:_(n,"x","reciprocal")};return L.runKernel(Dd,t)}const xx=P({reciprocal_:cT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lT(n){const t={x:_(n,"x","relu")};return L.runKernel(Fd,t)}const ra=P({relu_:lT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hT(n){const t={x:_(n,"x","relu6")};return L.runKernel(Md,t)}const Tp=P({relu6_:hT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dT(n,e){const r={x:_(n,"x","reverse")},s={dims:e};return L.runKernel(Vd,r,s)}const Or=P({reverse_:dT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fT(n){const e=_(n,"x","reverse");return A(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),Or(e,0)}const bx=P({reverse1d_:fT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pT(n,e){const t=_(n,"x","reverse");return A(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),Or(t,e)}const vx=P({reverse2d_:pT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mT(n,e){const t=_(n,"x","reverse");return A(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),Or(t,e)}const wx=P({reverse3d_:mT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gT(n,e){const t=_(n,"x","reverse");return A(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),Or(t,e)}const $x=P({reverse4d_:gT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yT(n){const t={x:_(n,"x","round")};return L.runKernel(Ud,t)}const Np=P({round_:yT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xT(n){const t={x:_(n,"x","rsqrt","float32")};return L.runKernel(zd,t)}const Sx=P({rsqrt_:xT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bT(n){const t={x:_(n,"x","selu")};return L.runKernel(Kd,t)}const Cx=P({selu_:bT});function vT(n,e,t,r,s,o=[1,1],i="NHWC"){const a=_(n,"x","separableConv2d"),u=_(e,"depthwiseFilter","separableConv2d"),c=_(t,"pointwiseFilter","separableConv2d");let h=a,d=!1;if(a.rank===3&&(d=!0,h=K(a,[1,a.shape[0],a.shape[1],a.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");A(h.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${h.rank}.`),A(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),A(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),A(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),A(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const f=u.shape[2],g=u.shape[3];A(c.shape[2]===f*g,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${f*g}, but got ${c.shape[2]}.`);const x=vu(h,u,r,s,i,o),b=Ji(x,c,1,"valid",i);return d?K(b,[b.shape[1],b.shape[2],b.shape[3]]):b}const Tx=P({separableConv2d_:vT});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function wT(n,e){const t=_(n,"x","setdiff1d"),r=_(e,"y","setdiff1d");A(t.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${r.dtype}).`),A(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),A(r.rank===1,()=>`y should be 1D tensor, but got y (${r.shape}).`);const s=await t.data(),o=await r.data(),i=new Set(o);let a=0;for(let h=0;h<s.length;h++)i.has(s[h])||a++;const u=new gs([a],t.dtype),c=new gs([a],"int32");for(let h=0,d=0;h<s.length;h++)i.has(s[h])||(u.values[d]=s[h],c.values[d]=h,d++);return[u.toTensor(),c.toTensor()]}const Nx=wT;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $T(n){const t={x:_(n,"x","sign")};return L.runKernel(Qd,t)}const Ex=P({sign_:$T});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ST(n){const t={x:_(n,"x","sin","float32")};return L.runKernel(qd,t)}const Ix=P({sin_:ST});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CT(n){const t={x:_(n,"x","sinh")};return L.runKernel(Yd,t)}const kx=P({sinh_:CT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TT(n,e,t){const r=_(n,"x","slice1d");return A(r.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),xe(r,[e],[t])}const Rx=P({slice1d_:TT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NT(n,e,t){const r=_(n,"x","slice2d");return A(r.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),xe(r,e,t)}const _x=P({slice2d_:NT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ET(n,e,t){const r=_(n,"x","slice3d");return A(r.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),xe(r,e,t)}const Ax=P({slice3d_:ET});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IT(n,e,t){const r=_(n,"x","slice4d");return A(r.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),xe(r,e,t)}const Ox=P({slice4d_:IT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kT(n,e=-1){const t=_(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const r={logits:t},s={dim:e};return L.runKernel(sf,r,s)}const Dx=P({softmax_:kT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RT(n){A(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return L.runKernel(Dh,e)}const Tu=P({fft_:RT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _T(n){A(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return L.runKernel(Gh,e)}const Mi=P({ifft_:_T});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AT(n){const e=n.shape[n.shape.length-1],t=n.size/e;let r;if(e<=2){const s=K(n,[t,e]);r=Mi(s)}else{const s=[t,2*(e-1)],o=K(to(n),[t,e]),i=K(na(n),[t,e]),a=Or(xe(o,[0,1],[t,e-2]),1),u=Z(Or(xe(i,[0,1],[t,e-2]),1),be(-1)),c=it([o,a],1),h=it([i,u],1),d=K(gr(c,h),[s[0],s[1]]);r=Mi(d)}if(r=to(r),n.rank===3&&n.shape[0]!==0){const s=r,o=n.shape[0];r=K(r,[o,r.shape[0]/o,r.shape[1]]),s.dispose()}return r}const Ep=P({irfft_:AT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OT(n,e,t=0){const s={x:_(n,"x","split")},o={numOrSizeSplits:e,axis:t};return L.runKernel(rf,s,o)}const no=P({split_:OT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DT(n,e){A(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const r=n.size/t;let s;if(e!=null&&e<t){const x=n.shape.map(b=>0),w=n.shape.map(b=>b);w[n.shape.length-1]=e,s=xe(n,x,w),t=e}else if(e!=null&&e>t){const x=n.shape.map(w=>w);x[n.shape.length-1]=e-t,s=it([n,_r(x)],n.shape.length-1),t=e}else s=n;const o=Vt(s),i=K(gr(s,o),[r,t]),a=Tu(i),u=Math.floor(t/2)+1,c=to(a),h=na(a),d=no(c,[u,t-u],c.shape.length-1),f=no(h,[u,t-u],h.shape.length-1),g=s.shape.slice();return g[s.shape.length-1]=u,K(gr(d[0],f[0]),g)}const Nu=P({rfft_:DT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FT(n,e){let t=_(n,"a","squaredDifference"),r=_(e,"b","squaredDifference");[t,r]=He(t,r),Ne(t.shape,r.shape);const s={a:t,b:r},o={};return L.runKernel(hf,s,o)}const Ip=P({squaredDifference_:FT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PT(n,e){const t=_(n,"x","squeeze","string_or_numeric");return K(t,yr(t.shape,e).newShape)}const Pe=P({squeeze_:PT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LT(n,e=0){const t=Ri(n,"tensors","stack","string_or_numeric");A(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&A(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const r=t,s={axis:e};return L.runKernel(Cd,r,s)}const Hn=P({stack_:LT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BT(n,e=0){const r={x:_(n,"x","step")},s={alpha:e};return L.runKernel(Nf,r,s)}const kp=P({step_:BT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MT(n,e,t,r,s=0,o=0,i=0,a=0,u=0){const h={x:_(n,"x","stridedSlice","string_or_numeric")},d={begin:e,end:t,strides:r,beginMask:s,endMask:o,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:u};return L.runKernel(ff,h,d)}const Fx=P({stridedSlice_:MT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VT(n){const t={x:_(n,"x","tan","float32")};return L.runKernel(xf,t)}const Px=P({tan_:VT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dt(n,e){Ts(n);const t=zn(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Dr(n,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fr(n,e,t){if(Ts(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const r=zn(n,t);if(r.length!==2&&r.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Dr(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rp(n,e,t){if(Ts(n),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const r=zn(n,t);if(r.length!==3&&r.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Dr(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lx(n,e,t){if(Ts(n),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const r=zn(n,t);if(r.length!==4&&r.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Dr(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bx(n,e,t){if(Ts(n),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const r=zn(n,t);if(r.length!==5&&r.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Dr(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mx(n,e,t){if(Ts(n),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const r=zn(n,t);if(r.length!==6&&r.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||r,Dr(n,e,r,t)}function _p(n,e,t){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${r}, and batchDim: ${s}.`;if(t.rank<s)throw new Error(o+` update.rank < ${s}. `);if(n.length<r+(t.rank-s))throw new Error(o+` Output shape length < ${r+(t.rank-s)}`);if(t.rank!==s+n.length-r)throw new Error(o+` update.rank != ${s+n.length-r}`);for(let i=0;i<s;++i)if(t.shape[i]!==e.shape[i])throw new Error(o+` updates.shape[${i}] (${t.shape[i]}) != indices.shape[${i}] (${e.shape[i]}).`);for(let i=0;i<t.rank-s;++i)if(t.shape[i+s]!==n[i+r])throw new Error(o+` updates.shape[${i+s}] (${t.shape[i+s]}) != shape[${i+s}] (${n[i+s]})`)}function Eu(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}_p(t,e,n)}function sa(n,e,t){const r=e.shape.length,s=r>1?e.shape[r-1]:1,o=t.length;let i=1;for(let d=s;d<o;++d)i*=t[d];const a=s<1?1:s,u=Y(e.shape)/a,c=[...ot(t.slice(0,s)),1],h=Y(t);return{sliceRank:s,numUpdates:u,sliceSize:i,strides:c,outputSize:h}}const UT=Object.freeze(Object.defineProperty({__proto__:null,calculateShapes:sa,validateInput:Eu,validateUpdateShape:_p},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zT(n,e,t){const r=_(n,"tensor","tensorScatterupdate"),s=_(e,"indices","tensorScatterupdate","int32"),o=_(t,"updates","tensorScatterupdate");if(Eu(o,s,r.shape),r.dtype!==o.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${o.dtype}.`);const i={tensor:r,indices:s,updates:o},a={};return L.runKernel(Gd,i,a)}const Vx=P({tensorScatterUpdate_:zT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WT(n,e=1,t=!0){const r=_(n,"x","topk");if(r.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${e}`);const o={x:r},i={k:e,sorted:t},[a,u]=L.runKernel(vf,o,i);return{values:a,indices:u}}const Ux=P({topk_:WT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GT(n,e=0,t=1,r,s){if(zt(n),r!=null&&r==="bool")throw new Error("Unsupported data type $ { dtype }");const o=new Sp(e,t,r,!0,s),i=Ge(n,r);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}const zx=P({truncatedNormal_:GT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jT(n,e=0){const t=_(n,"x","unique","string_or_numeric");A(t.rank>0,()=>"The input tensor must be at least 1D");const r={x:t},s={axis:e},[o,i]=L.runKernel($f,r,s);return{values:o,indices:i}}const Wx=P({unique_:jT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HT(n,e,t){const r=_(n,"x","unsortedSegmentSum"),s=_(e,"segmentIds","unsortedSegmentSum","int32");A(ps(t),()=>"numSegments must be of dtype int");const o={x:r,segmentIds:s},i={numSegments:t};return L.runKernel(Cf,o,i)}const Gx=P({unsortedSegmentSum_:HT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KT(n,e=0){const t=_(n,"x","unstack","string_or_numeric");A(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const r={value:t},s={axis:e};return L.runKernel(Sf,r,s)}const Fr=P({unstack_:KT});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jx(n,e){return Su(n,e,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hx(n,e=!0,t,r){return L.makeVariable(n,e,t,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ap(n,e){const t=[];for(let o=0;o<e.length;o++)e[o]&&t.push(o);const r=Ge(n,"int32"),s=Ge([t.length,n.length],"int32");for(let o=0;o<t.length;o++){const i=r.indexToLoc(t[o]),a=o*n.length;s.values.set(i,a)}return s.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function XT(n){const e=_(n,"condition","whereAsync","bool"),t=await e.data(),r=Ap(e.shape,t);return n!==e&&e.dispose(),r}const Op=XT;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function qT(n,e,t){const r=_(n,"tensor","boolMask"),s=_(e,"mask","boolMask","bool"),o=t??0,i=s.rank,a=r.shape;A(i>0,()=>"mask cannot be scalar"),xt(a.slice(o,o+i),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let w=o;w<o+i;w++)u*=a[w];const c=a.slice(0,o).concat([u],a.slice(o+i)),h=K(r,c),d=K(s,[-1]),f=await Op(d),g=Pe(f,[1]),x=Jf(h,g,o);return n!==r&&r.dispose(),e!==s&&s.dispose(),g.dispose(),h.dispose(),d.dispose(),f.dispose(),x}const Kx=qT;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YT(n,e,t){const r=_(n,"x","transpose");if(e==null&&(e=r.shape.map((i,a)=>a).reverse()),A(r.rank===e.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${e}.`),e.forEach(i=>{A(i>=0&&i<r.rank,()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${e}`)}),r.rank<=1)return r.clone();const s={x:r},o={perm:e};return r.dtype==="complex64"?ce(()=>{let i=to(r),a=na(r);return i=L.runKernel(Ci,{x:i},o),a=L.runKernel(Ci,{x:a},o),t&&(a=kn(a)),gr(i,a)}):L.runKernel(Ci,s,o)}const Vi=P({transpose_:YT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QT(n,e,t,r,s=!0){const o=_(n,"v","movingAverage"),i=_(e,"x","movingAverage"),a=_(t,"decay","movingAverage");Ry(o,i),A(ze(o.shape,i.shape),()=>"Shape mismatch in v and x");const u=be(1),c=pe(u,a);let h=Z(pe(i,o),c);if(s){A(r!=null,()=>"When using zeroDebias: true, step is required.");const d=_(r,"step","movingAverage");h=ve(h,pe(u,Js(a,d)))}return ue(o,h)}const Xx=P({movingAverage_:QT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZT(n,e,t){zt(t);const r=_(n,"indices","scatterND","int32"),s=_(e,"updates","scatterND");Eu(s,r,t);const o={indices:r,updates:s},i={shape:t};return L.runKernel(Wd,o,i)}const qx=P({scatterND_:ZT});function JT(n,e,t,r){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const s=n.rank>0?n.shape[0]:1,o=n.rank>1?n.shape[1]:1;if(t.length!==o)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${o}.`);const i=e.size;if(!(e.rank===0||e.rank===1&&i===s))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${s}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eN(n,e,t,r=0){zt(t);const s=_(n,"sparseIndices","sparseToDense","int32"),o=_(e,"sparseValues","sparseToDense","string_or_numeric"),i=_(r,"defaultValue","sparseToDense",o.dtype);JT(s,o,t,i);const a={sparseIndices:s,sparseValues:o,defaultValue:i},u={outputShape:t};return L.runKernel(lf,a,u)}const Yx=P({sparseToDense_:eN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tN(n,e){const t=_(e,"indices","gatherND","int32"),s={params:_(n,"x","gatherND","string_or_numeric"),indices:t};return L.runKernel(Uh,s)}const Qx=P({gatherND_:tN});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nN(n,e){if(e==null)return n.shape.slice();if(ze(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let r=0;r<n.shape.length;r++)e[r]==null&&n.shape[r]!=null?t.push(n.shape[r]):t.push(e[r]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rN(n,e,t,r){const s=_(n,"x","dropout");if(A(s.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),A(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof Te?s.clone():s;const o=nN(s,t),i=1-e,a=ve(Zf(ue(Cu(o,0,1,"float32",r),i)),i);return Z(s,a)}const Zx=P({dropout_:rN});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dp(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function Iu(n,e,t){const r=1-n%2,s=new Float32Array(n);for(let o=0;o<n;++o){const i=2*Math.PI*o/(n+r-1);s[o]=e-t*Math.cos(i)}return dt(s,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function sN(n,e,t=1){const r=_(n,"predictions","inTopK"),s=_(e,"targets","inTopK");A(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),A(r.rank-1===s.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`),xt(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const o=r.shape[r.shape.length-1];A(t>0&&t<=o,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${o}), but got ${t}`);const i=await r.data(),a=await s.data(),[u,c]=[i.length/o,o],h=pr("bool",u);for(let d=0;d<u;d++){const f=d*c,g=i.subarray(f,f+c),x=[];for(let w=0;w<g.length;w++)x.push({value:g[w],index:w});x.sort((w,b)=>b.value-w.value),h[d]=0;for(let w=0;w<t;w++)if(x[w].index===a[d]){h[d]=1;break}}return n!==r&&r.dispose(),e!==s&&s.dispose(),un(h,s.shape,"bool")}const Jx=sN;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oN(n,e,t,r,s,o="NHWC",i){let a=n;n.rank===3&&(a=K(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=e;u.rank===3&&(u=K(e,[1,e.shape[0],e.shape[1],e.shape[2]])),A(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),A(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),A(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const c=o==="NHWC"?a.shape[3]:a.shape[1],h=o==="NHWC"?u.shape[3]:u.shape[1];A(c===t[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${t[2]}.`),A(h===t[3],()=>`Error in conv2dDerFilter: depth of dy (${h}) must match output depth for filter (${t[3]}).`),ln("conv2dDerFilter",s,i);const d={x:a,dy:u},f={strides:r,pad:s,dataFormat:o,dimRoundingMode:i,filterShape:t};return L.runKernel(ch,d,f)}const iN=P({conv2DBackpropFilter_:oN});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ku(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return Z(n,kp(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function Ru(n,e){let t=e;const r=Kf(n.shape,e.shape);return r.length>0&&(t=Be(t,r)),K(t,n.shape)}function _u(n,e,t,r){if(e==="linear")return n;if(e==="relu")return ra(n);if(e==="elu")return Xf(n);if(e==="relu6")return Tp(n);if(e==="prelu")return fp(n,t);if(e==="leakyrelu")return tp(n,r);if(e==="sigmoid")return In(n);throw new Error(`Unknown fused activation ${e}.`)}const Au=(n,e)=>!(n>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aN({x:n,filter:e,strides:t,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:a,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:h}){if(u=u||"linear",Au(L.state.gradientDepth,u)===!1){A(s==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let F=Ji(n,e,t,r,s,o,i);return a!=null&&(F=ue(F,a)),_u(F,u,c,h)}const d=_(n,"x","conv2d","float32"),f=_(e,"filter","conv2d","float32");let g=d,x=!1;d.rank===3&&(x=!0,g=K(d,[1,d.shape[0],d.shape[1],d.shape[2]])),A(g.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${g.rank}.`),A(f.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${f.rank}.`),ln("fused conv2d",r,i);const w=s==="NHWC"?g.shape[3]:g.shape[1];A(f.shape[2]===w,()=>`Error in conv2d: depth of input (${w}) must match input depth for filter ${f.shape[2]}.`),A(Gt(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`);const b=Yt(g.shape,f.shape,t,o,r,i);let $;a!=null&&($=_(a,"bias","fused conv2d"),[$]=He($,d),s==="NHWC"?Ne(b.outShape,$.shape):(A($.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${$.shape.length}.`),A($.shape.length===0||$.shape[0]===b.outChannels||$.shape[0]===1,()=>`Error in fused conv2d: bias shape (${$.shape}) is not compatible with the number of output channels (${b.outChannels})`)));let N;if(c!=null){const F=c.shape;if(A(F.length<=1||F.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${F.length}.`),F.length===1)A(F[0]===1||F[0]===b.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${F}) is not compatible with the number of output channels (${b.outChannels}).`);else if(F.length===3)try{Ne(F,b.outShape)}catch{const B=`Error in fused conv2d: PReLU activation weights (${F}) is not compatible with the output shape of the conv2d (${b.outShape}).`;throw Error(B)}N=_(c,"prelu weights","fused conv2d")}const k=(F,M)=>{A(s==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`);const[B,z,G,U]=M,Q=ku(F,G,u);A(Oi(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const J=x0(z.shape,Q,B,t,r),se=iN(z,Q,B.shape,t,r),oe=[J,se];if(U!=null){const le=Ru(U,Q);oe.push(le)}return oe},I={x:g,filter:f,bias:$,preluActivationWeights:N},O={strides:t,pad:r,dataFormat:s,dilations:o,dimRoundingMode:i,activation:u,leakyreluAlpha:h};return a==null?jn((M,B,z)=>{let G=L.runKernel(Xa,I,O);return z([B,M,G]),x&&(G=K(G,[G.shape[1],G.shape[2],G.shape[3]])),{value:G,gradFunc:k}})(g,f):jn((M,B,z,G)=>{let U=L.runKernel(Xa,I,O);return G([B,M,U,z]),x&&(U=K(U,[U.shape[1],U.shape[2],U.shape[3]])),{value:U,gradFunc:k}})(g,f,$)}const uN=P({fusedConv2d_:aN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cN(n,e,t,r,s,o=[1,1],i){let a=n;n.rank===3&&(a=K(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=e;u.rank===3&&(u=K(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={x:a,dy:u},h={strides:r,pad:s,dimRoundingMode:i,dilations:o,filterShape:t};return L.runKernel(wh,c,h)}const lN=P({depthwiseConv2dNativeBackpropFilter_:cN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hN(n,e,t,r,s,o=[1,1],i){let a=e,u=!1;e.rank===3&&(u=!0,a=K(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={dy:a,filter:t},h={strides:r,pad:s,dimRoundingMode:i,dilations:o,inputShape:n},d=L.runKernel($h,c,h);return u?K(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const dN=P({depthwiseConv2dNativeBackpropInput_:hN});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fN({x:n,filter:e,strides:t,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:i,bias:a,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:h}){if(Au(L.state.gradientDepth,u)===!1){let O=vu(n,e,t,r,s,o,i);return a!=null&&(O=ue(O,a)),_u(O,u,c,h)}const d=_(n,"x","depthwiseConv2d","float32"),f=_(e,"filter","depthwiseConv2d","float32");let g=d,x=!1;d.rank===3&&(x=!0,g=K(d,[1,d.shape[0],d.shape[1],d.shape[2]])),A(g.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${g.rank}.`),A(f.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${f.rank}.`),A(g.shape[3]===f.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${g.shape[3]}) must match the inChannels dimension in filter ${f.shape[2]}.`),o==null&&(o=[1,1]),A(Gt(t,o),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),ln("fused depthwiseConv2d",r,i);const w=Yt(g.shape,f.shape,t,o,r,i,!0);let b;a!=null&&(b=_(a,"bias","fused conv2d"),[b]=He(b,d),Ne(w.outShape,b.shape));let $;c!=null&&($=_(c,"prelu weights","fused depthwiseConv2d"));const N=(O,F)=>{A(Oi(o),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[M,B,z,G]=F,U=ku(O,z,u),Q=dN(B.shape,U,M,t,r,o,i),J=lN(B,U,M.shape,t,r,o,i);if(G!=null){const se=Ru(b,U);return[Q,J,se]}return[Q,J]},k={x:g,filter:f,bias:b,preluActivationWeights:$},I={strides:t,pad:r,dataFormat:s,dilations:o,dimRoundingMode:i,activation:u,leakyreluAlpha:h};return a==null?jn((F,M,B)=>{let z=L.runKernel(qa,k,I);return B([M,F,z]),x&&(z=K(z,[z.shape[1],z.shape[2],z.shape[3]])),{value:z,gradFunc:N}})(g,f):jn((F,M,B,z)=>{let G=L.runKernel(qa,k,I);return z([M,F,G,B]),x&&(G=K(G,[G.shape[1],G.shape[2],G.shape[3]])),{value:G,gradFunc:N}})(g,f,b)}const pN=P({fusedDepthwiseConv2d_:fN});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mN({a:n,b:e,transposeA:t=!1,transposeB:r=!1,bias:s,activation:o="linear",preluActivationWeights:i,leakyreluAlpha:a=.2}){if(Au(L.state.gradientDepth,o)===!1){let U=Re(n,e,t,r);return s!=null&&(U=ue(U,s)),_u(U,o,i,a)}let u=_(n,"a","fused matMul"),c=_(e,"b","fused matMul");[u,c]=He(u,c);const h=t?u.shape[u.rank-2]:u.shape[u.rank-1],d=r?c.shape[c.rank-1]:c.shape[c.rank-2],f=t?u.shape[u.rank-1]:u.shape[u.rank-2],g=r?c.shape[c.rank-2]:c.shape[c.rank-1],x=u.shape.slice(0,-2),w=c.shape.slice(0,-2),b=Y(x),$=Y(w);A(h===d,()=>`Error in fused matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${u.shape} and ${c.shape} and transposeA=${t} and transposeB=${r} must match.`);const k=Ne(u.shape.slice(0,-2),c.shape.slice(0,-2)).concat([f,g]),I=t?K(u,[b,h,f]):K(u,[b,f,h]),O=r?K(c,[$,g,d]):K(c,[$,d,g]);let F;s!=null&&(F=_(s,"bias","fused matMul"),[F]=He(F,u),Ne(k,F.shape));let M;i!=null&&(M=_(i,"prelu weights","fused matMul"));const B=(U,Q)=>{const[J,se,oe,le]=Q,ge=ku(K(U,oe.shape),oe,o);let $e,Ce;if(!t&&!r?($e=Re(ge,se,!1,!0),Ce=Re(J,ge,!0,!1)):!t&&r?($e=Re(ge,se,!1,!1),Ce=Re(ge,J,!0,!1)):t&&!r?($e=Re(se,ge,!1,!0),Ce=Re(J,ge,!1,!1)):($e=Re(se,ge,!0,!0),Ce=Re(ge,J,!0,!0)),s!=null){const at=Ru(le,ge);return[$e,Ce,at]}else return[$e,Ce]},z={a:I,b:O,bias:F,preluActivationWeights:M},G={transposeA:t,transposeB:r,activation:o,leakyreluAlpha:a};return s==null?jn((Q,J,se)=>{const oe=L.runKernel(Ka,z,G);return se([Q,J,oe]),{value:K(oe,k),gradFunc:B}})(I,O):jn((Q,J,se,oe)=>{const le=L.runKernel(Ka,z,G);return oe([Q,J,le,se]),{value:K(le,k),gradFunc:B}})(I,O,F)}const gN=P({fusedMatMul_:mN});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e1=Object.freeze(Object.defineProperty({__proto__:null,conv2d:uN,depthwiseConv2d:pN,matMul:gN},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yN(n){return Iu(n,.54,.46)}const xN=P({hammingWindow_:yN});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bN(n){return Iu(n,.5,.5)}const t1=P({hannWindow_:bN});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vN(n,e,t,r=!1,s=0){let o=0;const i=[];for(;o+e<=n.size;)i.push(xe(n,o,e)),o+=t;if(r)for(;o<n.size;){const a=o+e-n.size,u=it([xe(n,o,e-a),co([a],s)]);i.push(u),o+=t}return i.length===0?fr([],[0,e]):K(it(i),[i.length,e])}const n1=P({frame_:vN});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wN(n,e,t,r,s=t1){r==null&&(r=Dp(e));const o=n1(n,e,t),i=Z(o,s(e));return Nu(i,r)}const $N=P({stft_:wN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SN(n,e,t,r,s="bilinear",o=0){const i=_(n,"image","cropAndResize"),a=_(e,"boxes","cropAndResize","float32"),u=_(t,"boxInd","cropAndResize","int32"),c=a.shape[0];A(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),A(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${a.shape}.`),A(u.rank===1&&u.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${a.shape}.`),A(r.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),A(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),A(s==="bilinear"||s==="nearest",()=>`method must be bilinear or nearest, but was ${s}`);const h={image:i,boxes:a,boxInd:u},d={method:s,extrapolationValue:o,cropSize:r};return L.runKernel(yh,h,d)}const CN=P({cropAndResize_:SN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TN(n){const e=_(n,"image","flipLeftRight","float32");A(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return L.runKernel(Ph,t,{})}const NN=P({flipLeftRight_:TN});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EN(n){const e=_(n,"image","grayscaleToRGB"),t=e.rank-1,r=e.shape[t];A(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),A(r===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);const s=new Array(e.rank);return s.fill(1,0,t),s[t]=3,Xs(e,s)}const IN=P({grayscaleToRGB_:EN});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kN(n){const e=_(n,"image","RGBToGrayscale"),t=e.rank-1,r=e.shape[t];A(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),A(r===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`);const s=e.dtype,o=Se(e,"float32"),i=dt([.2989,.587,.114]);let a;switch(e.rank){case 2:a=is("ij,j->i",o,i);break;case 3:a=is("ijk,k->ij",o,i);break;case 4:a=is("ijkl,l->ijk",o,i);break;case 5:a=is("ijklm,m->ijkl",o,i);break;case 6:a=is("ijklmn,n->ijklm",o,i);break;default:throw new Error("Not a valid tensor rank.")}return a=yt(a,-1),Se(a,s)}const RN=P({rgbToGrayscale_:kN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _N(n,e,t=0,r=.5){const s=_(n,"image","rotateWithOffset","float32");A(s.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`);const o={image:s},i={radians:e,fillValue:t,center:r};return L.runKernel(Ef,o,i)}const AN=P({rotateWithOffset_:_N});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ho(n,e,t,r,s,o){r==null&&(r=.5),s==null&&(s=Number.NEGATIVE_INFINITY),o==null&&(o=0);const i=n.shape[0];return t=Math.min(t,i),A(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),A(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),A(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),A(e.rank===1,()=>"scores must be a 1D tensor"),A(e.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${e.shape[0]}`),A(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:t,iouThreshold:r,scoreThreshold:s,softNmsSigma:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ON(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY){const o=_(n,"boxes","nonMaxSuppression","float32"),i=_(e,"scores","nonMaxSuppression","float32"),a=ho(o,i,t,r,s);t=a.maxOutputSize,r=a.iouThreshold,s=a.scoreThreshold;const u={maxOutputSize:t,iouThreshold:r,scoreThreshold:s};return L.runKernel(bd,{boxes:o,scores:i},u)}const DN=P({nonMaxSuppression_:ON});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FN(n,e,t){const r=PN(n,e,t),s=r<0?-(r+1):r;n.splice(s,0,e)}function PN(n,e,t){return BN(n,e,t||LN)}function LN(n,e){return n>e?1:n<e?-1:0}function BN(n,e,t){let r=0,s=n.length,o=0,i=!1;for(;r<s;){o=r+(s-r>>>1);const a=t(e,n[o]);a>0?r=o+1:(s=o,i=!a)}return i?r:-r-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fp(n,e,t,r,s){return Bp(n,e,t,r,s,0)}function Pp(n,e,t,r,s,o){return Bp(n,e,t,r,s,0,!1,o,!0)}function Lp(n,e,t,r,s,o){return Bp(n,e,t,r,s,o,!0)}function Bp(n,e,t,r,s,o,i=!1,a=!1,u=!1){const c=[];for(let b=0;b<e.length;b++)e[b]>s&&c.push({score:e[b],boxIndex:b,suppressBeginIndex:0});c.sort(Im);const h=o>0?-.5/o:0,d=[],f=[];for(;d.length<t&&c.length>0;){const b=c.pop(),{score:$,boxIndex:N,suppressBeginIndex:k}=b;if($<s)break;let I=!1;for(let O=d.length-1;O>=k;--O){const F=MN(n,N,d[O]);if(F>=r){I=!0;break}if(b.score=b.score*VN(r,h,F),b.score<=s)break}b.suppressBeginIndex=d.length,I||(b.score===$?(d.push(N),f.push(b.score)):b.score>s&&FN(c,b,Im))}const g=d.length,x=t-g;a&&x>0&&(d.push(...new Array(x).fill(0)),f.push(...new Array(x).fill(0)));const w={selectedIndices:d};return i&&(w.selectedScores=f),u&&(w.validOutputs=g),w}function MN(n,e,t){const r=n.subarray(e*4,e*4+4),s=n.subarray(t*4,t*4+4),o=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),a=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(s[0],s[2]),h=Math.min(s[1],s[3]),d=Math.max(s[0],s[2]),f=Math.max(s[1],s[3]),g=(a-o)*(u-i),x=(d-c)*(f-h);if(g<=0||x<=0)return 0;const w=Math.max(o,c),b=Math.max(i,h),$=Math.min(a,d),N=Math.min(u,f),k=Math.max($-w,0)*Math.max(N-b,0);return k/(g+x-k)}function VN(n,e,t){const r=Math.exp(e*t*t);return t<=n?r:0}function Im(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function UN(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY){const o=_(n,"boxes","nonMaxSuppressionAsync"),i=_(e,"scores","nonMaxSuppressionAsync"),a=ho(o,i,t,r,s);t=a.maxOutputSize,r=a.iouThreshold,s=a.scoreThreshold;const u=await Promise.all([o.data(),i.data()]),c=u[0],h=u[1],{selectedIndices:d}=Fp(c,h,t,r,s);return o!==n&&o.dispose(),i!==e&&i.dispose(),dt(d,"int32")}const zN=UN;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WN(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,o=0){const i=_(n,"boxes","nonMaxSuppression"),a=_(e,"scores","nonMaxSuppression"),u=ho(i,a,t,r,s,o);t=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,o=u.softNmsSigma;const c={boxes:i,scores:a},h={maxOutputSize:t,iouThreshold:r,scoreThreshold:s,softNmsSigma:o},d=L.runKernel(wd,c,h);return{selectedIndices:d[0],selectedScores:d[1]}}const GN=P({nonMaxSuppressionWithScore_:WN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function jN(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,o=0){const i=_(n,"boxes","nonMaxSuppressionAsync"),a=_(e,"scores","nonMaxSuppressionAsync"),u=ho(i,a,t,r,s,o);t=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,o=u.softNmsSigma;const c=await Promise.all([i.data(),a.data()]),h=c[0],d=c[1],{selectedIndices:f,selectedScores:g}=Lp(h,d,t,r,s,o);return i!==n&&i.dispose(),a!==e&&a.dispose(),{selectedIndices:dt(f,"int32"),selectedScores:dt(g)}}const HN=jN;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KN(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,o=!1){const i=_(n,"boxes","nonMaxSuppression"),a=_(e,"scores","nonMaxSuppression"),u=ho(i,a,t,r,s,null),c=u.maxOutputSize,h=u.iouThreshold,d=u.scoreThreshold,f={boxes:i,scores:a},g={maxOutputSize:c,iouThreshold:h,scoreThreshold:d,padToMaxOutputSize:o},x=L.runKernel(vd,f,g);return{selectedIndices:x[0],validOutputs:x[1]}}const XN=P({nonMaxSuppressionPadded_:KN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function qN(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,o=!1){const i=_(n,"boxes","nonMaxSuppressionAsync"),a=_(e,"scores","nonMaxSuppressionAsync"),u=ho(i,a,t,r,s,null),c=u.maxOutputSize,h=u.iouThreshold,d=u.scoreThreshold,[f,g]=await Promise.all([i.data(),a.data()]),{selectedIndices:x,validOutputs:w}=Pp(f,g,c,h,d,o);return i!==n&&i.dispose(),a!==e&&a.dispose(),{selectedIndices:dt(x,"int32"),validOutputs:be(w,"int32")}}const YN=qN;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QN(n,e,t=!1,r=!1){const s=_(n,"images","resizeBilinear");A(s.rank===3||s.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`),A(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),A(r===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=s,i=!1;s.rank===3&&(i=!0,o=K(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const a={images:o},u={alignCorners:t,halfPixelCenters:r,size:e},c=L.runKernel(Bd,a,u);return i?K(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const ZN=P({resizeBilinear_:QN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JN(n,e,t=!1,r=!1){const s=_(n,"images","resizeNearestNeighbor");A(s.rank===3||s.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`),A(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),A(s.dtype==="float32"||s.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),A(r===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=s,i=!1;s.rank===3&&(i=!0,o=K(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const a={images:o},u={alignCorners:t,halfPixelCenters:r,size:e},c=L.runKernel(Ld,a,u);return i?K(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const eE=P({resizeNearestNeighbor_:JN});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tE(n,e="binary",t=!1,r=.5){const s=_(n,"image","threshold"),o=.2989,i=.587,a=.114,u=s.shape[0]*s.shape[1];let c=Z(dt([r]),255),h,d,f,g;if(A(s.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`),A(s.shape[2]===3||s.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`),A(s.dtype==="int32"||s.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`),A(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),s.shape[2]===3){[h,d,f]=no(s,[1,1,1],-1);const b=Z(h,o),$=Z(d,i),N=Z(f,a);g=ue(ue(b,$),N)}else g=n;if(e==="otsu"){const b=jf(Se(Np(g),"int32"),un([]),256);c=nE(b,u)}const x=t?wu(g,c):lo(g,c);return Se(Z(x,255),"int32")}function nE(n,e){let t=dt([-1]),r=dt([0]),s=dt([0]),o,i,a,u,c,h;for(let d=0;d<n.size-1;d++){o=xe(n,0,d+1),i=xe(n,d+1),c=ve(Be(o),e),h=ve(Be(i),e);const f=Be(Z(o,Ar(0,o.size)));a=ve(f,Be(o));const g=co(i.shape,o.size),x=ue(Ar(0,i.size),g),w=Z(i,x);u=ve(Be(w),Be(i));const b=pe(a,u),$=pe(a,u),N=Z(c,h);s=Z(Z(N,b),$);const k=lo(s,r);r=dr(k,s,r),t=dr(k,dt([d]),t)}return t}const rE=P({threshold_:tE});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sE(n,e,t="nearest",r="constant",s=0,o){const i=_(n,"image","transform","float32"),a=_(e,"transforms","transform","float32");A(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),A(a.rank===2&&(a.shape[0]===i.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),A(o==null||o.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`);const u={image:i,transforms:a},c={interpolation:t,fillMode:r,fillValue:s,outputShape:o};return L.runKernel(wf,u,c)}const oE=P({transform_:sE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iE(n,e,t){const r=_(n,"a","bandPart");A(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const s=r.shape,[o,i]=r.shape.slice(-2);let a,u;typeof e=="number"?(A(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),A(e<=o,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${o}).`),a=_(e<0?o:e,"numLower","bandPart")):(A(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),a=dr(eu(e,0),o,Li(e,o))),typeof t=="number"?(A(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`),A(t<=i,()=>`bandPart(): numUpper (${t}) must not be greater than the number of columns (${i}).`),u=_(t<0?i:t,"numUpper","bandPart")):(A(t.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),u=dr(eu(t,0),i,Li(t,i)));const c=K(Ar(0,o,1,"int32"),[-1,1]),h=Ar(0,i,1,"int32"),d=pe(c,h),f=Fi(wu(d,a),ep(d,kn(u))),g=_r([o,i],r.dtype);return K(Hn(Fr(K(r,[-1,o,i])).map(x=>dr(f,x,g))),s)}const aE=P({bandPart_:iE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uE(n){let e;if(Array.isArray(n)){e=!1,A(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const s=n[0].shape[0];for(let o=1;o<n.length;++o)A(n[o].shape[0]===s,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[o].shape[0]} vs. ${s})`)}else e=!0,n=no(n,n.shape[0],0).map(s=>Pe(s,[0]));A(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],r=n;for(let s=0;s<n.length;++s)t.push(L.tidy(()=>{let o=r[s];if(s>0)for(let i=0;i<s;++i){const a=Z(Be(Z(t[i],o)),t[i]);o=pe(o,a)}return ve(o,ta(o,"euclidean"))}));return e?Hn(t,0):t}const cE=P({gramSchmidt_:uE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lE(n,e=!1){if(A(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return km(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((u,c)=>u*c),r=Fr(K(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),s=[],o=[];r.forEach(u=>{const[c,h]=km(u,e);s.push(c),o.push(h)});const i=K(Hn(s,0),n.shape),a=K(Hn(o,0),n.shape);return[i,a]}}function km(n,e=!1){return L.tidy(()=>{A(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],r=n.shape[1];let s=Qf(t),o=hr(n);const i=fr([[1]],[1,1]);let a=hr(i);const u=t>=r?r:t;for(let c=0;c<u;++c){const h=o,d=a,f=s;[a,o,s]=L.tidy(()=>{const g=xe(o,[c,c],[t-c,1]),x=ta(g),w=xe(o,[c,c],[1,1]),b=dr(lo(w,0),fr([[-1]]),fr([[1]])),$=pe(w,Z(b,x)),N=ve(g,$);N.shape[0]===1?a=hr(i):a=it([i,xe(N,[1,0],[N.shape[0]-1,N.shape[1]])],0);const k=kn(ve(Re(b,$),x)),I=xe(o,[c,0],[t-c,r]),O=Z(k,a),F=Vi(a);if(c===0)o=pe(I,Re(O,Re(F,I)));else{const z=pe(I,Re(O,Re(F,I)));o=it([xe(o,[0,0],[c,r]),z],0)}const M=Vi(O),B=xe(s,[0,c],[t,s.shape[1]-c]);if(c===0)s=pe(B,Re(Re(B,a),M));else{const z=pe(B,Re(Re(B,a),M));s=it([xe(s,[0,0],[t,c]),z],1)}return[a,o,s]}),We([h,d,f])}return!e&&t>r&&(s=xe(s,[0,0],[t,r]),o=xe(o,[0,0],[r,r])),[s,o]})}const hE=P({qr_:lE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Tt;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Tt||(Tt={}));function dE(n,e,t=Tt.SUM_BY_NONZERO_WEIGHTS){const r=_(n,"losses","computeWeightedLoss");let s=null;e!=null&&(s=_(e,"weights","computeWeightedLoss"));const o=s==null?r:Z(r,s);if(t===Tt.NONE)return o;if(t===Tt.SUM)return Be(o);if(t===Tt.MEAN){if(s==null)return Pi(o);{const i=r.size/s.size,a=ve(Be(o),Be(s));return i>1?ve(a,be(i)):a}}if(t===Tt.SUM_BY_NONZERO_WEIGHTS){if(s==null)return ve(Be(o),be(r.size));{const i=Z(s,Tr(r.shape)),a=Se(Be(lp(i,be(0))),"float32");return ve(Be(o),a)}}throw Error(`Unknown reduction: ${t}`)}const xr=P({computeWeightedLoss_:dE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fE(n,e,t,r=Tt.SUM_BY_NONZERO_WEIGHTS){const s=_(n,"labels","absoluteDifference"),o=_(e,"predictions","absoluteDifference");let i=null;t!=null&&(i=_(t,"weights","absoluteDifference")),xt(s.shape,o.shape,"Error in absoluteDifference: ");const a=Bt(pe(s,o));return xr(a,i,r)}const pE=P({absoluteDifference_:fE});function mE(n,e,t,r,s=Tt.SUM_BY_NONZERO_WEIGHTS){const o=_(n,"labels","cosineDistance"),i=_(e,"predictions","cosineDistance");let a=null;r!=null&&(a=_(r,"weights","cosineDistance")),xt(o.shape,i.shape,"Error in cosineDistance: ");const u=be(1),c=pe(u,Be(Z(o,i),t,!0));return xr(c,a,s)}const gE=P({cosineDistance_:mE});function yE(n,e,t,r=Tt.SUM_BY_NONZERO_WEIGHTS){let s=_(n,"labels","hingeLoss");const o=_(e,"predictions","hingeLoss");let i=null;t!=null&&(i=_(t,"weights","hingeLoss")),xt(s.shape,o.shape,"Error in hingeLoss: ");const a=be(1);s=pe(Z(be(2),s),a);const u=ra(pe(a,Z(s,o)));return xr(u,i,r)}const xE=P({hingeLoss_:yE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bE(n,e,t,r=1,s=Tt.SUM_BY_NONZERO_WEIGHTS){const o=_(n,"labels","huberLoss"),i=_(e,"predictions","huberLoss");let a=null;t!=null&&(a=_(t,"weights","huberLoss")),xt(o.shape,i.shape,"Error in huberLoss: ");const u=be(r),c=Bt(pe(i,o)),h=Li(c,u),d=pe(c,h),f=ue(Z(be(.5),cn(h)),Z(u,d));return xr(f,a,s)}const vE=P({huberLoss_:bE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wE(n,e,t,r=1e-7,s=Tt.SUM_BY_NONZERO_WEIGHTS){const o=_(n,"labels","logLoss"),i=_(e,"predictions","logLoss");let a=null;t!=null&&(a=_(t,"weights","logLoss")),xt(o.shape,i.shape,"Error in logLoss: ");const u=be(1),c=be(r),h=kn(Z(o,eo(ue(i,c)))),d=Z(pe(u,o),eo(ue(pe(u,i),c))),f=pe(h,d);return xr(f,a,s)}const $E=P({logLoss_:wE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SE(n,e,t,r=Tt.SUM_BY_NONZERO_WEIGHTS){const s=_(n,"labels","meanSquaredError"),o=_(e,"predictions","meanSquaredError");let i=null;t!=null&&(i=_(t,"weights","meanSquaredError")),xt(s.shape,o.shape,"Error in meanSquaredError: ");const a=Ip(s,o);return xr(a,i,r)}const CE=P({meanSquaredError_:SE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TE(n,e){const t=_(n,"labels","sigmoidCrossEntropyWithLogits"),r=_(e,"logits","sigmoidCrossEntropyWithLogits");xt(t.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=ra(r),o=Z(r,t),i=np(Gn(kn(Bt(r))));return ue(pe(s,o),i)}function NE(n,e,t,r=0,s=Tt.SUM_BY_NONZERO_WEIGHTS){let o=_(n,"multiClassLabels","sigmoidCrossEntropy");const i=_(e,"logits","sigmoidCrossEntropy");let a=null;if(t!=null&&(a=_(t,"weights","sigmoidCrossEntropy")),xt(o.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const c=be(r),h=be(1),d=be(.5);o=ue(Z(o,pe(h,c)),Z(d,c))}const u=TE(o,i);return xr(u,a,s)}const EE=P({sigmoidCrossEntropy_:NE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IE(n,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return jn((s,o,i)=>{const u=sp(o,[t],!0),c=pe(Se(o,"float32"),u);i([s,c]);const h=kn(Z(c,s));return{value:Be(h,[t]),gradFunc:(g,x)=>{const[w,b]=x,$=Qt(g.shape,[t]);return[Z(K(g,$),pe(Se(w,"float32"),Gn(b))),Z(K(g,$),pe(Gn(b),Se(w,"float32")))]}}})(n,e)}function kE(n,e,t,r=0,s=Tt.SUM_BY_NONZERO_WEIGHTS){let o=_(n,"onehotLabels","softmaxCrossEntropy");const i=_(e,"logits","softmaxCrossEntropy");let a=null;if(t!=null&&(a=_(t,"weights","softmaxCrossEntropy")),xt(o.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const c=be(r),h=be(1),d=be(o.shape[1]);o=ue(Z(o,pe(h,c)),ve(c,d))}const u=IE(o,i);return xr(u,a,s)}const RE=P({softmaxCrossEntropy_:kE});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _E(n,e,t,r){const s=_(n,"indices","sparseFillEmptyRows","int32"),o=_(e,"values","sparseFillEmptyRows"),i=_(t,"denseShape","sparseFillEmptyRows","int32"),a=_(r,"defaultValue","sparseFillEmptyRows",o.dtype);if(s.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${s.shape}`);if(o.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${o.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(a.rank!==0)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);const u={indices:s,values:o,denseShape:i,defaultValue:a},c=L.runKernel(of,u);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}const AE=P({sparseFillEmptyRows_:_E});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OE(n,e,t){const r=_(n,"inputIndices","sparseReshape","int32"),s=_(e,"inputShape","sparseReshape","int32"),o=_(t,"newShape","sparseReshape","int32");if(r.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${r.shape}`);if(s.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(o.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${o.shape}`);const i={inputIndices:r,inputShape:s,newShape:o},a=L.runKernel(af,i);return{outputIndices:a[0],outputShape:a[1]}}const DE=P({sparseReshape_:OE});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FE(n,e,t){const r=_(n,"data","sparseSegmentMean"),s=_(e,"indices","sparseSegmentMean","int32"),o=_(t,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${s.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${o.shape}`);const i={data:r,indices:s,segmentIds:o};return L.runKernel(uf,i)}const PE=P({sparseSegmentMean_:FE});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LE(n,e,t){const r=_(n,"data","sparseSegmentSum"),s=_(e,"indices","sparseSegmentSum","int32"),o=_(t,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${s.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${o.shape}`);const i={data:r,indices:s,segmentIds:o};return L.runKernel(cf,i)}const BE=P({sparseSegmentSum_:LE});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ME(n,e,t,r,s,o,i,a){const u=_(n,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);const c=_(e,"dataSplits","stringNGrams");if(c.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const h={separator:t,nGramWidths:r,leftPad:s,rightPad:o,padWidth:i,preserveShortSequences:a},d={data:u,dataSplits:c},f=L.runKernel(pf,d,h);return{nGrams:f[0],nGramsSplits:f[1]}}const VE=P({stringNGrams_:ME});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UE(n,e,t=!0){const r=_(n,"input","stringSplit","string"),s=_(e,"delimiter","stringSplit","string");if(r.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(s.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const o={skipEmpty:t},i={input:r,delimiter:s},a=L.runKernel(mf,i,o);return{indices:a[0],values:a[1],shape:a[2]}}const zE=P({stringSplit_:UE});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WE(n,e){const t=_(n,"input","stringToHashBucketFast","string"),r={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const s={input:t};return L.runKernel(gf,s,r)}const GE=P({stringToHashBucketFast_:WE});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jE(n,e,t,r=!0){const s=_(n,"input","staticRegexReplace","string"),o={pattern:e,rewrite:t,replaceGlobal:r};return L.runKernel(df,{x:s},o)}const HE=P({staticRegexReplace_:jE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r1={fft:Tu,ifft:Mi,rfft:Nu,irfft:Ep},s1={hammingWindow:xN,hannWindow:t1,frame:n1,stft:$N},Kn={flipLeftRight:NN,grayscaleToRGB:IN,resizeNearestNeighbor:eE,resizeBilinear:ZN,rgbToGrayscale:RN,rotateWithOffset:AN,cropAndResize:CN,nonMaxSuppression:DN,nonMaxSuppressionAsync:zN,nonMaxSuppressionWithScore:GN,nonMaxSuppressionWithScoreAsync:HN,nonMaxSuppressionPadded:XN,nonMaxSuppressionPaddedAsync:YN,threshold:rE,transform:oE},o1={bandPart:aE,gramSchmidt:cE,qr:hE},i1={absoluteDifference:pE,computeWeightedLoss:xr,cosineDistance:gE,hingeLoss:xE,huberLoss:vE,logLoss:$E,meanSquaredError:CE,sigmoidCrossEntropy:EE,softmaxCrossEntropy:RE},a1={sparseFillEmptyRows:AE,sparseReshape:DE,sparseSegmentMean:PE,sparseSegmentSum:BE},u1={stringNGrams:VE,stringSplit:zE,stringToHashBucketFast:GE,staticRegexReplace:HE};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KE=new Map,hl=new Map;class c1{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Sr{constructor(){this.classNameMap={}}static getMap(){return Sr.instance==null&&(Sr.instance=new Sr),Sr.instance}static register(e){Sr.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function l1(n,e,t){A(n.className!=null,()=>"Class being registered does not have the static className property defined."),A(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),A(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof t>"u"&&(t=n.className);const r=t,s=e+">"+r;return Sr.register(n),KE.set(s,n),hl.set(n,s),n}function XE(n){return hl.has(n)?hl.get(n):n.className}const qE=Object.freeze(Object.defineProperty({__proto__:null,Serializable:c1,SerializationMap:Sr,getRegisteredName:XE,registerClass:l1},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pr extends c1{minimize(e,t=!1,r){const{value:s,grads:o}=this.computeGradients(e,r);if(r!=null){const i=r.map(a=>({name:a.name,tensor:o[a.name]}));this.applyGradients(i)}else this.applyGradients(o);return We(o),t?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return W0(e,t)}dispose(){this.iterations_!=null&&We(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:be(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Pr,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mp extends Pr{static get className(){return"Adadelta"}constructor(e,t,r=null){super(),this.learningRate=e,this.rho=t,this.epsilon=r,this.accumulatedGrads=[],this.accumulatedUpdates=[],r==null&&(this.epsilon=L.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=L.registeredVariables[r],i=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${r}/accum_grad`,variable:ce(()=>Vt(o).variable(i))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${r}/accum_var`,variable:ce(()=>Vt(o).variable(i))});const a=Array.isArray(e)?e[s].tensor:e[r];if(a==null)return;const u=this.accumulatedGrads[s].variable,c=this.accumulatedUpdates[s].variable;ce(()=>{const h=ue(Z(u,this.rho),Z(cn(a),1-this.rho)),d=Z(ve(Wn(ue(c,this.epsilon)),Wn(ue(u,this.epsilon))),a),f=ue(Z(c,this.rho),Z(cn(d),1-this.rho));u.assign(h),c.assign(f);const g=ue(Z(d,-this.learningRate),o);o.assign(g)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(We(this.accumulatedGrads.map(e=>e.variable)),We(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,r=!1;this.accumulatedGrads=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedUpdates=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vp extends Pr{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=L.registeredVariables[r];this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${r}/accumulator`,variable:ce(()=>co(o.shape,this.initialAccumulatorValue).variable(!1))});const i=Array.isArray(e)?e[s].tensor:e[r];if(i==null)return;const a=this.accumulatedGrads[s].variable;ce(()=>{const u=ue(a,cn(i));a.assign(u);const c=ue(Z(ve(i,Wn(ue(u,L.backend.epsilon()))),-this.learningRate),o);o.assign(c)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&We(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(r=>({originalName:r.name,variable:r.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Up extends Pr{static get className(){return"Adam"}constructor(e,t,r,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],ce(()=>{this.accBeta1=be(t).variable(),this.accBeta2=be(r).variable()}),s==null&&(this.epsilon=L.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);ce(()=>{const r=pe(1,this.accBeta1),s=pe(1,this.accBeta2);t.forEach((o,i)=>{const a=L.registeredVariables[o],u=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${o}/m`,variable:ce(()=>Vt(a).variable(u))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${o}/v`,variable:ce(()=>Vt(a).variable(u))});const c=Array.isArray(e)?e[i].tensor:e[o];if(c==null)return;const h=this.accumulatedFirstMoment[i].variable,d=this.accumulatedSecondMoment[i].variable,f=ue(Z(h,this.beta1),Z(c,1-this.beta1)),g=ue(Z(d,this.beta2),Z(cn(c),1-this.beta2)),x=ve(f,r),w=ve(g,s);h.assign(f),d.assign(g);const b=ue(Z(ve(x,ue(Wn(w),this.epsilon)),-this.learningRate),a);a.assign(b)}),this.accBeta1.assign(Z(this.accBeta1,this.beta1)),this.accBeta2.assign(Z(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&We(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&We(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),ce(()=>{this.accBeta1.assign(Js(this.beta1,this.iterations_+1)),this.accBeta2.assign(Js(this.beta2,this.iterations_+1))});const t=e.length/2,r=!1;this.accumulatedFirstMoment=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zp extends Pr{static get className(){return"Adamax"}constructor(e,t,r,s=null,o=0){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=s,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],ce(()=>{this.iteration=be(0).variable(),this.accBeta1=be(t).variable()}),s==null&&(this.epsilon=L.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);ce(()=>{const r=pe(1,this.accBeta1),s=ve(-this.learningRate,ue(Z(this.iteration,this.decay),1));t.forEach((o,i)=>{const a=L.registeredVariables[o],u=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${o}/m`,variable:Vt(a).variable(u)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${o}/v`,variable:Vt(a).variable(u)});const c=Array.isArray(e)?e[i].tensor:e[o];if(c==null)return;const h=this.accumulatedFirstMoment[i].variable,d=this.accumulatedWeightedInfNorm[i].variable,f=ue(Z(h,this.beta1),Z(c,1-this.beta1)),g=Z(d,this.beta2),x=Bt(c),w=up(g,x);h.assign(f),d.assign(w);const b=ue(Z(ve(s,r),ve(f,ue(w,this.epsilon))),a);a.assign(b)}),this.iteration.assign(ue(this.iteration,1)),this.accBeta1.assign(Z(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&We(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&We(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ou extends Pr{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=Array.isArray(e)?e[s].tensor:e[r];if(o==null)return;const i=L.registeredVariables[r];ce(()=>{const a=ue(Z(this.c,o),i);i.assign(a)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=En(be(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wp extends Ou{static get className(){return"Momentum"}constructor(e,t,r=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=r,this.accumulations=[],this.m=be(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=L.registeredVariables[r];this.accumulations[s]==null&&(this.accumulations[s]={originalName:`${r}/momentum`,variable:ce(()=>Vt(o).variable(!1))});const i=this.accumulations[s].variable,a=Array.isArray(e)?e[s].tensor:e[r];a!=null&&ce(()=>{let u;const c=ue(Z(this.m,i),a);this.useNesterov?u=ue(Z(this.c,ue(a,Z(c,this.m))),o):u=ue(Z(this.c,c),o),i.assign(c),o.assign(u)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&We(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(r=>({originalName:r.name,variable:r.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gp extends Pr{static get className(){return"RMSProp"}constructor(e,t=.9,r=0,s=null,o=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=r,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,s==null&&(this.epsilon=L.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=L.registeredVariables[r],i=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${r}/rms`,variable:ce(()=>Vt(o).variable(i))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${r}/momentum`,variable:ce(()=>Vt(o).variable(i))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${r}/mg`,variable:ce(()=>Vt(o).variable(i))});const a=Array.isArray(e)?e[s].tensor:e[r];if(a==null)return;const u=this.accumulatedMeanSquares[s].variable,c=this.accumulatedMoments[s].variable;ce(()=>{const h=ue(Z(u,this.decay),Z(cn(a),1-this.decay));if(this.centered){const d=this.accumulatedMeanGrads[s].variable,f=ue(Z(d,this.decay),Z(a,1-this.decay)),g=ve(Z(a,this.learningRate),Wn(pe(h,ue(cn(f),this.epsilon)))),x=ue(Z(c,this.momentum),g);u.assign(h),d.assign(f),c.assign(x);const w=pe(o,x);o.assign(w)}else{const d=ue(Z(u,this.decay),Z(cn(a),1-this.decay)),f=ue(Z(c,this.momentum),ve(Z(a,this.learningRate),Wn(ue(d,this.epsilon))));u.assign(d),c.assign(f);const g=pe(o,f);o.assign(g)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&We(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&We(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&We(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,r=!1;this.accumulatedMeanSquares=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedMoments=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YE=[Mp,Vp,Up,zp,Wp,Gp,Ou];function QE(){for(const n of YE)l1(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZE="model",JE=".json",eI=".weights.bin";function Rm(n){return new Promise(e=>setTimeout(e)).then(n)}class ws{constructor(e){if(!W().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(ws.URL_SCHEME)&&(e=e.slice(ws.URL_SCHEME.length)),(e==null||e.length===0)&&(e=ZE),this.modelJsonFileName=e+JE,this.weightDataFileName=e+eI}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=Fn.join(e.weightData),r=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const s=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],o=By(e,s),i=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=i,await Rm(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const u=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;u.download=this.weightDataFileName,u.href=r,await Rm(()=>u.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:qi(e)}}}}ws.URL_SCHEME="downloads://";class tI{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const r=new FileReader;r.onload=s=>{const o=JSON.parse(s.target.result),i=o.modelTopology;if(i==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(o.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:i});return}const u=Bf(o,c=>this.loadWeights(c));e(u)},r.onerror=s=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),r.readAsText(this.jsonFile)})}loadWeights(e){const t=[],r=[];for(const i of e)t.push(...i.weights),r.push(...i.paths);const s=this.checkManifestAndWeightFiles(e),o=r.map(i=>this.loadWeightsFile(i,s[i]));return Promise.all(o).then(i=>[t,i])}loadWeightsFile(e,t){return new Promise((r,s)=>{const o=new FileReader;o.onload=i=>{const a=i.target.result;r(a)},o.onerror=i=>s(`Failed to weights data from file of path '${e}'.`),o.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],r=this.weightsFiles.map(o=>Em(o.name)),s={};for(const o of e)o.paths.forEach(i=>{const a=Em(i);if(t.indexOf(a)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),r.indexOf(a)===-1)throw new Error(`Weight file with basename '${a}' is not provided.`);s[i]=this.weightsFiles[r.indexOf(a)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}}const nI=n=>W().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(ws.URL_SCHEME)?rI(n.slice(ws.URL_SCHEME.length)):null;je.registerSaveRouter(nI);function rI(n="model"){return new ws(n)}function sI(n){return new tI(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _m(n,e,t,r){i(n),t=t??0,r=r??1,a(t,r);let s=0;const o=u=>(u.then(c=>{const h=t+ ++s/n.length*(r-t);return e(h),c}),u);function i(u){A(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function a(u,c){A(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),A(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),A(c>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${c}`)}return Promise.all(n.map(o))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function h1(n,e){e==null&&(e={});const t=e.fetchFunc==null?W().platform.fetch:e.fetchFunc,r=n.map(d=>t(d,e.requestInit,{isBinary:!0})),a=(e.onProgress==null?await Promise.all(r):await _m(r,e.onProgress,0,.5)).map(d=>d.arrayBuffer());return e.onProgress==null?await Promise.all(a):await _m(a,e.onProgress,.5,1)}function oI(n,e){var t;const r=e.fetchFunc==null?W().platform.fetch:e.fetchFunc;let s=0,o;return(t=e.onProgress)===null||t===void 0||t.call(e,0),new ReadableStream({pull:async i=>{for(var a;s<n.length;){o||(o=(await r(n[s],e.requestInit,{isBinary:!0})).body.getReader());const{done:u,value:c}=await o.read();if(u){s++,o=void 0,(a=e.onProgress)===null||a===void 0||a.call(e,s/n.length);continue}i.enqueue(c);return}i.close()}})}async function iI(n,e="",t,r){return d1(i=>h1(i,{requestInit:r}))(n,e,t)}function d1(n){return async(e,t="",r)=>{const s=e.map(()=>!1),o={},i=r!=null?r.map(()=>!1):[],a=[];if(e.forEach((g,x)=>{let w=0;g.weights.forEach(b=>{const $="quantization"in b?b.quantization.dtype:b.dtype,N=ys[$]*Y(b.shape),k=()=>{s[x]=!0,o[x]==null&&(o[x]=[]),o[x].push({manifestEntry:b,groupOffset:w,sizeBytes:N})};r!=null?r.forEach((I,O)=>{I===b.name&&(k(),i[O]=!0)}):k(),a.push(b.name),w+=N})}),!i.every(g=>g)){const g=r.filter((x,w)=>!i[w]);throw new Error(`Could not find weights in manifest with names: ${g.join(", ")}. 
Manifest JSON has weights with names: ${a.join(", ")}.`)}const u=s.reduce((g,x,w)=>(x&&g.push(w),g),[]),c=[];u.forEach(g=>{e[g].paths.forEach(x=>{const w=t+(t.endsWith("/")?"":"/")+x;c.push(w)})});const h=await n(c),d={};let f=0;return u.forEach(g=>{const x=e[g].paths.length,w=new Fn(h.slice(f,f+x));o[g].forEach($=>{const N=w.slice($.groupOffset,$.groupOffset+$.sizeBytes),k=Fy(N,[$.manifestEntry]);for(const I in k)d[I]=k[I]}),f+=x}),d}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aI="application/octet-stream",uI="application/json";class jp{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(A(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=W().platform.fetch,A(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&A(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const r=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s=By(e,r);if(t.body.append("model.json",new Blob([JSON.stringify(s)],{type:uI}),"model.json"),e.weightData!=null){const i=Fn.join(e.weightData);t.body.append("model.weights.bin",new Blob([i],{type:aI}),"model.weights.bin")}const o=await this.fetch(this.path,t);if(o.ok)return{modelArtifactsInfo:qi(e),responses:[o]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${o.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}const r=t.modelTopology,s=t.weightsManifest;if(r==null&&s==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return Bf(e,t=>this.loadWeights(t))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),r=ol(e.weightsManifest),s=()=>oI(t,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:r,getWeightStream:s})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[r,s]=cI(t),o=this.weightPathPrefix||r,i=[],a=[];for(const u of e)for(const c of u.paths)this.weightUrlConverter!=null?a.push(this.weightUrlConverter(c)):i.push(o+c+s);return this.weightUrlConverter&&i.push(...await Promise.all(a)),i}async loadWeights(e){const t=await this.getWeightUrls(e),r=ol(e),s=await h1(t,this.loadOptions);return[r,s]}}jp.URL_SCHEME_REGEX=/^https?:\/\//;function cI(n){const e=n.lastIndexOf("/"),t=n.lastIndexOf("?"),r=n.substring(0,e),s=t>e?n.substring(t):"";return[r+"/",s]}function dl(n){return n.match(jp.URL_SCHEME_REGEX)!=null}const f1=(n,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(n)?t=n.every(r=>dl(r)):t=dl(n),t)return Hp(n,e)}return null};je.registerSaveRouter(f1);je.registerLoadRouter(f1);function Hp(n,e){return new jp(n,e)}function lI(n,e){return Hp(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rc{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class p1{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class hI{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function dI(n,e,t,r){const s=arguments;return new hI(m1(...s))}function m1(n,e,t,r){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new Rc(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Rc({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Rc({modelTopology:n,weightSpecs:e,weightData:t,trainingConfig:r}))}function fI(n){return new p1(n)}function pI(n){return new p1(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kp=Object.freeze(Object.defineProperty({__proto__:null,CompositeArrayBuffer:Fn,browserFiles:sI,browserHTTPRequest:lI,concatenateArrayBuffers:g2,copyModel:B2,decodeWeights:Fy,decodeWeightsStream:Ly,encodeWeights:l2,fromMemory:dI,fromMemorySync:m1,getLoadHandlers:C2,getModelArtifactsForJSON:Bf,getModelArtifactsForJSONSync:My,getModelArtifactsInfoForJSON:qi,getSaveHandlers:S2,getWeightSpecs:ol,http:Hp,isHTTPScheme:dl,listModels:P2,loadWeights:iI,moveModel:M2,registerLoadRouter:$2,registerSaveRouter:w2,removeModel:L2,weightsLoaderFactory:d1,withSaveHandler:fI,withSaveHandlerSync:pI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mI(n,e,t){const r=_(n,"labels","confusionMatrix"),s=_(e,"predictions","confusionMatrix");A(t==null||t>0&&Number.isInteger(t),()=>`If provided, numClasses must be a positive integer, but got ${t}`),A(r.rank===1,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),A(s.rank===1,()=>`Expected the rank of predictions to be 1, but got ${s.rank}`),A(r.shape[0]===s.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`),A(t>0&&Number.isInteger(t),()=>`numClasses is required to be a positive integer, but got ${t}`);const o=Bi(Se(r,"int32"),t),i=Bi(Se(s,"int32"),t),a=Vi(o),u=Re(a,i);return Se(u,"int32")}const gI=P({confusionMatrix_:mI});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yI=Object.freeze(Object.defineProperty({__proto__:null,confusionMatrix:gI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ns,Am=!1;function g1(n,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,r=!1,s=!1,o=!1,i=!1,a=!1;if(n.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)r=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)s=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)o=!0;else if(n.getContext!=null)i=!0;else if(typeof ImageBitmap<"u"&&n instanceof ImageBitmap)a=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);if(Ii(Ha,L.backendName)!=null){const x={pixels:n},w={numChannels:e};return L.runKernel(Ha,x,w)}const[c,h]=s?[n.videoWidth,n.videoHeight]:[n.width,n.height];let d;if(i)d=n.getContext("2d").getImageData(0,0,c,h).data;else if(r||t)d=n.data;else if(o||s||a){if(ns==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")ns=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else ns=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});ns.canvas.width=c,ns.canvas.height=h,ns.drawImage(n,0,0,c,h),d=ns.getImageData(0,0,c,h).data}let f;if(e===4)f=new Int32Array(d);else{const x=c*h;f=new Int32Array(x*e);for(let w=0;w<x;w++)for(let b=0;b<e;++b)f[w*e+b]=d[w*4+b]}return Rp(f,[h,c,e],"int32")}function xI(n){return n!=null&&n.data instanceof Uint8Array}function bI(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function vI(n){return n!=null&&n.width!==0&&n.height!==0}function wI(n){return bI()&&!(n instanceof ImageBitmap)&&vI(n)&&!xI(n)}async function $I(n,e=3){let t=null;if(W().getBool("WRAP_TO_IMAGEBITMAP")&&wI(n)){let r;try{r=await createImageBitmap(n,{premultiplyAlpha:"none"})}catch{r=null}r!=null&&r.width===n.width&&r.height===n.height?t=r:t=n}else t=n;return g1(t,e)}function y1(n){if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const e=n.rank===2?1:n.shape[2];if(e>4||e===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${e}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`)}function SI(n){const e=(n==null?void 0:n.alpha)||1;if(e>1||e<0)throw new Error(`Alpha value ${e} is suppoed to be in range [0 - 1].`)}async function fo(n,e){let t=_(n,"img","toPixels");if(!(n instanceof Te)){const c=t;t=Se(c,"int32"),c.dispose()}y1(t);const[r,s]=t.shape.slice(0,2),o=t.rank===2?1:t.shape[2],i=await t.data(),a=t.dtype==="float32"?255:1,u=new Uint8ClampedArray(s*r*4);for(let c=0;c<r*s;++c){const h=[0,0,0,255];for(let f=0;f<o;f++){const g=i[c*o+f];if(t.dtype==="float32"){if(g<0||g>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${g}.`)}else if(t.dtype==="int32"&&(g<0||g>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${g}.`);o===1?(h[0]=g*a,h[1]=g*a,h[2]=g*a):h[f]=g*a}const d=c*4;u[d+0]=Math.round(h[0]),u[d+1]=Math.round(h[1]),u[d+2]=Math.round(h[2]),u[d+3]=Math.round(h[3])}if(e!=null){Am||Ii(Th,L.backendName)!=null&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),Am=!0),e.width=s,e.height=r;const c=e.getContext("2d"),h=new ImageData(u,s,r);c.putImageData(h,0,0)}return t!==n&&t.dispose(),u}function CI(n,e,t){let r=_(n,"img","draw");if(!(n instanceof Te)){const i=r;r=Se(i,"int32"),i.dispose()}y1(r),SI(t==null?void 0:t.imageOptions);const s={image:r},o={canvas:e,options:t};L.runKernel(Th,s,o)}const oa=P({fromPixels_:g1}),TI=Object.freeze(Object.defineProperty({__proto__:null,draw:CI,fromPixels:oa,fromPixelsAsync:$I,toPixels:fo},Symbol.toStringTag,{value:"Module"}));function Xp(n,e){const t=n.shape.length,r=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[r-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[r-1]} vs. ${t}`);if(Y(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const s=e.shape,o=s[s.length-1];let i=1;for(let d=0;d<s.length-1;++d)i*=s[d];const a=n.shape,u=s.slice();u.pop();let c=1;for(let d=o;d<t;++d)c*=a[d],u.push(a[d]);const h=[...ot(n.shape).map(d=>d/c),1].slice(0,o);return[u,i,c,h]}const NI=Object.freeze(Object.defineProperty({__proto__:null,prepareAndValidate:Xp},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fl=-2,EI=-1;function x1(n,e,t){const r=n.shape.length;A(r===e.length,()=>`Error in slice${r}D: Length of begin ${e} must match the rank of the array (${r}).`),A(r===t.length,()=>`Error in slice${r}D: Length of size ${t} must match the rank of the array (${r}).`);for(let s=0;s<r;++s)A(e[s]+t[s]<=n.shape[s],()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${e[s]+t[s]}) would overflow input.shape[${s}] (${n.shape[s]})`)}function II(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function b1(n,e,t){const r=[];for(let s=0;s<n.length;s++)r[s]=Math.ceil((e[s]-n[s])/t[s]);return r}function v1(n,e,t,r){const s=[...n];for(let o=s.length;o<r.length;o++)s.push(1);for(let o=0;o<t;o++)o===0?s[e]=1:(s.splice(e,0,1),s.pop());return s}function w1(n,e,t){return t<=n?t:t-(e-1)}function $1(n,e){const t=[];for(let r=0;r<n;r++)t.push(e+r);return t}function kI(n,e,t,r,s,o,i,a,u){const c=n.length;let h=new Array(c),d=new Array(c),f=new Array(c);if(e.length&&t>0){const g=e[0],x=t+1;h=S1(i,g,x,r,n),d=C1(a,g,x,s,n),f=v1(o,g,x,n)}else for(let g=0;g<c;g++)h[g]=N1(i,r,o,n,g,u),d[g]=E1(a,s,o,n,g,u),f[g]=T1(o,g,u);return{begin:h,end:d,strides:f}}function S1(n,e,t,r,s){const o=[...s],i=$1(t,e);for(let a=0;a<o.length;a++)if(i.indexOf(a)>-1)o[a]=0;else{const u=w1(e,t,a);let c=r[u];n&1<<u&&(c=0),o[a]=c}return o}function C1(n,e,t,r,s){const o=[...s],i=$1(t,e);for(let a=0;a<o.length;a++)if(i.indexOf(a)>-1)o[a]=Number.MAX_SAFE_INTEGER;else{const u=w1(e,t,a);let c=r[u];n&1<<u&&(c=Number.MAX_SAFE_INTEGER),o[a]=c}for(let a=0;a<o.length;a++){const u=s[a];o[a]<0&&(o[a]+=u),o[a]=Ti(0,o[a],s[a])}return o}function T1(n,e,t){let r=n[e];return(t&1<<e||r==null)&&(r=1),r}function N1(n,e,t,r,s,o){let i=e[s];const a=t[s]||1;(n&1<<s||o&1<<s||i==null)&&(a>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);const u=r[s];return i<0&&(i+=u),i=Ti(0,i,u-1),i}function E1(n,e,t,r,s,o){let i=e[s];const a=t[s]||1;(n&1<<s||o&1<<s||i==null)&&(a>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);const u=r[s];return i<0&&(i+=u),a>0?i=Ti(0,i,u):i=Ti(-1,i,u-1),i}function qp(n,e,t){let r=t.length;for(let s=0;s<t.length;s++)if(t[s]>1){r=s;break}for(let s=r+1;s<t.length;s++)if(e[s]>0||t[s]!==n[s])return!1;return!0}function Yp(n,e){let t=n.length>0?n[n.length-1]:1;for(let r=0;r<n.length-1;r++)t+=n[r]*e[r];return t}function I1(n,e,t){let r;const s=n.shape.length;typeof e=="number"?r=[e,...new Array(s-1).fill(0)]:e.length<s?r=e.concat(new Array(s-e.length).fill(0)):r=e.slice(),r.forEach(i=>{A(i!==-1,()=>"slice() does not support negative begin indexing.")});let o;return t==null?o=new Array(s).fill(-1):typeof t=="number"?o=[t,...new Array(s-1).fill(-1)]:t.length<s?o=t.concat(new Array(s-t.length).fill(-1)):o=t,o=o.map((i,a)=>i>=0?i:(A(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${a}.`),n.shape[a]-r[a])),[r,o]}function k1(n,e,t,r,s,o,i,a,u){let c;if(r==null?(c=new Array(e.length),c.fill(1)):c=r,i!=null&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let h=!1;const d={dims:c.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:c.slice(),beginMask:s,endMask:o,ellipsisMask:i,newAxisMask:a,shrinkAxisMask:u};for(let k=0;k<d.dims;k++)h&&1<<k&a&&d.numAddAxisAfterEllipsis++,1<<k&i&&(h=!0);h||(d.ellipsisMask|=1<<d.dims,d.dims++);const f={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};RI(d,f);let g=!0,x=!0,w=!0;const b=[],$=[];for(let k=0;k<n.length;++k){if(f.strides[k]===0)throw Error(`strides[${k}] must be non-zero`);const I=!!(f.shrinkAxisMask&1<<k),O=n[k];if(O===-1){b.push(I?1:-1);continue}const F=[f.beginMask&1<<k,f.endMask&1<<k],M=[f.strides[k]>0?0:-1,f.strides[k]>0?O:O-1];if(I&&f.strides[k]<=0)throw Error("only stride 1 allowed on non-range indexing.");w=w&&f.strides[k]===1;const B=!!(f.beginMask&1<<k&&f.endMask&1<<k);if(f.beginValid&&f.endValid){if(I){const Q=f.begin[k]<0?O+f.begin[k]:f.begin[k];if(f.begin[k]=Q,f.end[k]=f.begin[k]+1,Q<0||Q>=O)throw Error(`slice index ${f.begin[k]} of dimension ${k} out of bounds.`)}else f.begin[k]=Om(f.begin[k],0,f.strides[k],O,F,M),f.end[k]=Om(f.end[k],1,f.strides[k],O,F,M);const U=f.strides[k]===1&&f.begin[k]===0&&f.end[k]===O;g=g&&U,x=x&&(k===0&&f.strides[k]===1||U)}else g=g&&f.strides[k]===1&&B,x=x&&(k===0&&f.strides[k]===1||B);let z,G=!1;if(f.beginValid&&f.endValid?(z=f.end[k]-f.begin[k],G=!0):I?(z=1,G=!0):B&&O>=0&&(f.strides[k]<0?z=-O:z=O,G=!0),G){let U;z===0||z<0!=f.strides[k]<0?U=0:U=Math.trunc(z/f.strides[k])+(z%f.strides[k]!==0?1:0),b.push(U)}else b.push(-1)}for(let k=0;k<f.finalShapeGatherIndices.length;++k){const I=f.finalShapeGatherIndices[k];I>=0?$.push(b[I]):I===fl&&$.push(1)}return{finalShapeSparse:$.filter((k,I)=>f.finalShapeGatherIndices[I]!==fl),finalShape:$,isIdentity:g,sliceDim0:x,isSimpleSlice:w,begin:f.begin,end:f.end,strides:f.strides}}function RI(n,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=n.begin!=null,e.endValid=n.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let r=0;r<n.dims;r++)if(1<<r&n.ellipsisMask){const s=Math.min(e.dims-(n.dims-r)+1+n.numAddAxisAfterEllipsis,e.dims);for(;t<s;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=r}else if(1<<r&n.newAxisMask)e.finalShapeGatherIndices.push(fl),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);n.begin!=null&&(e.begin[t]=n.begin[r]),n.end!=null&&(e.end[t]=n.end[r]),e.strides[t]=n.strides[r],n.beginMask&1<<r&&(e.beginMask|=1<<t),n.endMask&1<<r&&(e.endMask|=1<<t),n.shrinkAxisMask&1<<r?(e.finalShapeGatherIndices.push(EI),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(r)),e.inputShapeGatherIndicesSparse[t]=r,t++}}function Om(n,e,t,r,s,o){if(s[e])return t>0?o[e]:o[e+1&1];{const i=n<0?r+n:n;return i<o[0]?o[0]:i>o[1]?o[1]:i}}const R1=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:x1,computeFlatOffset:Yp,computeOutShape:b1,getNormalizedAxes:kI,isSliceContinous:qp,maskToAxes:II,parseSliceParams:I1,sliceInfo:k1,startForAxis:N1,startIndicesWithElidedDims:S1,stopForAxis:E1,stopIndicesWithElidedDims:C1,stridesForAxis:T1,stridesWithElidedDims:v1},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. */const _I="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _1{static sgd(e){return new Ou(e)}static momentum(e,t,r=!1){return new Wp(e,t,r)}static rmsprop(e,t=.9,r=0,s=null,o=!1){return new Gp(e,t,r,s,o)}static adam(e=.001,t=.9,r=.999,s=null){return new Up(e,t,r,s)}static adadelta(e=.001,t=.95,r=null){return new Mp(e,t,r)}static adamax(e=.002,t=.9,r=.999,s=null,o=0){return new zp(e,t,r,s,o)}static adagrad(e,t=.1){return new Vp(e,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AI=_1;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OI=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function A1(){return new Promise(n=>OI(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O1(n,e){const t=n[0].length;n.forEach((s,o)=>{A(s.length===t,()=>`Error in concat${t}D: rank of tensors[${o}] must be the same as the rank of the rest (${t})`)}),A(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const r=n[0];n.forEach((s,o)=>{for(let i=0;i<t;i++)A(i===e||s[i]===r[i],()=>`Error in concat${t}D: Shape of tensors[${o}] (${s}) does not match the shape of the rest (${r}) along the non-concatenated axis ${o}.`)})}function $s(n,e){const t=n[0].slice();for(let r=1;r<n.length;r++)t[e]+=n[r][e];return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Tn;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(Tn||(Tn={}));function D1(n,e,t){let r=new Array;if(t==null&&e==null)return r;if(e==null)for(;r.length<n+t.length;)r.push(-1);else r=e.slice();if(t==null)return r;if(n+t.length!==r.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${n+t.length}, but shape.rank = ${r.length}`);for(let s=1;s<t.length;++s){const o=t[s],i=r[r.length-t.length+s],a=r[i];if(o>=0)if(a>=0){if(a!==o)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${s+n}] = ${o} but shape[${s+n}] = ${a}`)}else r[i]=o}return r}function F1(n){const e={FIRST_DIM_SIZE:Tn.FIRST_DIM_SIZE,VALUE_ROWIDS:Tn.VALUE_ROWIDS,ROW_LENGTHS:Tn.ROW_LENGTHS,ROW_SPLITS:Tn.ROW_SPLITS,ROW_LIMITS:Tn.ROW_LIMITS,ROW_STARTS:Tn.ROW_STARTS},t=[];for(const r of n)if(r in e)t.push(e[r]);else break;return t}function P1(n){return n.length===0?0:n[0]===Tn.FIRST_DIM_SIZE?n.length-1:n.length}function L1(n,e){if(n==null||e==null)return;const t=n.length,r=e.length;if(t>=r)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(t,r-1);++s){const o=n[s],i=e[s+1];if(o>=0&&i>=0&&o!==1&&o!==i)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${s-n.length}] = ${o} but ragged tensor input.flatValues.shape[${s-n.length}] = ${i}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qp=30;function Du(n){return n<=Qp?n:Ga(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B1(n,e,t){const r=t*(typeof n=="number"?n:n[0]),s=e*(typeof n=="number"?n:n[1]);return[r,s]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zp(n,e,t,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(n[0]/t),s=s.concat(n.slice(1));else{s=s.concat(n[0]);const o=e.length;for(let i=0;i<o;++i)s=s.concat([n[i+1]/e[i],e[i]]);s=s.concat(n.slice(o+1))}return s}function Jp(n,e,t=!0){const r=[];if(t){r.push(e);for(let s=e+1;s<n;++s)s<=2*e?(r.push(s),r.push(s-(e+1))):r.push(s)}else{const s=[],o=[];for(let i=1;i<n;++i)i>=e*2+1||i%2===1?o.push(i):s.push(i);r.push(...s),r.push(0),r.push(...o)}return r}function em(n,e,t,r=!0){const s=[];r?s.push(n[0]/t):s.push(n[0]*t);for(let o=1;o<n.length;++o)o<=e.length?r?s.push(e[o-1]*n[o]):s.push(n[o]/e[o-1]):s.push(n[o]);return s}function M1(n,e){const t=[0];for(let r=0;r<e;++r)t.push(n[r][0]);return t}function V1(n,e,t){const r=n.slice(0,1);for(let s=0;s<t;++s)r.push(n[s+1]-e[s][0]-e[s][1]);return r}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U1=1.7580993408473768,z1=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W1=.3275911,G1=.254829592,j1=-.284496736,H1=1.421413741,K1=-1.453152027,X1=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pl(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let r=0;r<t.length;r+=2)t[r]=n[r/2],t[r+1]=e[r/2];return t}function DI(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let r=0;r<n.length;r+=2)e[r/2]=n[r],t[r/2]=n[r+1];return{real:e,imag:t}}function FI(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),r=new Float32Array(e);for(let s=0;s<n.length;s+=4)t[Math.floor(s/4)]=n[s],r[Math.floor(s/4)]=n[s+1];return{real:t,imag:r}}function PI(n){const e=Math.floor(n.length/4),t=new Float32Array(e),r=new Float32Array(e);for(let s=2;s<n.length;s+=4)t[Math.floor(s/4)]=n[s],r[Math.floor(s/4)]=n[s+1];return{real:t,imag:r}}function LI(n,e){const t=n[e*2],r=n[e*2+1];return{real:t,imag:r}}function BI(n,e,t,r){n[r*2]=e,n[r*2+1]=t}function MI(n,e){const t=new Float32Array(n/2),r=new Float32Array(n/2);for(let s=0;s<Math.ceil(n/2);s++){const o=(e?2:-2)*Math.PI*(s/n);t[s]=Math.cos(o),r[s]=Math.sin(o)}return{real:t,imag:r}}function VI(n,e,t){const r=(t?2:-2)*Math.PI*(n/e),s=Math.cos(r),o=Math.sin(r);return{real:s,imag:o}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _c="->",UI=/->/g,Dm=",",Fm="...";function q1(n,e){n=n.replace(/\s/g,"");const t=(n.length-n.replace(UI,"").length)/_c.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${_c}").`);const[r,s]=n.split(_c);A(r.indexOf(Fm)===-1,()=>`The ellipsis notation ("${Fm}") is not supported yet.`);const o=r.split(Dm),i=o.length;if(e!==i)throw new Error(`Expected ${i} input tensors, received ${e}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const a=[];for(let f=0;f<s.length;++f){const g=s[f];if(!o.some(x=>x.indexOf(g)!==-1))throw new Error(`Output subscripts contain the label ${g} not present in the input subscripts.`);a.indexOf(g)===-1&&a.push(g)}for(let f=0;f<r.length;++f){const g=r[f];a.indexOf(g)===-1&&g!==Dm&&a.push(g)}const u=new Array(o.length);for(let f=0;f<i;++f){if(new Set(o[f].split("")).size!==o[f].length)throw new Error(`Found duplicate axes in input component ${o[f]}. Support for duplicate axes in input is not implemented yet.`);u[f]=[];for(let g=0;g<o[f].length;++g)u[f].push(a.indexOf(o[f][g]))}const c=a.length,h=s.length,d=[];for(let f=h;f<c;++f)d.push(f);return{allDims:a,summedDims:d,idDims:u}}function Y1(n,e){let t=new Array(n);t.fill(-1);for(let s=0;s<e.length;++s)t[e[s]]=s;const r=[];for(let s=0;s<n;++s)t[s]===-1&&r.push(s);return t=t.filter(s=>s!==-1),{permutationIndices:t,expandDims:r}}function Q1(n,e,t){const r=new Array(n);for(let s=0;s<t.length;++s){const o=t[s].shape;for(let i=0;i<e[s].length;++i)r[e[s][i]]===void 0?r[e[s][i]]=o[i]:A(r[e[s][i]]===o[i],()=>`Expected dimension ${r[e[s][i]]} at axis ${i} of input shaped ${JSON.stringify(o)}, but got dimension ${o[i]}`)}}function Z1(n,e){const t=n,r=[];let s=0;n.length===0&&t.push(-1),s=n.length+1;for(let i=0;i<s;++i)r.push([]);const o=[];for(let i=0;i<t.length;++i){const a=t[i],u=zI(e,a);for(const c of u)o.indexOf(c)===-1&&(r[i].push(c),o.push(c))}return{path:t,steps:r}}function J1(n){return n.every((e,t)=>e===t)}function zI(n,e){const t=[];for(let r=0;r<n.length;++r)(n[r].length===0||n[r].indexOf(e)!==-1||e===-1)&&t.push(r);return t}function eb(n,e,t=0){let r=[];if(typeof e=="number")A(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),r=new Array(e).fill(n.shape[t]/e);else{const s=e.reduce((i,a)=>(a===-1&&(i+=1),i),0);A(s<=1,()=>"There should be only one negative value in split array.");const o=e.indexOf(-1);if(o!==-1){const i=e.reduce((a,u)=>u>0?a+u:a);e[o]=n.shape[t]-i}A(n.shape[t]===e.reduce((i,a)=>i+a),()=>"The sum of sizes must match the size of the axis dimension."),r=e}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tb(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function nb(n,e){return`indices(${n}, 0) is invalid: ${e} < 0`}function rb(n,e,t){return`indices(${n}, 0) is invalid: ${e} >= ${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sb(n,e){return`only one output dimension may be -1, not both ${n} and ${e}`}function ob(n,e){return`size ${n} must be non-negative, not ${e}`}function ib(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function ab(n,e){const t=Y(n),r=Y(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${r}. inputShape=${n} outputShape= ${e}`}function ub(n,e){const t=Y(n),r=Y(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${r}. inputShape=${n} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ml(){return"segment ids must be >= 0"}function cb(){return"segment ids are not increasing"}function lb(n,e){return`Segment id ${n} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function hb(n,e,t){return`Bad: indices[${n}] == ${e} out of range [0, ${t})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function db(n,e){let t=!1,r;for(n<=Qp?(r=n,t=!0):r=Ga(n,Math.floor(Math.sqrt(n)));!t;)r>e||r===n?t=!0:r=Ga(n,r+1);return r}function fb(n,e,t){const r=[],s=n.length;for(let o=0;o<s;o++)o!==e?r.push(n[o]):r.push(t);return r}function pb(n,e,t,r){const s=e.shape.length,o=n.shape.length;if(r!==0&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>o)throw new Error(`batchDims (${r}) must be less than rank(x) (
    ${o}).`);if(t<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${t}).`);for(let d=0;d<r;++d)if(n.shape[d]!==e.shape[d])throw new Error(`x.shape[${d}]: ${n.shape[d]} should be equal to indices.shape[${d}]: ${e.shape[d]}.`);const i=n.shape[t],a=[];let u=1,c=1,h=1;for(let d=0;d<r;++d)a.push(n.shape[d]),u*=n.shape[d];for(let d=r;d<t;d++)a.push(n.shape[d]),c*=n.shape[d];for(let d=r;d<s;d++)a.push(e.shape[d]);for(let d=t+1;d<o;d++)a.push(n.shape[d]),h*=n.shape[d];return{batchSize:u,sliceSize:h,outerSize:c,dimSize:i,outputShape:a}}const WI=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:pb,computeOutShape:fb,segOpComputeOptimalWindowSize:db},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ro(n){try{return n.map(e=>ms(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function mb(n){return n.map(e=>lr(e))}const gb=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:G1,ERF_A2:j1,ERF_A3:H1,ERF_A4:K1,ERF_A5:X1,ERF_P:W1,PARALLELIZE_THRESHOLD:Qp,get RowPartitionType(){return Tn},SELU_SCALE:z1,SELU_SCALEALPHA:U1,applyActivation:_u,assertAndGetBroadcastShape:Ne,assertAxesAreInnerMostDims:Pn,assertParamsConsistent:O1,assignToTypedArray:BI,axesAreInnerMostDims:qf,calculateShapes:sa,checkEinsumDimSizes:Q1,checkPadOnDimRoundingMode:ln,combineLocations:D0,combineRaggedTensorToTensorShapes:D1,complexWithEvenIndex:FI,complexWithOddIndex:PI,computeConv2DInfo:Yt,computeConv3DInfo:Qi,computeDefaultPad:zf,computeDilation2DInfo:s0,computeOptimalWindowSize:Du,computeOutAndReduceShapes:Xn,computeOutShape:$s,computePool2DInfo:Is,computePool3DInfo:Yi,convertConv2DDataFormat:uo,decodeEinsumEquation:q1,eitherStridesOrDilationsAreOne:Gt,expandShapeToKeepDim:Qt,exponent:VI,exponents:MI,fromStringArrayToUint8:mb,fromUint8ToStringArray:ro,getAxesPermutation:hn,getBroadcastDims:Di,getComplexWithIndex:LI,getEinsumComputePath:Z1,getEinsumPermutation:Y1,getFusedBiasGradient:Ru,getFusedDyActivation:ku,getImageCenter:B1,getInnerMostAxes:dn,getPermuted:Jp,getRaggedRank:P1,getReductionAxes:Kf,getReshaped:Zp,getReshapedPermuted:em,getRowPartitionTypesHelper:F1,getSliceBeginCoords:M1,getSliceSize:V1,getSparseFillEmptyRowsIndicesDenseShapeMismatch:tb,getSparseFillEmptyRowsNegativeIndexErrorMessage:nb,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:rb,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:ib,getSparseReshapeInputOutputMismatchErrorMessage:ub,getSparseReshapeInputOutputMultipleErrorMessage:ab,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:sb,getSparseReshapeNegativeOutputDimErrorMessage:ob,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:hb,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:ml,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:cb,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:lb,getUndoAxesPermutation:Yf,isIdentityPermutation:J1,log:pw,mergeRealAndImagArrays:pl,prepareAndValidate:Xp,prepareSplitSize:eb,segment_util:WI,shouldFuse:Au,slice_util:R1,splitRealAndImagArrays:DI,stridesOrDilationsArePositive:vs,tupleValuesAreOne:Oi,upcastType:An,validateDefaultValueShape:L1,validateInput:Eu,validateUpdateShape:_p,warn:nn},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GI=Object.freeze(Object.defineProperty({__proto__:null,nonMaxSuppressionV3Impl:Fp,nonMaxSuppressionV4Impl:Pp,nonMaxSuppressionV5Impl:Lp,whereImpl:Ap},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */QE();const yb=Object.freeze(Object.defineProperty({__proto__:null,Abs:Ll,Acos:Bl,Acosh:Ml,AdadeltaOptimizer:Mp,AdagradOptimizer:Vp,AdamOptimizer:Up,AdamaxOptimizer:zp,Add:mu,AddN:Vl,All:Ul,Any:zl,ArgMax:Wl,ArgMin:Gl,Asin:jl,Asinh:Hl,Atan:Kl,Atan2:ql,Atanh:Xl,AvgPool:Yl,AvgPool3D:Ql,AvgPool3DGrad:ay,AvgPoolGrad:iy,BatchMatMul:Zl,BatchToSpaceND:Jl,Bincount:eh,BitwiseAnd:th,BroadcastArgs:nh,BroadcastTo:ow,Cast:gu,Ceil:rh,ClipByValue:sh,Complex:oh,ComplexAbs:ih,Concat:ah,Conv2D:uh,Conv2DBackpropFilter:ch,Conv2DBackpropInput:lh,Conv3D:hh,Conv3DBackpropFilterV2:uy,Conv3DBackpropInputV2:dh,Cos:fh,Cosh:ph,CropAndResize:yh,Cumprod:mh,Cumsum:gh,DataStorage:Hg,DenseBincount:xh,DepthToSpace:bh,DepthwiseConv2dNative:vh,DepthwiseConv2dNativeBackpropFilter:wh,DepthwiseConv2dNativeBackpropInput:$h,Diag:Sh,Dilation2D:Ch,Dilation2DBackpropFilter:aw,Dilation2DBackpropInput:iw,Draw:Th,get ENV(){return Fl},Einsum:Eh,Elu:Ih,EluGrad:cy,Environment:sy,Equal:Rh,Erf:kh,Exp:_h,ExpandDims:Ah,Expm1:Oh,FFT:Dh,Fill:Fh,FlipLeftRight:Ph,Floor:Lh,FloorDiv:Bh,FromPixels:Ha,FusedBatchNorm:Mh,FusedConv2D:Xa,FusedDepthwiseConv2D:qa,GatherNd:Uh,GatherV2:Vh,Greater:zh,GreaterEqual:Wh,IFFT:Gh,Identity:yu,Imag:jh,IsFinite:Hh,IsInf:Kh,IsNan:Xh,KernelBackend:Ol,LRN:sd,LRNGrad:ly,LeakyRelu:qh,Less:Yh,LessEqual:Qh,LinSpace:Zh,Log:Jh,Log1p:ed,LogSoftmax:cw,LogicalAnd:td,LogicalNot:nd,LogicalOr:rd,LogicalXor:uw,LowerBound:lw,MatrixBandPart:hw,Max:od,MaxPool:ad,MaxPool3D:ud,MaxPool3DGrad:dy,MaxPoolGrad:hy,MaxPoolWithArgmax:cd,Maximum:id,Mean:ld,Min:hd,Minimum:dd,MirrorPad:fd,Mod:pd,MomentumOptimizer:Wp,Multinomial:md,Multiply:gd,Neg:yd,NonMaxSuppressionV3:bd,NonMaxSuppressionV4:vd,NonMaxSuppressionV5:wd,NotEqual:xd,OP_SCOPE_SUFFIX:Df,OneHot:Sd,OnesLike:$d,Optimizer:Pr,OptimizerConstructors:_1,Pack:Cd,PadV2:Td,Pool:dw,Pow:Nd,Prelu:Ed,Prod:Id,RMSPropOptimizer:Gp,RaggedGather:kd,RaggedRange:Rd,RaggedTensorToTensor:_d,Range:Ad,get Rank(){return Jc},Real:Od,RealDiv:Nh,Reciprocal:Dd,get Reduction(){return Tt},Relu:Fd,Relu6:Md,Reshape:Pd,ResizeBilinear:Bd,ResizeBilinearGrad:py,ResizeNearestNeighbor:Ld,ResizeNearestNeighborGrad:fy,Reverse:Vd,RotateWithOffset:Ef,Round:Ud,Rsqrt:zd,SGDOptimizer:Ou,ScatterNd:Wd,SearchSorted:jd,Select:Hd,Selu:Kd,Sigmoid:Zd,Sign:Qd,Sin:qd,Sinh:Yd,Slice:Xd,Softmax:sf,Softplus:Jd,SpaceToBatchND:nf,SparseFillEmptyRows:of,SparseReshape:af,SparseSegmentMean:uf,SparseSegmentSum:cf,SparseToDense:lf,SplitV:rf,Sqrt:ef,Square:my,SquaredDifference:hf,StaticRegexReplace:df,Step:Nf,StridedSlice:ff,StringNGrams:pf,StringSplit:mf,StringToHashBucketFast:gf,Sub:yf,Sum:tf,Tan:xf,Tanh:bf,Tensor:Te,TensorBuffer:gs,TensorScatterUpdate:Gd,Tile:xu,TopK:vf,Transform:wf,Transpose:Ci,Unique:$f,Unpack:Sf,UnsortedSegmentSum:Cf,UpperBound:fw,Variable:ki,ZerosLike:Tf,_FusedMatMul:Ka,abs:Bt,acos:Ky,acosh:Xy,add:ue,addN:qy,all:Yy,any:Qy,argMax:Uf,argMin:Zy,asin:Jy,asinh:e0,atan:t0,atan2:n0,atanh:r0,avgPool:Wf,avgPool3d:o0,backend:Pf,backend_util:gb,basicLSTMCell:i0,batchNorm:Zi,batchNorm2d:a0,batchNorm3d:u0,batchNorm4d:c0,batchToSpaceND:Gf,bincount:jf,bitwiseAnd:l0,booleanMaskAsync:Kx,broadcastArgs:h0,broadcastTo:Ks,broadcast_util:tS,browser:TI,buffer:Ge,cast:Se,ceil:d0,clipByValue:Hf,clone:hr,complex:gr,concat:it,concat1d:f0,concat2d:p0,concat3d:m0,concat4d:g0,conv1d:y0,conv2d:Ji,conv2dTranspose:b0,conv3d:v0,conv3dTranspose:w0,copyRegisteredKernels:xw,cos:$0,cosh:S0,cosineWindow:Iu,cumprod:C0,cumsum:T0,customGrad:jn,denseBincount:N0,deprecationWarn:Jw,depthToSpace:E0,depthwiseConv2d:vu,device_util:Kw,diag:I0,dilation2d:k0,disableDeprecationWarnings:Zw,dispose:We,disposeVariables:e2,div:ve,divNoNan:R0,dot:_0,dropout:Zx,einsum:is,elu:Xf,enableDebugMode:Qw,enableProdMode:Yw,enclosingPowerOfTwo:Dp,engine:Sn,ensureShape:A0,env:W,equal:ea,erf:O0,euclideanNorm:P0,exp:Gn,expandDims:yt,expm1:L0,eye:Qf,fft:Tu,fill:co,findBackend:a2,findBackendFactory:u2,floor:Zf,floorDiv:Vf,fused:e1,gather:Jf,gatherND:Qx,gather_util:NI,getBackend:Ff,getGradient:Yc,getKernel:Ii,getKernelsForBackend:Ya,grad:BS,grads:MS,greater:lo,greaterEqual:ep,ifft:Mi,imag:na,image:Kn,inTopKAsync:Jx,io:Kp,irfft:Ep,isFinite:B0,isInf:M0,isNaN:V0,keep:En,kernel_impls:GI,leakyRelu:tp,less:eu,lessEqual:wu,linalg:o1,linspace:U0,localResponseNormalization:z0,log:eo,log1p:np,logSigmoid:G0,logSoftmax:j0,logSumExp:sp,logicalAnd:Fi,logicalNot:op,logicalOr:ip,logicalXor:H0,losses:i1,lowerBound:K0,matMul:Re,math:yI,max:fs,maxPool:ap,maxPool3d:X0,maxPoolWithArgmax:q0,maximum:up,mean:Pi,memory:t2,meshgrid:Y0,min:Ja,minimum:Li,mirrorPad:cp,mod:Q0,moments:Z0,movingAverage:Xx,mul:Z,multiRNNCell:J0,multinomial:ex,neg:kn,nextFrame:A1,norm:ta,notEqual:lp,oneHot:Bi,ones:Tr,onesLike:tx,op:P,outerProduct:nx,pad:ks,pad1d:rx,pad2d:sx,pad3d:hp,pad4d:ox,pool:ix,pow:Js,prelu:fp,print:Mf,prod:ax,profile:n2,raggedGather:ux,raggedRange:cx,raggedTensorToTensor:lx,rand:hx,randomGamma:mx,randomNormal:Cp,randomStandardNormal:gx,randomUniform:Cu,randomUniformInt:yx,range:Ar,ready:o2,real:to,reciprocal:xx,registerBackend:Dy,registerGradient:mw,registerKernel:If,relu:ra,relu6:Tp,removeBackend:i2,reshape:K,reverse:Or,reverse1d:bx,reverse2d:vx,reverse3d:wx,reverse4d:$x,rfft:Nu,round:Np,rsqrt:Sx,scalar:be,scatterND:qx,scatter_util:UT,searchSorted:Su,selu:Cx,separableConv2d:Tx,serialization:qE,setBackend:s2,setPlatform:c2,setdiff1dAsync:Nx,sigmoid:In,sign:Ex,signal:s1,sin:Ix,sinh:kx,slice:xe,slice1d:Rx,slice2d:_x,slice3d:Ax,slice4d:Ox,slice_util:R1,softmax:Dx,softplus:rp,spaceToBatchND:dp,sparse:a1,sparseToDense:Yx,spectral:r1,split:no,sqrt:Wn,square:cn,squaredDifference:Ip,squeeze:Pe,stack:Hn,step:kp,stridedSlice:Fx,string:u1,sub:pe,sum:Be,sumOutType:bu,tan:Px,tanh:Za,tensor:un,tensor1d:dt,tensor2d:fr,tensor3d:Rp,tensor4d:Lx,tensor5d:Bx,tensor6d:Mx,tensorScatterUpdate:Vx,tensor_util:zw,test_util:eT,tidy:ce,tile:Xs,time:r2,topk:Ux,train:AI,transpose:Vi,truncatedNormal:zx,unique:Wx,unregisterGradient:yw,unregisterKernel:gw,unsortedSegmentSum:Gx,unstack:Fr,upcastType:An,upperBound:jx,util:kw,valueAndGrad:VS,valueAndGrads:US,variable:Hx,variableGrads:W0,version_core:_I,where:dr,whereAsync:Op,zeros:_r,zerosLike:Vt},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jI=W();jI.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Pt;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(Pt||(Pt={}));var Pm;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(Pm||(Pm={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HI={};function xb(n){return HI[n]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S(n,e,t,r,s){const o=e.inputParams[n];if(o&&o.inputIndexStart!==void 0){const a=o.inputIndexStart,u=o.inputIndexEnd===0?void 0:o.inputIndexEnd===void 0?a+1:o.inputIndexEnd,c=a<0?e.inputNames.length+a:a;if(o.type==="tensor")return lt(e.inputNames[c],t,r,s);if(o.type==="tensors"){const f=e.inputs.slice(a,u);return e.inputNames.slice(a,u).filter((x,w)=>{var b;return((b=f[w])===null||b===void 0?void 0:b.op)!=="NoOp"}).map(x=>lt(x,t,r,s))}const h=lt(e.inputNames[c],t,r,s),d=h.dataSync();return o.type==="number"?d[0]:ds(h.shape,d)}const i=e.attrParams[n];return i&&i.value}function lt(n,e,t,r){const[s,o]=Lt(n,t);if(r!=null){const a=r.getHashTableHandleByName(s);if(a!=null)return a}const i=t.currentContextIds.find(a=>!!e[tu(s,a)]);return i!==void 0?e[tu(s,i)][o]:void 0}function Lm(n,e,t){return e[tu(n,t.currentContextId)]}function or(n,e){const[t,r,s]=Lt(n,e);return[tu(t,e&&e.currentContextId),r,s]}function tu(n,e){return e?`${n}-${e}`:n}function Lt(n,e){if(n==="")return["",0,void 0];const t=e!=null&&e.parseNodeNameCache!=null;if(t){const o=e.parseNodeNameCache.get(n);if(o!=null)return o}const r=n.split(":");let s;if(r.length===1)s=[n,0,void 0];else{const o=r[0],i=r.length===3?r[1]:void 0,a=Number(r[r.length-1]);s=[o,a,i]}return t&&e.parseNodeNameCache.set(n,s),s}function Ua(n,e,t){let r=S("pad",n,e,t);if(r==="explicit"){r=S("explicitPaddings",n,e,t);const s=[[0,0],[0,0],[0,0],[0,0]];for(let o=0;o<4;o++)s[o][0]=r[o*2],s[o][1]=r[o*2+1];return s}return r}function ir(n){return n.kept?n:hr(n)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KI=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],XI=Object.freeze(Object.defineProperty({__proto__:null,json:KI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qI=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],YI=Object.freeze(Object.defineProperty({__proto__:null,json:qI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QI=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],ZI=Object.freeze(Object.defineProperty({__proto__:null,json:QI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JI=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],ek=Object.freeze(Object.defineProperty({__proto__:null,json:JI},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tk=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],nk=Object.freeze(Object.defineProperty({__proto__:null,json:tk},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rk=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],sk=Object.freeze(Object.defineProperty({__proto__:null,json:rk},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ok=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],ik=Object.freeze(Object.defineProperty({__proto__:null,json:ok},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ak=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],uk=Object.freeze(Object.defineProperty({__proto__:null,json:ak},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ck=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],lk=Object.freeze(Object.defineProperty({__proto__:null,json:ck},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hk=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],dk=Object.freeze(Object.defineProperty({__proto__:null,json:hk},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fk=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],pk=Object.freeze(Object.defineProperty({__proto__:null,json:fk},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mk=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],gk=Object.freeze(Object.defineProperty({__proto__:null,json:mk},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yk=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],xk=Object.freeze(Object.defineProperty({__proto__:null,json:yk},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bk=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],vk=Object.freeze(Object.defineProperty({__proto__:null,json:bk},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wk=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],$k=Object.freeze(Object.defineProperty({__proto__:null,json:wk},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sk=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],Ck=Object.freeze(Object.defineProperty({__proto__:null,json:Sk},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tk=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Nk=Object.freeze(Object.defineProperty({__proto__:null,json:Tk},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ek=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],Ik=Object.freeze(Object.defineProperty({__proto__:null,json:Ek},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kk=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],Rk=Object.freeze(Object.defineProperty({__proto__:null,json:kk},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bm{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[XI,YI,ZI,ek,nk,sk,ik,uk,lk,dk,pk,gk,xk,vk,$k,Ck,Nk,Ik,Rk],t=[].concat(...e.map(r=>r.json));this.opMappers=t.reduce((r,s)=>(r[s.tfOpName]=s,r),{})}transformGraph(e,t={}){const r=e.node,s=[],o=[],i=[],a=r.reduce((w,b)=>(w[b.name]=this.mapNode(b),b.op.startsWith("Placeholder")?s.push(w[b.name]):b.op==="Const"?o.push(w[b.name]):(b.input==null||b.input.length===0)&&i.push(w[b.name]),w),{});let u=[];const c=[];let h={},d={};t!=null&&(h=this.mapSignatureEntries(t.inputs),d=this.mapSignatureEntries(t.outputs));const f=Object.keys(a);f.forEach(w=>{const b=a[w];b.inputNames.forEach(($,N)=>{const[k,,I]=or($),O=a[k];if(O.outputs!=null){const F=O.outputs.indexOf(I);if(F!==-1){const M=`${k}:${F}`;b.inputNames[N]=M}}b.inputs.push(O),O.children.push(b)})}),Object.keys(d).length===0?f.forEach(w=>{const b=a[w];b.children.length===0&&c.push(b)}):Object.keys(d).forEach(w=>{const[b]=or(w),$=a[b];$!=null&&($.signatureKey=d[w],c.push($))}),Object.keys(h).length>0?Object.keys(h).forEach(w=>{const[b]=or(w),$=a[b];$&&($.signatureKey=h[w],u.push($))}):u=s;let g={};e.library!=null&&e.library.function!=null&&(g=e.library.function.reduce((w,b)=>(w[b.signature.name]=this.mapFunction(b),w),{}));const x={nodes:a,inputs:u,outputs:c,weights:o,placeholders:s,signature:t,functions:g};return i.length>0&&(x.initNodes=i),x}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,r)=>(t[e[r].name]=r,t),{})}mapNode(e){const t=xb(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const r={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(s=>s.startsWith("^")?s.slice(1):s),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(r.inputParams=t.inputs.reduce((s,o)=>(s[o.name]={type:o.type,inputIndexStart:o.start,inputIndexEnd:o.end},s),{})),t.attrs!=null&&(r.attrParams=t.attrs.reduce((s,o)=>{const i=o.type;let a;switch(o.type){case"string":a=gl(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=gl(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"string[]":a=Sl(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=Sl(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number":a=xl(e.attr,o.tfName,o.defaultValue||0),a===void 0&&o.tfDeprecatedName&&(a=xl(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number[]":a=$l(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=$l(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool":a=yl(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=yl(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool[]":a=Tl(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=Tl(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape":a=wl(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=wl(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape[]":a=Cl(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=Cl(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype":a=bl(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=bl(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype[]":a=vl(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=vl(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"func":a=Mm(e.attr,o.tfName,o.defaultValue),a===void 0&&o.tfDeprecatedName&&(a=Mm(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${o.type} for op: ${e.op}`)}return s[o.name]={value:a,type:i},s},{})),r}mapFunction(e){const t=e.nodeDef,r=[],s=[];let o={};t!=null&&(o=t.reduce((d,f)=>(d[f.name]=this.mapNode(f),f.op==="Const"&&s.push(d[f.name]),d),{}));const i=[],a=[];e.signature.inputArg.forEach(d=>{const[f]=or(d.name),g={name:f,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:tm(d.type),type:"dtype"}},children:[]};g.signatureKey=d.name,i.push(g),o[f]=g}),Object.keys(o).forEach(d=>{const f=o[d];f.inputNames.forEach((g,x)=>{const[w,,b]=or(g),$=o[w];if($.outputs!=null){const N=$.outputs.indexOf(b);if(N!==-1){const k=`${w}:${N}`;f.inputNames[x]=k}}f.inputs.push($),$.children.push(f)})});const c=e.ret;e.signature.outputArg.forEach(d=>{const[f,g]=or(c[d.name]),x=o[f];x!=null&&(x.defaultOutput=g,a.push(x))});const h=this.mapArgsToSignature(e);return{nodes:o,inputs:i,outputs:a,weights:s,placeholders:r,signature:h}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,r)=>(t[r.name]=this.mapArgToTensorInfo(r),t),{}),outputs:e.signature.outputArg.reduce((t,r)=>(t[r.name]=this.mapArgToTensorInfo(r,e.ret),t),{})}}mapArgToTensorInfo(e,t){let r=e.name;return t!=null&&(r=t[r]),{name:r,dtype:e.type}}}function _k(n){const e=W().global;if(typeof e.atob<"u")return e.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function bb(n,e){const t=Array.isArray(n)?String.fromCharCode.apply(null,n):_k(n);return e?t:t.toLowerCase()}function gl(n,e,t,r=!1){const s=n[e];return s!=null?bb(s.s,r):t}function yl(n,e,t){const r=n[e];return r?r.b:t}function xl(n,e,t){const r=n[e]||{},s=r.i!=null?r.i:r.f!=null?r.f:t;return typeof s=="number"?s:parseInt(s,10)}function tm(n){switch(typeof n=="string"&&(n=Pt[n]),n){case Pt.DT_FLOAT:case Pt.DT_HALF:return"float32";case Pt.DT_INT32:case Pt.DT_INT64:case Pt.DT_INT8:case Pt.DT_UINT8:return"int32";case Pt.DT_BOOL:return"bool";case Pt.DT_DOUBLE:return"float32";case Pt.DT_STRING:return"string";case Pt.DT_COMPLEX64:case Pt.DT_COMPLEX128:return"complex64";default:return null}}function Mm(n,e,t){const r=n[e];return r&&r.func?r.func.name:t}function bl(n,e,t){const r=n[e];return r&&r.type?tm(r.type):t}function vl(n,e,t){const r=n[e];return r&&r.list&&r.list.type?r.list.type.map(s=>tm(s)):t}function vb(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function wl(n,e,t){const r=n[e];return r&&r.shape?vb(r.shape):t}function $l(n,e,t){const r=n[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(s=>typeof s=="number"?s:parseInt(s,10)):t}function Sl(n,e,t,r=!1){const s=n[e];return s&&s.list&&s.list.s?s.list.s.map(o=>bb(o,r)):t}function Cl(n,e,t){const r=n[e];return r&&r.list&&r.list.shape?r.list.shape.map(s=>vb(s)):t}function Tl(n,e,t){const r=n[e];return r&&r.list&&r.list.b?r.list.b:t}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ak{constructor(e,t,r){this.node=e,this.tensorMap=t,this.context=r,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(s=>this.getInput(s)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((s,o)=>(s[o]=this.getAttr(o),s),{}))}getInput(e){return lt(e,this.tensorMap,this.context)}getAttr(e,t){const r=this.node.rawAttrs[e];if(r.tensor!=null)return lt(e,this.tensorMap,this.context);if(r.i!=null||r.f!=null)return xl(this.node.rawAttrs,e,t);if(r.s!=null)return gl(this.node.rawAttrs,e,t);if(r.b!=null)return yl(this.node.rawAttrs,e,t);if(r.shape!=null)return wl(this.node.rawAttrs,e,t);if(r.type!=null)return bl(this.node.rawAttrs,e,t);if(r.list!=null){if(r.list.i!=null||r.list.f!=null)return $l(this.node.rawAttrs,e,t);if(r.list.s!=null)return Sl(this.node.rawAttrs,e,t);if(r.list.shape!=null)return Cl(this.node.rawAttrs,e,t);if(r.list.b!=null)return Tl(this.node.rawAttrs,e,t);if(r.list.type!=null)return vl(this.node.rawAttrs,e,t)}return t}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ft=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:Df,abs:Bt,acos:Ky,acosh:Xy,add:ue,addN:qy,all:Yy,any:Qy,argMax:Uf,argMin:Zy,asin:Jy,asinh:e0,atan:t0,atan2:n0,atanh:r0,avgPool:Wf,avgPool3d:o0,basicLSTMCell:i0,batchNorm:Zi,batchNorm2d:a0,batchNorm3d:u0,batchNorm4d:c0,batchToSpaceND:Gf,bincount:jf,bitwiseAnd:l0,booleanMaskAsync:Kx,broadcastArgs:h0,broadcastTo:Ks,buffer:Ge,cast:Se,ceil:d0,clipByValue:Hf,clone:hr,complex:gr,concat:it,concat1d:f0,concat2d:p0,concat3d:m0,concat4d:g0,conv1d:y0,conv2d:Ji,conv2dTranspose:b0,conv3d:v0,conv3dTranspose:w0,cos:$0,cosh:S0,cosineWindow:Iu,cumprod:C0,cumsum:T0,denseBincount:N0,depthToSpace:E0,depthwiseConv2d:vu,diag:I0,dilation2d:k0,div:ve,divNoNan:R0,dot:_0,dropout:Zx,einsum:is,elu:Xf,enclosingPowerOfTwo:Dp,ensureShape:A0,equal:ea,erf:O0,euclideanNorm:P0,exp:Gn,expandDims:yt,expm1:L0,eye:Qf,fft:Tu,fill:co,floor:Zf,floorDiv:Vf,fused:e1,gather:Jf,gatherND:Qx,greater:lo,greaterEqual:ep,ifft:Mi,imag:na,image:Kn,inTopKAsync:Jx,irfft:Ep,isFinite:B0,isInf:M0,isNaN:V0,leakyRelu:tp,less:eu,lessEqual:wu,linalg:o1,linspace:U0,localResponseNormalization:z0,log:eo,log1p:np,logSigmoid:G0,logSoftmax:j0,logSumExp:sp,logicalAnd:Fi,logicalNot:op,logicalOr:ip,logicalXor:H0,losses:i1,lowerBound:K0,matMul:Re,max:fs,maxPool:ap,maxPool3d:X0,maxPoolWithArgmax:q0,maximum:up,mean:Pi,meshgrid:Y0,min:Ja,minimum:Li,mirrorPad:cp,mod:Q0,moments:Z0,movingAverage:Xx,mul:Z,multiRNNCell:J0,multinomial:ex,neg:kn,norm:ta,notEqual:lp,oneHot:Bi,ones:Tr,onesLike:tx,op:P,outerProduct:nx,pad:ks,pad1d:rx,pad2d:sx,pad3d:hp,pad4d:ox,pool:ix,pow:Js,prelu:fp,print:Mf,prod:ax,raggedGather:ux,raggedRange:cx,raggedTensorToTensor:lx,rand:hx,randomGamma:mx,randomNormal:Cp,randomStandardNormal:gx,randomUniform:Cu,randomUniformInt:yx,range:Ar,real:to,reciprocal:xx,relu:ra,relu6:Tp,reshape:K,reverse:Or,reverse1d:bx,reverse2d:vx,reverse3d:wx,reverse4d:$x,rfft:Nu,round:Np,rsqrt:Sx,scalar:be,scatterND:qx,searchSorted:Su,selu:Cx,separableConv2d:Tx,setdiff1dAsync:Nx,sigmoid:In,sign:Ex,signal:s1,sin:Ix,sinh:kx,slice:xe,slice1d:Rx,slice2d:_x,slice3d:Ax,slice4d:Ox,softmax:Dx,softplus:rp,spaceToBatchND:dp,sparse:a1,sparseToDense:Yx,spectral:r1,split:no,sqrt:Wn,square:cn,squaredDifference:Ip,squeeze:Pe,stack:Hn,step:kp,stridedSlice:Fx,string:u1,sub:pe,sum:Be,tan:Px,tanh:Za,tensor:un,tensor1d:dt,tensor2d:fr,tensor3d:Rp,tensor4d:Lx,tensor5d:Bx,tensor6d:Mx,tensorScatterUpdate:Vx,tile:Xs,topk:Ux,transpose:Vi,truncatedNormal:zx,unique:Wx,unsortedSegmentSum:Gx,unstack:Fr,upperBound:jx,variable:Hx,where:dr,whereAsync:Op,zeros:_r,zerosLike:Vt},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ok=(n,e,t,r=ft)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(S("a",n,e,t),S("b",n,e,t))];case"AddN":return[r.addN(S("tensors",n,e,t))];case"FloorMod":case"Mod":return[r.mod(S("a",n,e,t),S("b",n,e,t))];case"Mul":return[r.mul(S("a",n,e,t),S("b",n,e,t))];case"RealDiv":case"Div":return[r.div(S("a",n,e,t),S("b",n,e,t))];case"DivNoNan":return[r.divNoNan(S("a",n,e,t),S("b",n,e,t))];case"FloorDiv":return[r.floorDiv(S("a",n,e,t),S("b",n,e,t))];case"Sub":return[r.sub(S("a",n,e,t),S("b",n,e,t))];case"Minimum":return[r.minimum(S("a",n,e,t),S("b",n,e,t))];case"Maximum":return[r.maximum(S("a",n,e,t),S("b",n,e,t))];case"Pow":return[r.pow(S("a",n,e,t),S("b",n,e,t))];case"SquaredDifference":return[r.squaredDifference(S("a",n,e,t),S("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dk=(n,e,t,r=ft)=>{switch(n.op){case"Abs":case"ComplexAbs":return[r.abs(S("x",n,e,t))];case"Acos":return[r.acos(S("x",n,e,t))];case"Acosh":return[r.acosh(S("x",n,e,t))];case"Asin":return[r.asin(S("x",n,e,t))];case"Asinh":return[r.asinh(S("x",n,e,t))];case"Atan":return[r.atan(S("x",n,e,t))];case"Atan2":return[r.atan2(S("x",n,e,t),S("y",n,e,t))];case"Atanh":return[r.atanh(S("x",n,e,t))];case"Ceil":return[r.ceil(S("x",n,e,t))];case"Complex":return[r.complex(S("real",n,e,t),S("imag",n,e,t))];case"Cos":return[r.cos(S("x",n,e,t))];case"Cosh":return[r.cosh(S("x",n,e,t))];case"Elu":return[r.elu(S("x",n,e,t))];case"Erf":return[r.erf(S("x",n,e,t))];case"Exp":return[r.exp(S("x",n,e,t))];case"Expm1":return[r.expm1(S("x",n,e,t))];case"Floor":return[r.floor(S("x",n,e,t))];case"Log":return[r.log(S("x",n,e,t))];case"Log1p":return[r.log1p(S("x",n,e,t))];case"Imag":return[r.imag(S("x",n,e,t))];case"Neg":return[r.neg(S("x",n,e,t))];case"Reciprocal":return[r.reciprocal(S("x",n,e,t))];case"Real":return[r.real(S("x",n,e,t))];case"Relu":return[r.relu(S("x",n,e,t))];case"Round":return[r.round(S("x",n,e,t))];case"Selu":return[r.selu(S("x",n,e,t))];case"Sigmoid":return[r.sigmoid(S("x",n,e,t))];case"Sin":return[r.sin(S("x",n,e,t))];case"Sign":return[r.sign(S("x",n,e,t))];case"Sinh":return[r.sinh(S("x",n,e,t))];case"Softplus":return[r.softplus(S("x",n,e,t))];case"Sqrt":return[r.sqrt(S("x",n,e,t))];case"Square":return[r.square(S("x",n,e,t))];case"Tanh":return[r.tanh(S("x",n,e,t))];case"Tan":return[r.tan(S("x",n,e,t))];case"ClipByValue":return[r.clipByValue(S("x",n,e,t),S("clipValueMin",n,e,t),S("clipValueMax",n,e,t))];case"Relu6":return[r.relu6(S("x",n,e,t))];case"Rsqrt":return[r.rsqrt(lt(n.inputNames[0],e,t))];case"LeakyRelu":return[r.leakyRelu(S("x",n,e,t),S("alpha",n,e,t))];case"Prelu":return[r.prelu(S("x",n,e,t),S("alpha",n,e,t))];case"IsNan":return[r.isNaN(lt(n.inputNames[0],e,t))];case"IsInf":return[r.isInf(lt(n.inputNames[0],e,t))];case"IsFinite":return[r.isFinite(lt(n.inputNames[0],e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function en(n,e,t=""){if(!(typeof n=="number"||typeof e=="number")){A(n.length===e.length,()=>t+` Shapes ${n} and ${e} must match`);for(let r=0;r<n.length;r++){const s=n[r],o=e[r];A(s<0||o<0||s===o,()=>t+` Shapes ${n} and ${e} must match`)}}}function Vm(n){return!(typeof n=="number"||n.some(e=>e<0))}function gi(n,e,t){let r=Nl(n,t);const s=!Vm(r);if(s&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&e.forEach(o=>{r=Nl(o.shape,r)}),!Vm(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Nl(n,e){if(typeof n=="number")return e;if(typeof e=="number")return n;if(n.length!==e.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${e}`);const t=[];for(let r=0;r<n.length;++r){const s=n[r],o=e[r];if(s>=0&&o>=0&&s!==o)throw new Error(`Incompatible shape during merge: ${n} vs. ${e}`);t[r]=s>=0?s:o}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fk{constructor(e,t,r,s,o,i,a){this.name=e,this.dtype=t,this.maxSize=r,this.elementShape=s,this.identicalElementShapes=o,this.dynamicSize=i,this.clearAfterRead=a,this.tensors=[],this.closed_=!1,this.idTensor=be(0),En(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const r=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),en(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),r.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(r.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);r.tensor=t,En(t),r.written=!0,this.tensors[e]=r}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((r,s)=>this.write(r,t[s]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let s=0;s<this.size();s++)e.push(s)}if(e.length===0)return un([],[0].concat(this.elementShape));const r=this.readMany(e);return en(this.elementShape,r[0].shape,"TensorArray shape mismatch: "),Hn(r,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return un([],[0].concat(this.elementShape));const t=[];for(let s=0;s<this.size();s++)t.push(s);const r=this.readMany(t);return en(this.elementShape,r[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${r[0].shape})`),it(r,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const r=Math.max(...e);if(!this.dynamicSize&&r>=this.maxSize)throw new Error(`Max index must be < array size (${r}  vs. ${this.maxSize})`);this.writeMany(e,Fr(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let r=0;const s=e.map(u=>(r+=u,r));if(r!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const o=r===0?0:t.size/r,i=[];ce(()=>{t=K(t,[1,r,o]);for(let u=0;u<e.length;++u){const h=[0,u===0?0:s[u-1],0],d=[1,e[u],o];i[u]=K(xe(t,h,d),this.elementShape)}return i});const a=[];for(let u=0;u<e.length;u++)a[u]=u;this.writeMany(a,i)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ss{get id(){return this.idTensor.id}constructor(e,t,r,s=-1){this.tensors=e,this.elementShape=t,this.elementDtype=r,e!=null&&e.forEach(o=>{if(r!==o.dtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${o.dtype}`);en(t,o.shape,"TensorList shape mismatch: "),En(o)}),this.idTensor=be(0),this.maxNumElements=s,En(this.idTensor)}copy(){return new Ss([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,r=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(r!==-1&&this.tensors.length!==r)throw new Error(`Operation expected a list with ${r} elements but got a list with ${this.tensors.length} elements.`);en(e,this.elementShape,"TensorList shape mismatch: ");const s=gi(this.elementShape,this.tensors,e);return ce(()=>{const o=this.tensors.map(i=>K(i,s));return Hn(o,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const r=gi(this.elementShape,this.tensors,e),s=this.tensors.pop();return s.kept=!1,en(s.shape,e,"TensorList shape mismatch: "),K(s,r)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(en(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");En(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new Ss([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let r=0;r<Math.min(this.tensors.length,e);++r)t.tensors[r]=this.tensors[r];return t}getItem(e,t,r){if(r!==this.elementDtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);en(this.tensors[e].shape,t,"TensorList shape mismatch: ");const s=gi(this.elementShape,this.tensors,t);return K(this.tensors[e],s)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);en(this.elementShape,t.shape,"TensorList shape mismatch: "),En(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,r){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);en(this.elementShape,r,"TensorList shape mismatch: "),e=e.slice(0,this.size());const s=gi(this.elementShape,this.tensors,r);return e.length===0?un([],[0].concat(s)):ce(()=>{const o=e.map(i=>K(this.tensors[i],s));return Hn(o,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);en(this.elementShape,t,"TensorList shape mismatch: ");const r=gi(this.elementShape,this.tensors,t);return this.size()===0?un([],[0].concat(r)):ce(()=>{const s=this.tensors.map(o=>K(o,r));return it(s,0)})}}function Pk(n,e,t){const r=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==t)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${t}`);const s=n.shape.slice(1);en(s,e,"TensorList shape mismatch: ");const o=Fr(n);return new Ss(o,e,r)}function Lk(n,e,t,r){return new Ss([],n,e,r)}function Bk(n,e,t,r){if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const s=Math.max(...e);if(r!=null&&r!==-1&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const o=new Ss([],t,n.dtype,r),i=Fr(n,0);return e.forEach((a,u)=>{o.setItem(a,i[u])}),o}function Mk(n,e,t){let r=0;const s=e.map(h=>(r+=h,r));if(r!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${n.shape}`);const o=n.shape.slice(1),i=Nl(o,t),a=r===0?0:n.size/r,u=ce(()=>{const h=[];n=K(n,[1,r,a]);for(let d=0;d<e.length;++d){const g=[0,d===0?0:s[d-1],0],x=[1,e[d],a];h[d]=K(xe(n,g,x),i)}return n.dispose(),h}),c=new Ss([],t,n.dtype,e.length);for(let h=0;h<u.length;h++)c.setItem(h,u[h]);return c}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vk=async(n,e,t)=>{switch(n.op){case"If":case"StatelessIf":{const r=S("thenBranch",n,e,t),s=S("elseBranch",n,e,t),o=S("cond",n,e,t),i=S("args",n,e,t);return(await o.data())[0]?t.functionMap[r].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap):t.functionMap[s].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{const r=S("body",n,e,t),s=S("cond",n,e,t),o=S("args",n,e,t),i=await t.functionMap[s].executeFunctionAsync(o,t.tensorArrayMap,t.tensorListMap),a=o.map(h=>h.id);let u=await i[0].data();i.forEach(h=>{!h.kept&&a.indexOf(h.id)===-1&&h.dispose()});let c=o;for(;u[0];){const h=c;c=await t.functionMap[r].executeFunctionAsync(c,t.tensorArrayMap,t.tensorListMap);const d=c.map(g=>g.id);h.forEach(g=>{!g.kept&&a.indexOf(g.id)===-1&&d.indexOf(g.id)===-1&&g.dispose()});const f=await t.functionMap[s].executeFunctionAsync(c,t.tensorArrayMap,t.tensorListMap);u=await f[0].data(),f.forEach(g=>{!g.kept&&a.indexOf(g.id)===-1&&d.indexOf(g.id)===-1&&g.dispose()})}return c}case"LoopCond":{const r=S("pred",n,e,t);return[ir(r)]}case"Switch":{const r=S("pred",n,e,t);let s=S("data",n,e,t);return s.kept||(s=ir(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=n.inputNames.find(s=>lt(s,e,t)!==void 0);if(r){const s=lt(r,e,t);return[ir(s)]}return}case"Enter":{const r=S("frameName",n,e,t),s=S("tensor",n,e,t);return t.enterFrame(r),[ir(s)]}case"Exit":{const r=S("tensor",n,e,t);return t.exitFrame(),[ir(r)]}case"NextIteration":{const r=S("tensor",n,e,t);return t.nextIteration(),[ir(r)]}case"TensorArrayV3":{const r=S("size",n,e,t),s=S("dtype",n,e,t),o=S("elementShape",n,e,t),i=S("dynamicSize",n,e,t),a=S("clearAfterRead",n,e,t),u=S("identicalElementShapes",n,e,t),c=S("name",n,e,t),h=new Fk(c,s,r,o,u,i,a);return t.addTensorArray(h),[h.idTensor,be(1)]}case"TensorArrayWriteV3":{const r=S("tensorArrayId",n,e,t),s=S("index",n,e,t),o=S("tensor",n,e,t),i=t.getTensorArray(r.id);return i.write(s,o),[i.idTensor]}case"TensorArrayReadV3":{const r=S("tensorArrayId",n,e,t),s=S("index",n,e,t);return[t.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=S("tensorArrayId",n,e,t),s=S("indices",n,e,t),o=S("dtype",n,e,t);return[t.getTensorArray(r.id).gather(s,o)]}case"TensorArrayScatterV3":{const r=S("tensorArrayId",n,e,t),s=S("indices",n,e,t),o=S("tensor",n,e,t),i=t.getTensorArray(r.id);return i.scatter(s,o),[i.idTensor]}case"TensorArrayConcatV3":{const r=S("tensorArrayId",n,e,t),s=t.getTensorArray(r.id),o=S("dtype",n,e,t);return[s.concat(o)]}case"TensorArraySplitV3":{const r=S("tensorArrayId",n,e,t),s=S("tensor",n,e,t),o=S("lengths",n,e,t),i=t.getTensorArray(r.id);return i.split(o,s),[i.idTensor]}case"TensorArraySizeV3":{const r=S("tensorArrayId",n,e,t),s=t.getTensorArray(r.id);return[be(s.size(),"int32")]}case"TensorArrayCloseV3":{const r=S("tensorArrayId",n,e,t),s=t.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=S("tensorListId",n,e,t),s=S("index",n,e,t),o=S("tensor",n,e,t),i=t.getTensorList(r.id);return i.setItem(s,o),[i.idTensor]}case"TensorListGetItem":{const r=S("tensorListId",n,e,t),s=S("index",n,e,t),o=S("elementShape",n,e,t),i=S("elementDType",n,e,t);return[t.getTensorList(r.id).getItem(s,o,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=S("indices",n,e,t),s=S("tensor",n,e,t),o=S("elementShape",n,e,t),i=S("numElements",n,e,t),a=Bk(s,r,o,i);return t.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=S("elementShape",n,e,t),s=S("elementDType",n,e,t);let o;n.op==="TensorListReserve"?o="numElements":o="maxNumElements";const i=S(o,n,e,t),a=n.op==="TensorListReserve"?-1:i,u=Lk(r,s,i,a);return t.addTensorList(u),[u.idTensor]}case"TensorListGather":{const r=S("tensorListId",n,e,t),s=S("indices",n,e,t),o=S("elementShape",n,e,t),i=S("elementDType",n,e,t);return[t.getTensorList(r.id).gather(s,i,o)]}case"TensorListStack":{const r=S("tensorListId",n,e,t),s=S("elementShape",n,e,t),o=S("elementDType",n,e,t),i=S("numElements",n,e,t);return[t.getTensorList(r.id).stack(s,o,i)]}case"TensorListFromTensor":{const r=S("tensor",n,e,t),s=S("elementShape",n,e,t),o=S("elementDType",n,e,t),i=Pk(r,s,o);return t.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=S("tensorListId",n,e,t),s=t.getTensorList(r.id),o=S("dtype",n,e,t),i=S("elementShape",n,e,t);return[s.concat(o,i)]}case"TensorListPushBack":{const r=S("tensorListId",n,e,t),s=S("tensor",n,e,t),o=t.getTensorList(r.id);return o.pushBack(s),[o.idTensor]}case"TensorListPopBack":{const r=S("tensorListId",n,e,t),s=S("elementShape",n,e,t),o=S("elementDType",n,e,t);return[t.getTensorList(r.id).popBack(s,o)]}case"TensorListSplit":{const r=S("tensor",n,e,t),s=S("elementShape",n,e,t),o=S("lengths",n,e,t),i=Mk(r,o,s);return t.addTensorList(i),[i.idTensor]}case"TensorListLength":{const r=S("tensorListId",n,e,t),s=t.getTensorList(r.id);return[be(s.size(),"int32")]}case"TensorListResize":{const r=S("tensorListId",n,e,t),s=S("size",n,e,t),i=t.getTensorList(r.id).resize(s);return t.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Um(n,e,t){const[r,s]=S("fusedOps",n,e,t),o=r==="biasadd",i=!o,a=s==="prelu",u=r==="fusedbatchnorm",c=S("numArgs",n,e,t);if(o){if(a&&c!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&o&&c!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const h=S("strides",n,e,t),d=Ua(n,e,t),f=S("dataFormat",n,e,t).toUpperCase(),g=S("dilations",n,e,t);let[x,w]=S("args",n,e,t);i&&(w=x,x=void 0);const b=S("leakyreluAlpha",n,e,t);return{stride:h,pad:d,dataFormat:f,dilations:g,biasArg:x,preluArg:w,activationFunc:s,leakyreluAlpha:b}}const Uk=(n,e,t,r=ft)=>{switch(n.op){case"Conv1D":{const s=S("stride",n,e,t),o=S("pad",n,e,t),i=S("dataFormat",n,e,t).toUpperCase(),a=S("dilation",n,e,t);return[r.conv1d(S("x",n,e,t),S("filter",n,e,t),s,o,i,a)]}case"Conv2D":{const s=S("strides",n,e,t),o=Ua(n,e,t),i=S("dataFormat",n,e,t).toUpperCase(),a=S("dilations",n,e,t);return[r.conv2d(S("x",n,e,t),S("filter",n,e,t),[s[1],s[2]],o,i,[a[1],a[2]])]}case"_FusedConv2D":{const{stride:s,pad:o,dataFormat:i,dilations:a,biasArg:u,preluArg:c,activationFunc:h,leakyreluAlpha:d}=Um(n,e,t);return[r.fused.conv2d({x:S("x",n,e,t),filter:S("filter",n,e,t),strides:[s[1],s[2]],pad:o,dataFormat:i,dilations:[a[1],a[2]],bias:u,activation:h,preluActivationWeights:c,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:o,dataFormat:i,dilations:a,biasArg:u,preluArg:c,activationFunc:h,leakyreluAlpha:d}=Um(n,e,t);return[r.fused.depthwiseConv2d({x:S("x",n,e,t),filter:S("filter",n,e,t),strides:[s[1],s[2]],pad:o,dataFormat:i,dilations:[a[1],a[2]],bias:u,activation:h,preluActivationWeights:c,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=S("outputShape",n,e,t),o=S("strides",n,e,t),i=Ua(n,e,t);return[r.conv2dTranspose(S("x",n,e,t),S("filter",n,e,t),s,[o[1],o[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=S("strides",n,e,t),o=Ua(n,e,t),i=S("dilations",n,e,t),a=S("dataFormat",n,e,t).toUpperCase();return[r.depthwiseConv2d(S("input",n,e,t),S("filter",n,e,t),[s[1],s[2]],o,a,[i[1],i[2]])]}case"Conv3D":{const s=S("strides",n,e,t),o=S("pad",n,e,t),i=S("dataFormat",n,e,t).toUpperCase(),a=S("dilations",n,e,t);return[r.conv3d(S("x",n,e,t),S("filter",n,e,t),[s[1],s[2],s[3]],o,i,[a[1],a[2],a[3]])]}case"AvgPool":{const s=S("strides",n,e,t),o=S("pad",n,e,t),i=S("kernelSize",n,e,t);return[r.avgPool(S("x",n,e,t),[i[1],i[2]],[s[1],s[2]],o)]}case"MaxPool":{const s=S("strides",n,e,t),o=S("pad",n,e,t),i=S("kernelSize",n,e,t);return[r.maxPool(S("x",n,e,t),[i[1],i[2]],[s[1],s[2]],o)]}case"MaxPoolWithArgmax":{const s=S("strides",n,e,t),o=S("pad",n,e,t),i=S("kernelSize",n,e,t),a=S("includeBatchInIndex",n,e,t),{result:u,indexes:c}=r.maxPoolWithArgmax(S("x",n,e,t),[i[1],i[2]],[s[1],s[2]],o,a);return[u,c]}case"AvgPool3D":{const s=S("strides",n,e,t),o=S("pad",n,e,t),i=S("kernelSize",n,e,t);return[r.avgPool3d(S("x",n,e,t),[i[1],i[2],i[3]],[s[1],s[2],s[3]],o)]}case"MaxPool3D":{const s=S("strides",n,e,t),o=S("pad",n,e,t),i=S("kernelSize",n,e,t);return[r.maxPool3d(S("x",n,e,t),[i[1],i[2],i[3]],[s[1],s[2],s[3]],o)]}case"Dilation2D":{const s=S("strides",n,e,t),o=S("pad",n,e,t),i=S("dilations",n,e,t),a=s[1],u=s[2],c=i[1],h=i[2];return[r.dilation2d(S("x",n,e,t),S("filter",n,e,t),[a,u],o,[c,h],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zk=(n,e,t,r=ft)=>{switch(n.op){case"Fill":{const s=S("shape",n,e,t),o=S("dtype",n,e,t),i=S("value",n,e,t);return[r.fill(s,i,o)]}case"LinSpace":{const s=S("start",n,e,t),o=S("stop",n,e,t),i=S("num",n,e,t);return[r.linspace(s,o,i)]}case"Multinomial":{const s=S("logits",n,e,t),o=S("numSamples",n,e,t),i=S("seed",n,e,t);return[r.multinomial(s,o,i)]}case"OneHot":{const s=S("indices",n,e,t),o=S("depth",n,e,t),i=S("onValue",n,e,t),a=S("offValue",n,e,t),u=S("dtype",n,e,t);return[r.oneHot(s,o,i,a,u)]}case"Ones":return[r.ones(S("shape",n,e,t),S("dtype",n,e,t))];case"OnesLike":return[r.onesLike(S("x",n,e,t))];case"RandomStandardNormal":return[r.randomStandardNormal(S("shape",n,e,t),S("dtype",n,e,t),S("seed",n,e,t))];case"RandomUniform":return[r.randomUniform(S("shape",n,e,t),S("minval",n,e,t),S("maxval",n,e,t),S("dtype",n,e,t))];case"RandomUniformInt":return[r.randomUniformInt(S("shape",n,e,t),S("minval",n,e,t),S("maxval",n,e,t),S("seed",n,e,t))];case"Range":{const s=S("start",n,e,t),o=S("stop",n,e,t),i=S("step",n,e,t);return[r.range(s,o,i,S("dtype",n,e,t))]}case"TruncatedNormal":{const s=S("shape",n,e,t),o=S("mean",n,e,t),i=S("stdDev",n,e,t),a=S("seed",n,e,t);return[r.truncatedNormal(s,o,i,S("dtype",n,e,t),a)]}case"Zeros":return[r.zeros(S("shape",n,e,t),S("dtype",n,e,t))];case"ZerosLike":return[r.zerosLike(S("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ac(n,e,t){const r=S("boxes",n,e,t),s=S("scores",n,e,t),o=S("maxOutputSize",n,e,t),i=S("iouThreshold",n,e,t),a=S("scoreThreshold",n,e,t),u=S("softNmsSigma",n,e,t);return{boxes:r,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:a,softNmsSigma:u}}const Wk=async(n,e,t,r,s=ft)=>{switch(n.op){case"NonMaxSuppressionV5":{const{boxes:o,scores:i,maxOutputSize:a,iouThreshold:u,scoreThreshold:c,softNmsSigma:h}=Ac(n,e,t),d=await s.image.nonMaxSuppressionWithScoreAsync(o,i,a,u,c,h);return[d.selectedIndices,d.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:o,scores:i,maxOutputSize:a,iouThreshold:u,scoreThreshold:c}=Ac(n,e,t),h=S("padToMaxOutputSize",n,e,t),d=await s.image.nonMaxSuppressionPaddedAsync(o,i,a,u,c,h);return[d.selectedIndices,d.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:o,scores:i,maxOutputSize:a,iouThreshold:u,scoreThreshold:c}=Ac(n,e,t);return[await s.image.nonMaxSuppressionAsync(o,i,a,u,c)]}case"Where":{const o=s.cast(S("condition",n,e,t),"bool"),i=[await s.whereAsync(o)];return o.dispose(),i}case"ListDiff":return s.setdiff1dAsync(S("x",n,e,t),S("y",n,e,t));default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gk=(n,e,t,r=ft)=>{switch(n.op){case"LowerBound":{const s=S("sortedSequence",n,e,t),o=S("values",n,e,t);return[r.lowerBound(s,o)]}case"TopKV2":{const s=S("x",n,e,t),o=S("k",n,e,t),i=S("sorted",n,e,t),a=r.topk(s,o,i);return[a.values,a.indices]}case"UpperBound":{const s=S("sortedSequence",n,e,t),o=S("values",n,e,t);return[r.upperBound(s,o)]}case"Unique":{const s=S("x",n,e,t),o=r.unique(s);return[o.values,o.indices]}case"UniqueV2":{const s=S("x",n,e,t),o=S("axis",n,e,t),i=r.unique(s,o);return[i.values,i.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jk=(n,e,t,r=ft)=>{switch(n.op){case"Const":return e[n.name];case"PlaceholderWithDefault":const s=S("default",n,e,t);return[lt(n.name,e,t)||s];case"Placeholder":return[lt(n.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const h=S("x",n,e,t);return[ir(h)]}case"IdentityN":return S("x",n,e,t).map(h=>ir(h));case"Snapshot":const o=S("x",n,e,t);return[ir(o)];case"Shape":return[r.tensor1d(S("x",n,e,t).shape,"int32")];case"ShapeN":return S("x",n,e,t).map(h=>r.tensor1d(h.shape));case"Size":return[r.scalar(S("x",n,e,t).size,"int32")];case"Rank":return[r.scalar(S("x",n,e,t).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const i=S("x",n,e,t),a=S("data",n,e,t),u=S("message",n,e,t),c=S("summarize",n,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let h=0;h<a.length;h++)console.log(Array.prototype.slice.call(a[h].dataSync()).slice(0,c));return[i];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hk{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=be(0),this.tensorMap=new Map,En(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return be(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const r=await e.data();return this.tensorMap.forEach(s=>s.dispose()),this.tensorMap.clear(),ce(()=>{const s=Fr(t),o=r.length,i=s.length;A(o===i,()=>`The number of elements doesn't match, keys has ${o} elements, the values has ${i} elements.`);for(let a=0;a<o;a++){const u=r[a],c=s[a];En(c),this.tensorMap.set(u,c)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const r=await e.data();return ce(()=>{const s=[];for(let o=0;o<r.length;o++){const i=r[o],a=this.findWithDefault(i,t);s.push(a)}return Hn(s)})}findWithDefault(e,t){const r=this.tensorMap.get(e);return r??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kk=async(n,e,t,r)=>{switch(n.op){case"HashTable":case"HashTableV2":{const s=r.getHashTableHandleByName(n.name);if(s!=null)return[s];{const o=S("keyDType",n,e,t),i=S("valueDType",n,e,t),a=new Hk(o,i);return r.addHashTable(n.name,a),[a.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const s=S("tableHandle",n,e,t,r),o=S("keys",n,e,t),i=S("values",n,e,t);return[await r.getHashTableById(s.id).import(o,i)]}case"LookupTableFind":case"LookupTableFindV2":{const s=S("tableHandle",n,e,t,r),o=S("keys",n,e,t),i=S("defaultValue",n,e,t);return[await r.getHashTableById(s.id).find(o,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=S("tableHandle",n,e,t,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xk=(n,e,t,r=ft)=>{switch(n.op){case"ResizeBilinear":{const s=S("images",n,e,t),o=S("size",n,e,t),i=S("alignCorners",n,e,t),a=S("halfPixelCenters",n,e,t);return[r.image.resizeBilinear(s,[o[0],o[1]],i,a)]}case"ResizeNearestNeighbor":{const s=S("images",n,e,t),o=S("size",n,e,t),i=S("alignCorners",n,e,t),a=S("halfPixelCenters",n,e,t);return[r.image.resizeNearestNeighbor(s,[o[0],o[1]],i,a)]}case"CropAndResize":{const s=S("image",n,e,t),o=S("boxes",n,e,t),i=S("boxInd",n,e,t),a=S("cropSize",n,e,t),u=S("method",n,e,t),c=S("extrapolationValue",n,e,t);return[r.image.cropAndResize(s,o,i,a,u,c)]}case"ImageProjectiveTransformV3":{const s=S("images",n,e,t),o=S("transforms",n,e,t),i=S("outputShape",n,e,t),a=S("fillValue",n,e,t),u=S("interpolation",n,e,t),c=S("fillMode",n,e,t);return[r.image.transform(s,o,u.toLowerCase(),c.toLowerCase(),a,i)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qk=(n,e,t,r=ft)=>{switch(n.op){case"Equal":return[r.equal(S("a",n,e,t),S("b",n,e,t))];case"NotEqual":return[r.notEqual(S("a",n,e,t),S("b",n,e,t))];case"Greater":return[r.greater(S("a",n,e,t),S("b",n,e,t))];case"GreaterEqual":return[r.greaterEqual(S("a",n,e,t),S("b",n,e,t))];case"Less":return[r.less(S("a",n,e,t),S("b",n,e,t))];case"LessEqual":return[r.lessEqual(S("a",n,e,t),S("b",n,e,t))];case"LogicalAnd":return[r.logicalAnd(S("a",n,e,t),S("b",n,e,t))];case"LogicalNot":return[r.logicalNot(S("a",n,e,t))];case"LogicalOr":return[r.logicalOr(S("a",n,e,t),S("b",n,e,t))];case"Select":case"SelectV2":return[r.where(S("condition",n,e,t),S("a",n,e,t),S("b",n,e,t))];case"BitwiseAnd":return[r.bitwiseAnd(S("a",n,e,t),S("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yk=(n,e,t,r=ft)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(S("a",n,e,t),S("b",n,e,t),S("transposeA",n,e,t),S("transposeB",n,e,t))];case"Einsum":return[r.einsum(S("equation",n,e,t),...S("tensors",n,e,t))];case"Transpose":return[r.transpose(S("x",n,e,t),S("perm",n,e,t))];case"_FusedMatMul":const[s,o]=S("fusedOps",n,e,t),i=s==="biasadd",a=o==="prelu",u=S("numArgs",n,e,t),c=S("leakyreluAlpha",n,e,t);if(i){if(a&&u!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&u!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[h,d]=S("args",n,e,t);return[r.fused.matMul({a:S("a",n,e,t),b:S("b",n,e,t),transposeA:S("transposeA",n,e,t),transposeB:S("transposeB",n,e,t),bias:h,activation:o,preluActivationWeights:d,leakyreluAlpha:c})];case"MatrixBandPart":return[r.linalg.bandPart(S("a",n,e,t),S("numLower",n,e,t),S("numUpper",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qk=(n,e,t,r=ft)=>{switch(n.op){case"EuclideanNorm":return[r.euclideanNorm(S("x",n,e,t),S("axis",n,e,t),S("keepDims",n,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":return[r.batchNorm(S("x",n,e,t),S("mean",n,e,t),S("variance",n,e,t),S("offset",n,e,t),S("scale",n,e,t),S("epsilon",n,e,t))];case"FusedBatchNormV3":return[r.batchNorm(S("x",n,e,t),S("mean",n,e,t),S("variance",n,e,t),S("offset",n,e,t),S("scale",n,e,t),S("epsilon",n,e,t))];case"LRN":return[r.localResponseNormalization(S("x",n,e,t),S("radius",n,e,t),S("bias",n,e,t),S("alpha",n,e,t),S("beta",n,e,t))];case"Softmax":return[r.softmax(S("x",n,e,t))];case"LogSoftmax":return[r.logSoftmax(S("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zk=(n,e,t,r=ft)=>{switch(n.op){case"RaggedGather":{const{outputNestedSplits:s,outputDenseValues:o}=r.raggedGather(S("paramsNestedSplits",n,e,t),S("paramsDenseValues",n,e,t),S("indices",n,e,t),S("outputRaggedRank",n,e,t));return s.concat(o)}case"RaggedRange":{const{rtNestedSplits:s,rtDenseValues:o}=r.raggedRange(S("starts",n,e,t),S("limits",n,e,t),S("splits",n,e,t));return[s,o]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(S("shape",n,e,t),S("values",n,e,t),S("defaultValue",n,e,t),S("rowPartitionTensors",n,e,t),S("rowPartitionTypes",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jk=(n,e,t,r=ft)=>{switch(n.op){case"Max":{const a=S("axis",n,e,t),u=S("keepDims",n,e,t);return[r.max(S("x",n,e,t),a,u)]}case"Mean":{const a=S("axis",n,e,t),u=S("keepDims",n,e,t);return[r.mean(S("x",n,e,t),a,u)]}case"Min":{const a=S("axis",n,e,t),u=S("keepDims",n,e,t);return[r.min(S("x",n,e,t),a,u)]}case"Sum":{const a=S("axis",n,e,t),u=S("keepDims",n,e,t);return[r.sum(S("x",n,e,t),a,u)]}case"All":{const a=S("axis",n,e,t),u=S("keepDims",n,e,t);return[r.all(S("x",n,e,t),a,u)]}case"Any":{const a=S("axis",n,e,t),u=S("keepDims",n,e,t);return[r.any(S("x",n,e,t),a,u)]}case"ArgMax":{const a=S("axis",n,e,t);return[r.argMax(S("x",n,e,t),a)]}case"ArgMin":{const a=S("axis",n,e,t);return[r.argMin(S("x",n,e,t),a)]}case"Prod":{const a=S("axis",n,e,t),u=S("keepDims",n,e,t);return[r.prod(S("x",n,e,t),a,u)]}case"Cumprod":{const a=S("axis",n,e,t),u=S("exclusive",n,e,t),c=S("reverse",n,e,t);return[r.cumprod(S("x",n,e,t),a,u,c)]}case"Cumsum":{const a=S("axis",n,e,t),u=S("exclusive",n,e,t),c=S("reverse",n,e,t);return[r.cumsum(S("x",n,e,t),a,u,c)]}case"Bincount":const s=S("x",n,e,t),o=S("weights",n,e,t),i=S("size",n,e,t);return[r.bincount(s,o,i)];case"DenseBincount":{const a=S("x",n,e,t),u=S("weights",n,e,t),c=S("size",n,e,t),h=S("binaryOutput",n,e,t);return[r.denseBincount(a,u,c,h)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eR=(n,e,t,r=ft)=>{switch(n.op){case"ConcatV2":case"Concat":{const s=S("n",n,e,t),o=S("axis",n,e,t);let i=S("tensors",n,e,t);return i=i.slice(0,s),[r.concat(i,o)]}case"Gather":{const s=S("x",n,e,t),o=S("indices",n,e,t);return[r.gather(s,r.cast(o,"int32"),0)]}case"GatherV2":{const s=S("axis",n,e,t),o=S("batchDims",n,e,t),i=S("x",n,e,t),a=S("indices",n,e,t);return[r.gather(i,r.cast(a,"int32"),s,o)]}case"Reverse":{const s=S("dims",n,e,t),o=[];for(let a=0;a<s.length;a++)s[a]&&o.push(a);const i=S("x",n,e,t);return[r.reverse(i,o)]}case"ReverseV2":{const s=S("axis",n,e,t),o=S("x",n,e,t);return[r.reverse(o,s)]}case"Slice":{const s=S("begin",n,e,t),o=S("size",n,e,t);return[r.slice(S("x",n,e,t),s,o)]}case"StridedSlice":{const s=S("begin",n,e,t),o=S("end",n,e,t),i=S("strides",n,e,t),a=S("beginMask",n,e,t),u=S("endMask",n,e,t),c=S("ellipsisMask",n,e,t),h=S("newAxisMask",n,e,t),d=S("shrinkAxisMask",n,e,t),f=S("x",n,e,t);return[r.stridedSlice(f,s,o,i,a,u,c,h,d)]}case"Pack":return ce(()=>{const s=S("axis",n,e,t),o=S("tensors",n,e,t),i=o[0].shape,a=r.squeeze(o[0]).shape,u=o.map(c=>{const h=ze(c.shape,i);if(!h&&!ze(r.squeeze(c).shape,a))throw new Error("the input tensors shape does not match");return h?c:r.reshape(c,i)});return[r.stack(u,s)]});case"Unpack":{const s=S("axis",n,e,t),o=S("tensor",n,e,t);return r.unstack(o,s)}case"Tile":{const s=S("reps",n,e,t);return[r.tile(S("x",n,e,t),s)]}case"Split":case"SplitV":{const s=S("axis",n,e,t),o=S("numOrSizeSplits",n,e,t),i=S("x",n,e,t);return r.split(i,o,s)}case"ScatterNd":{const s=S("indices",n,e,t),o=S("values",n,e,t),i=S("shape",n,e,t);return[r.scatterND(s,o,i)]}case"GatherNd":{const s=S("x",n,e,t),o=S("indices",n,e,t);return[r.gatherND(s,o)]}case"SparseToDense":{const s=S("sparseIndices",n,e,t),o=S("outputShape",n,e,t),i=S("sparseValues",n,e,t),a=S("defaultValue",n,e,t);return[r.sparseToDense(s,i,o,i.dtype===a.dtype?a:r.cast(a,i.dtype))]}case"TensorScatterUpdate":{const s=S("indices",n,e,t),o=S("values",n,e,t),i=S("tensor",n,e,t);return[r.tensorScatterUpdate(i,s,o)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tR=(n,e,t,r=ft)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:o,emptyRowIndicator:i,reverseIndexMap:a}=r.sparse.sparseFillEmptyRows(S("indices",n,e,t),S("values",n,e,t),S("denseShape",n,e,t),S("defaultValue",n,e,t));return[s,o,i,a]}case"SparseReshape":{const{outputIndices:s,outputShape:o}=r.sparse.sparseReshape(S("inputIndices",n,e,t),S("inputShape",n,e,t),S("newShape",n,e,t));return[s,o]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(S("data",n,e,t),S("indices",n,e,t),S("segmentIds",n,e,t))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(S("data",n,e,t),S("indices",n,e,t),S("segmentIds",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nR=(n,e,t,r=ft)=>{switch(n.op){case"FFT":return[r.fft(S("x",n,e,t))];case"IFFT":return[r.ifft(S("x",n,e,t))];case"RFFT":return[r.rfft(S("x",n,e,t))];case"IRFFT":return[r.irfft(S("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rR=(n,e,t,r=ft)=>{switch(n.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(S("input",n,e,t),S("pattern",n,e,t),S("rewrite",n,e,t),S("replaceGlobal",n,e,t))];case"StringNGrams":{const{nGrams:s,nGramsSplits:o}=r.string.stringNGrams(S("data",n,e,t),S("dataSplits",n,e,t),S("separator",n,e,t),S("nGramWidths",n,e,t),S("leftPad",n,e,t),S("rightPad",n,e,t),S("padWidth",n,e,t),S("preserveShortSequences",n,e,t));return[s,o]}case"StringSplit":{const{indices:s,values:o,shape:i}=r.string.stringSplit(S("input",n,e,t),S("delimiter",n,e,t),S("skipEmpty",n,e,t));return[s,o,i]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(S("input",n,e,t),S("numBuckets",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sR=(n,e,t,r=ft)=>{switch(n.op){case"Cast":return[r.cast(S("x",n,e,t),S("dtype",n,e,t))];case"ExpandDims":{const s=S("axis",n,e,t);return[r.expandDims(S("x",n,e,t),s)]}case"Squeeze":{const s=S("axis",n,e,t);return[r.squeeze(S("x",n,e,t),s)]}case"Reshape":return[r.reshape(S("x",n,e,t),S("shape",n,e,t))];case"EnsureShape":return[r.ensureShape(S("x",n,e,t),S("shape",n,e,t))];case"MirrorPad":return[r.mirrorPad(S("x",n,e,t),S("padding",n,e,t),S("mode",n,e,t))];case"PadV2":case"Pad":return[r.pad(S("x",n,e,t),S("padding",n,e,t),S("constantValue",n,e,t))];case"SpaceToBatchND":{const s=S("blockShape",n,e,t),o=S("paddings",n,e,t);return[r.spaceToBatchND(S("x",n,e,t),s,o)]}case"BatchToSpaceND":{const s=S("blockShape",n,e,t),o=S("crops",n,e,t);return[r.batchToSpaceND(S("x",n,e,t),s,o)]}case"DepthToSpace":{const s=S("blockSize",n,e,t),o=S("dataFormat",n,e,t).toUpperCase();return[r.depthToSpace(S("x",n,e,t),s,o)]}case"BroadcastTo":return[r.broadcastTo(S("x",n,e,t),S("shape",n,e,t))];case"BroadcastArgs":return[r.broadcastArgs(S("s0",n,e,t),S("s1",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zm(n,e,t,r,s=ce){const o=((i,a,u)=>{switch(i.category){case"arithmetic":return s(()=>Ok(i,a,u));case"basic_math":return s(()=>Dk(i,a,u));case"control":return Vk(i,a,u);case"convolution":return s(()=>Uk(i,a,u));case"creation":return s(()=>zk(i,a,u));case"dynamic":return Wk(i,a,u);case"evaluation":return s(()=>Gk(i,a,u));case"image":return s(()=>Xk(i,a,u));case"graph":return s(()=>jk(i,a,u));case"logical":return s(()=>qk(i,a,u));case"matrices":return s(()=>Yk(i,a,u));case"normalization":return s(()=>Qk(i,a,u));case"ragged":return s(()=>Zk(i,a,u));case"reduction":return s(()=>Jk(i,a,u));case"slice_join":return s(()=>eR(i,a,u));case"sparse":return s(()=>tR(i,a,u));case"spectral":return s(()=>nR(i,a,u));case"string":return s(()=>rR(i,a,u));case"transformation":return s(()=>sR(i,a,u));case"hash_table":return Kk(i,a,u,r);case"custom":const c=xb(i.op);if(c&&c.customExecutor)return c.customExecutor(new Ak(i,a,u));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,e,t);return kr(o)?o.then(i=>[].concat(i)):[].concat(o)}class Wm{constructor(e={},t={},r={},s={},o){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=r,this.functionMap=s,this.parseNodeNameCache=o,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const r=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(r))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gm(n,e,t,r){const s=new Set,o=[];let i=null,a=null;const u=new Set,c=new Set(Object.keys(n).map(f=>Lt(f)[0]));r=r||[];const h=new Set(r.map(f=>Lt(f.name)[0])),d=[...e];for(;d.length>0;){const f=d.pop();if((as(f)||dR(f)||fR(f))&&i==null&&(i=f,a=i.children.map(g=>g.name).filter(g=>s.has(g))),s.add(f.name),t[f.name]==null&&!c.has(f.name)&&!h.has(f.name)){if(f.inputs.length===0){o.push(f.name);continue}f.inputs.forEach(g=>{u.has(g.name)||(u.add(g.name),d.push(g))})}}return{inputs:n,outputs:e,usedNodes:s,missingInputs:o,dynamicNode:i,syncInputs:a}}function oR(n,e){const{usedNodes:t,inputs:r}=e,s=Object.keys(r).map(b=>Lt(b)[0]).map(b=>n.nodes[b]),o=n.initNodes||[],i=b=>t.has(typeof b=="string"?b:b.name);function a(b){return[...new Map(b.map($=>[$.name,$])).values()]}const u=a([...s,...n.weights,...o]).filter(i),c=a([...u,...Object.values(n.nodes)]).filter(i),h=new Map(c.map(b=>[b.name,b])),d={};for(const b of c){d[b.name]=d[b.name]||0;for(const $ of b.children)i($)||(d[$.name]=Number.POSITIVE_INFINITY),d[$.name]=(d[$.name]||0)+1}const f=Object.entries(d).filter(([,b])=>b===0).map(([b])=>b),g=[...f];for(;f.length>0;){const b=f.pop(),$=h.get(b);for(const N of $.children.filter(i))--d[N.name]===0&&(g.push(N.name),f.push(N.name))}const x=g.map(b=>h.get(b)),w=iR(x,u);return aR(w,u),w}function iR(n,e){const t=new Map(n.map(i=>[i.name,i])),r=e.map(i=>i.name),s=new Set(r);for(;r.length>0;){const i=r.pop(),a=t.get(i);for(const u of a.children)!t.has(u.name)||s.has(u.name)||(s.add(u.name),r.push(u.name))}return n.filter(i=>s.has(i.name))}class $a extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}function aR(n,e){const t=new Map(n.map((a,u)=>[a.name,u])),r=new Set(e.map(a=>a.name)),s=a=>r.has(typeof a=="string"?a:a.name),o=new Set(n.map(a=>a.name)),i=a=>o.has(typeof a=="string"?a:a.name);for(const a of n){for(const u of a.children.filter(i)){if(!t.has(u.name))throw new $a(`Child ${u.name} of node ${a.name} is unreachable.`);if(t.get(a.name)>t.get(u.name))throw new $a(`Node ${a.name} is scheduled to run after its child ${u.name}.`)}if(!s(a))for(const u of a.inputs){if(!t.has(u.name))throw new $a(`Input ${u.name} of node ${a.name} is unreachable.`);if(t.get(u.name)>t.get(a.name))throw new $a(`Node ${a.name} is scheduled to run before its input ${u.name}.`)}}}function uR(n){const e=new Map(n.map((a,u)=>[a.name,u])),t=Number.MAX_SAFE_INTEGER,r=n.map((a,u)=>as(a)?t:u),s=a=>{const u=r[e.get(a.name)];return u??-1},o=n.map((a,u)=>a.children.map(s).reduce((c,h)=>Math.max(c,h),r[u])),i=new Map;for(let a=0;a<n.length;++a){const u=o[a];if(u===t)continue;const c=n[a],h=n[u];i.has(h.name)||i.set(h.name,[]),i.get(h.name).push(c)}return i}const cR=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),lR=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),hR=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function as(n){return cR.has(n.op)}function dR(n){return lR.has(n.op)}function fR(n){return hR.has(n.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nu{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(r=>e[r].map(s=>s.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(r=>{this._functionExecutorMap[r]=new nu(e.functions[r],this)})}getCompilationKey(e,t){const r=e.map(o=>o.name).sort(),s=t.map(o=>o.name).sort();return r.join(this.SEPARATOR)+"--"+s.join(this.SEPARATOR)}compile(e,t){const r=Gm(e,t,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:o,syncInputs:i}=r;if(o!=null)throw new Error(`This execution contains the node '${o.name}', which has the dynamic op '${o.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(s.length>0){const c=t.map(d=>d.name),h=Object.keys(e);throw new Error(`Cannot compute the outputs [${c}] from the provided inputs [${h}]. Missing the following inputs: [${s}]`)}const a=oR(this.graph,r),u=uR(a);return{orderedNodes:a,nodeLiveUntilMap:u}}cloneAndKeepTensor(e){if(e==null)return null;const t=e.clone();return En(t),t}cloneTensorList(e){return e?e.map(r=>this.cloneAndKeepTensor(r)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([t,r])=>[t,this.cloneTensorList(r)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const r=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const s=r.map(f=>this.graph.nodes[Lt(f)[0]]),o=t.map(f=>Lt(f)[0]),i=new Set(o);let a=o.map(f=>this.graph.nodes[f]);a.length===0&&(a=this._outputs);const u=this.getCompilationKey(s,a);let c=this.compiledMap.get(u);c==null&&(c=this.compile(e,a),this.compiledMap.set(u,c));try{this.keepIntermediateTensors=W().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(f){this.keepIntermediateTensors=!1,console.warn(f.message)}const h={},d={};return ce(()=>{const f=new Wm(this.weightMap,h,d,this.functionExecutorMap,this.parseNodeNameCache),g=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach($=>{const[N,k]=Lt($,f),I=[];I[k]=e[$],g[N]=I,this.keepIntermediateTensors&&(this.clonedTensorsMap[N]=this.cloneTensorList(I))});const x=this.getFrozenTensorIds(g),{orderedNodes:w,nodeLiveUntilMap:b}=c;for(const $ of w){if(g[$.name])continue;const N=zm($,g,f,this._resourceManager);if(kr(N))throw new Error(`The execution of the op '${$.op}' returned a promise. Please use model.executeAsync() instead.`);g[$.name]=N,this.keepIntermediateTensors&&(this.clonedTensorsMap[$.name]=this.cloneTensorList(N)),this.checkTensorForDisposalWithNodeLiveUntilInfo($,g,f,x,i,b.get($.name))}return this.parent==null&&f.dispose(x),t.map($=>lt($,g,f))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(r=>e[r]).map(r=>r.map(s=>s.id)));return new Set(t)}checkTensorForDisposal(e,t,r,s,o,i,a){if(!(as(t)||i.has(e))){for(const u of r[e])u!=null&&(a[u.id]=(a[u.id]||0)+t.children.length);for(const u of t.inputs){if(as(u))continue;const c=Lm(u.name,r,s);if(c!=null)for(const h of c){if(!h||h.kept||o.has(h.id))continue;const d=a[h.id];d===1?(h.dispose(),delete a[h.id]):d!=null&&a[h.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,r,s,o,i){function a(u){return as(u)||o.has(u.name)}if(!(as(e)||i==null))for(const u of i){if(a(u))continue;const c=Lm(u.name,t,r);for(const h of c)!h||h.kept||s.has(h.id)||h.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,r=!1,s={},o={}){this.disposeIntermediateTensors(),r||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=W().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(f){this.keepIntermediateTensors=!1,console.warn(f.message)}const i=new Wm(this.weightMap,s,o,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const a=await this.executeWithControlFlow(e,i,t,r),u=t.map(f=>lt(f,a,i)),c=u.map(f=>f.id),h=Object.keys(e).map(f=>e[f].id),d=new Set([...c,...h,...this.weightIds]);return Object.values(a).forEach(f=>{f.forEach(g=>{g&&!g.isDisposed&&!d.has(g.id)&&g.dispose()})}),this.parent==null&&i.dispose(d),u}async executeFunctionAsync(e,t,r){const s=e.reduce((o,i,a)=>(o[this.inputs[a].name]=i,o),{});return this._executeAsync(s,this.outputNodes,!0,t,r)}async executeWithControlFlow(e,t,r,s){const o=Object.keys(e),i=o.map(I=>this.graph.nodes[Lt(I)[0]]),a=r.map(I=>Lt(I)[0]),u=new Set(a);let c=a.map(I=>this.graph.nodes[I]);c.length===0&&(c=this._outputs);const{usedNodes:h,missingInputs:d,dynamicNode:f,syncInputs:g}=Gm(e,c,this.weightMap,this._initNodes),x=[...i,...this.graph.weights,...this._initNodes||[]].map(I=>({node:I,contexts:t.currentContext})),w=Object.assign({},this.weightMap);Object.keys(e).forEach(I=>{const[O,F]=Lt(I),M=[];M[F]=e[I],w[O]=M});const b={},$=this.getFrozenTensorIds(w),N={};for(;x.length>0;){const I=this.processStack(i,x,t,w,N,$,u,b,h);await Promise.all(I)}f==null&&!s&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const k=c.filter(I=>!as(I)&&!lt(I.name,w,t)).map(I=>I.name);if(k.length>0){let I="";throw f!=null&&(I=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${g}]`),new Error(`Cannot compute the outputs [${k}] from the provided inputs [${o}]. Consider providing the following inputs: [${d}]. ${I}`)}return w}processStack(e,t,r,s,o,i,a,u,c){const h=[];for(;t.length>0;){const d=t.pop();r.currentContext=d.contexts;let f="";if(d.node.op==="Enter"&&S("isConstant",d.node,s,r)&&([f]=or(d.node.name,r)),s[d.node.name]==null){const g=zm(d.node,s,r,this._resourceManager);f||([f]=or(d.node.name,r));const x=r.currentContext;kr(g)?h.push(g.then(w=>(s[f]=w,this.keepIntermediateTensors&&(this.clonedTensorsMap[f]=this.cloneTensorList(w)),r.currentContext=x,this.checkTensorForDisposal(f,d.node,s,r,i,a,u),this.processChildNodes(d.node,t,r,s,o,c),w))):(s[f]=g,this.keepIntermediateTensors&&(this.clonedTensorsMap[f]=this.cloneTensorList(g)),this.checkTensorForDisposal(f,d.node,s,r,i,a,u),this.processChildNodes(d.node,t,r,s,o,c))}else this.processChildNodes(d.node,t,r,s,o,c)}return h}processChildNodes(e,t,r,s,o,i){e.children.forEach(a=>{const[u]=or(a.name,r);o[u]||!i.has(a.name)||(a.op==="Merge"?a.inputNames.some(c=>!!lt(c,s,r))&&(o[u]=!0,t.push({contexts:r.currentContext,node:a})):a.inputNames.every(c=>!!lt(c,s,r))&&(o[u]=!0,t.push({contexts:r.currentContext,node:a})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const r=e[t],[s]=Lt(t),o=this.graph.nodes[s];if(o.attrParams.shape&&o.attrParams.shape.value){const i=o.attrParams.shape.value,a=i.length===r.shape.length&&r.shape.every((u,c)=>i[c]===-1||i[c]===u);A(a,()=>`The shape of dict['${o.name}'] provided in model.execute(dict) must be [${i}], but was [${r.shape}]`)}o.attrParams.dtype&&o.attrParams.dtype.value&&A(r.dtype===o.attrParams.dtype.value,()=>`The dtype of dict['${o.name}'] provided in model.execute(dict) must be ${o.attrParams.dtype.value}, but was ${r.dtype}`)})}mapInputs(e){var t,r;const s={};for(const o in e){const i=(r=(t=this._signature)===null||t===void 0?void 0:t.inputs)===null||r===void 0?void 0:r[o];i!=null?s[i.name]=e[o]:s[o]=e[o]}return s}checkInputs(e){const t=Object.keys(e).filter(r=>{const[s]=Lt(r);return this.graph.nodes[s]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>{var r,s;const o=(s=(r=this._signature)===null||r===void 0?void 0:r.outputs)===null||s===void 0?void 0:s[t];return o!=null?o.name:t},{})}checkOutputs(e){e.forEach(t=>{const[r]=Lt(t);if(!this.graph.nodes[r])throw new Error(`The output '${t}' is not found in the graph`)})}}class pR{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mR="?tfjs-format=file",gR="model.json";class yR{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},r=Kp){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=r,t==null&&(this.loadOptions={}),this.resourceManager=new pR}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return kr(e)?e.then(t=>t.getWeightStream==null?this.loadSync(t):this.loadStreaming(t)):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(e.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");const t=await Ly(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const r=this.artifacts.modelTopology;let s=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const o=this.artifacts.userDefinedMetadata;o.signature!=null&&(s=o.signature),o.structuredOutputKeys!=null&&(this.structuredOutputKeys=o.structuredOutputKeys)}if(this.signature=s,this.version=`${r.versions.producer}.${r.versions.minConsumer}`,this.executor=new nu(Bm.Instance.transformGraph(r,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const o=Bm.Instance.transformGraph(e.modelInitializer);this.initializer=new nu(o),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){const r=this.io.getSaveHandlers(e);if(r.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(r.length>1)throw new Error(`Found more than one (${r.length}) save handlers for URL '${e}'`);e=r[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof Te?[e]:e,r={};return t.forEach((s,o)=>r[this.structuredOutputKeys[o]]=s),r}return e}predict(e,t){const r=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(r)}async predictAsync(e,t){const r=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(r)}normalizeInputs(e){var t;if(!(e instanceof Te)&&!Array.isArray(e)){const o=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(o!=null)for(const i in o){const a=o[i];a.resourceId!=null&&(e[i]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];const r=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+r!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-r} non-resource placeholders, while there are ${e.length} input tensors provided.`);let s=0;return this.inputNodes.reduce((o,i)=>{var a,u,c;const h=(c=(u=(a=this.signature)===null||a===void 0?void 0:a.inputs)===null||u===void 0?void 0:u[i])===null||c===void 0?void 0:c.resourceId;return h!=null?o[i]=this.resourceIdToCapturedInput[h]:o[i]=e[s++],o},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,r=Object.keys(t);for(let s=0;s<r.length;s++){const o=r[s],i=t[o];this.resourceIdToCapturedInput[i.resourceId]=e[s]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const r=this.executor.execute(e,t);return r.length>1?r:r[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const r=await this.executor.executeAsync(e,t);return r.length>1?r:r[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,r)=>(t[r]=[e[r]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&We(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function Ui(n,e={},t=Kp){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof n=="string"&&(n=xR(n));const r=new yR(n,e,t);return await r.load(),r}function xR(n){return n.endsWith("/")||(n=n+"/"),`${n}${gR}${mR}`}(function(){var n;function e(m){var l=0;return function(){return l<m.length?{done:!1,value:m[l++]}:{done:!0}}}var t=typeof Object.defineProperties=="function"?Object.defineProperty:function(m,l,p){return m==Array.prototype||m==Object.prototype||(m[l]=p.value),m};function r(m){m=[typeof globalThis=="object"&&globalThis,m,typeof window=="object"&&window,typeof self=="object"&&self,typeof qt=="object"&&qt];for(var l=0;l<m.length;++l){var p=m[l];if(p&&p.Math==Math)return p}throw Error("Cannot find global object")}var s=r(this);function o(m,l){if(l)e:{var p=s;m=m.split(".");for(var y=0;y<m.length-1;y++){var v=m[y];if(!(v in p))break e;p=p[v]}m=m[m.length-1],y=p[m],l=l(y),l!=y&&l!=null&&t(p,m,{configurable:!0,writable:!0,value:l})}}o("Symbol",function(m){function l(C){if(this instanceof l)throw new TypeError("Symbol is not a constructor");return new p(y+(C||"")+"_"+v++,C)}function p(C,T){this.h=C,t(this,"description",{configurable:!0,writable:!0,value:T})}if(m)return m;p.prototype.toString=function(){return this.h};var y="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",v=0;return l}),o("Symbol.iterator",function(m){if(m)return m;m=Symbol("Symbol.iterator");for(var l="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),p=0;p<l.length;p++){var y=s[l[p]];typeof y=="function"&&typeof y.prototype[m]!="function"&&t(y.prototype,m,{configurable:!0,writable:!0,value:function(){return i(e(this))}})}return m});function i(m){return m={next:m},m[Symbol.iterator]=function(){return this},m}function a(m){var l=typeof Symbol<"u"&&Symbol.iterator&&m[Symbol.iterator];return l?l.call(m):{next:e(m)}}function u(m){if(!(m instanceof Array)){m=a(m);for(var l,p=[];!(l=m.next()).done;)p.push(l.value);m=p}return m}var c=typeof Object.assign=="function"?Object.assign:function(m,l){for(var p=1;p<arguments.length;p++){var y=arguments[p];if(y)for(var v in y)Object.prototype.hasOwnProperty.call(y,v)&&(m[v]=y[v])}return m};o("Object.assign",function(m){return m||c});var h=typeof Object.create=="function"?Object.create:function(m){function l(){}return l.prototype=m,new l},d;if(typeof Object.setPrototypeOf=="function")d=Object.setPrototypeOf;else{var f;e:{var g={a:!0},x={};try{x.__proto__=g,f=x.a;break e}catch{}f=!1}d=f?function(m,l){if(m.__proto__=l,m.__proto__!==l)throw new TypeError(m+" is not extensible");return m}:null}var w=d;function b(m,l){if(m.prototype=h(l.prototype),m.prototype.constructor=m,w)w(m,l);else for(var p in l)if(p!="prototype")if(Object.defineProperties){var y=Object.getOwnPropertyDescriptor(l,p);y&&Object.defineProperty(m,p,y)}else m[p]=l[p];m.za=l.prototype}function $(){this.m=!1,this.j=null,this.i=void 0,this.h=1,this.v=this.s=0,this.l=null}function N(m){if(m.m)throw new TypeError("Generator is already running");m.m=!0}$.prototype.u=function(m){this.i=m};function k(m,l){m.l={ma:l,na:!0},m.h=m.s||m.v}$.prototype.return=function(m){this.l={return:m},this.h=this.v};function I(m,l,p){return m.h=p,{value:l}}function O(m){this.h=new $,this.i=m}function F(m,l){N(m.h);var p=m.h.j;return p?M(m,"return"in p?p.return:function(y){return{value:y,done:!0}},l,m.h.return):(m.h.return(l),B(m))}function M(m,l,p,y){try{var v=l.call(m.h.j,p);if(!(v instanceof Object))throw new TypeError("Iterator result "+v+" is not an object");if(!v.done)return m.h.m=!1,v;var C=v.value}catch(T){return m.h.j=null,k(m.h,T),B(m)}return m.h.j=null,y.call(m.h,C),B(m)}function B(m){for(;m.h.h;)try{var l=m.i(m.h);if(l)return m.h.m=!1,{value:l.value,done:!1}}catch(p){m.h.i=void 0,k(m.h,p)}if(m.h.m=!1,m.h.l){if(l=m.h.l,m.h.l=null,l.na)throw l.ma;return{value:l.return,done:!0}}return{value:void 0,done:!0}}function z(m){this.next=function(l){return N(m.h),m.h.j?l=M(m,m.h.j.next,l,m.h.u):(m.h.u(l),l=B(m)),l},this.throw=function(l){return N(m.h),m.h.j?l=M(m,m.h.j.throw,l,m.h.u):(k(m.h,l),l=B(m)),l},this.return=function(l){return F(m,l)},this[Symbol.iterator]=function(){return this}}function G(m){function l(y){return m.next(y)}function p(y){return m.throw(y)}return new Promise(function(y,v){function C(T){T.done?y(T.value):Promise.resolve(T.value).then(l,p).then(C,v)}C(m.next())})}function U(m){return G(new z(new O(m)))}o("Promise",function(m){function l(T){this.i=0,this.j=void 0,this.h=[],this.u=!1;var E=this.l();try{T(E.resolve,E.reject)}catch(R){E.reject(R)}}function p(){this.h=null}function y(T){return T instanceof l?T:new l(function(E){E(T)})}if(m)return m;p.prototype.i=function(T){if(this.h==null){this.h=[];var E=this;this.j(function(){E.m()})}this.h.push(T)};var v=s.setTimeout;p.prototype.j=function(T){v(T,0)},p.prototype.m=function(){for(;this.h&&this.h.length;){var T=this.h;this.h=[];for(var E=0;E<T.length;++E){var R=T[E];T[E]=null;try{R()}catch(D){this.l(D)}}}this.h=null},p.prototype.l=function(T){this.j(function(){throw T})},l.prototype.l=function(){function T(D){return function(V){R||(R=!0,D.call(E,V))}}var E=this,R=!1;return{resolve:T(this.I),reject:T(this.m)}},l.prototype.I=function(T){if(T===this)this.m(new TypeError("A Promise cannot resolve to itself"));else if(T instanceof l)this.L(T);else{e:switch(typeof T){case"object":var E=T!=null;break e;case"function":E=!0;break e;default:E=!1}E?this.F(T):this.s(T)}},l.prototype.F=function(T){var E=void 0;try{E=T.then}catch(R){this.m(R);return}typeof E=="function"?this.M(E,T):this.s(T)},l.prototype.m=function(T){this.v(2,T)},l.prototype.s=function(T){this.v(1,T)},l.prototype.v=function(T,E){if(this.i!=0)throw Error("Cannot settle("+T+", "+E+"): Promise already settled in state"+this.i);this.i=T,this.j=E,this.i===2&&this.K(),this.H()},l.prototype.K=function(){var T=this;v(function(){if(T.D()){var E=s.console;typeof E<"u"&&E.error(T.j)}},1)},l.prototype.D=function(){if(this.u)return!1;var T=s.CustomEvent,E=s.Event,R=s.dispatchEvent;return typeof R>"u"?!0:(typeof T=="function"?T=new T("unhandledrejection",{cancelable:!0}):typeof E=="function"?T=new E("unhandledrejection",{cancelable:!0}):(T=s.document.createEvent("CustomEvent"),T.initCustomEvent("unhandledrejection",!1,!0,T)),T.promise=this,T.reason=this.j,R(T))},l.prototype.H=function(){if(this.h!=null){for(var T=0;T<this.h.length;++T)C.i(this.h[T]);this.h=null}};var C=new p;return l.prototype.L=function(T){var E=this.l();T.T(E.resolve,E.reject)},l.prototype.M=function(T,E){var R=this.l();try{T.call(E,R.resolve,R.reject)}catch(D){R.reject(D)}},l.prototype.then=function(T,E){function R(q,j){return typeof q=="function"?function(X){try{D(q(X))}catch(ee){V(ee)}}:j}var D,V,H=new l(function(q,j){D=q,V=j});return this.T(R(T,D),R(E,V)),H},l.prototype.catch=function(T){return this.then(void 0,T)},l.prototype.T=function(T,E){function R(){switch(D.i){case 1:T(D.j);break;case 2:E(D.j);break;default:throw Error("Unexpected state: "+D.i)}}var D=this;this.h==null?C.i(R):this.h.push(R),this.u=!0},l.resolve=y,l.reject=function(T){return new l(function(E,R){R(T)})},l.race=function(T){return new l(function(E,R){for(var D=a(T),V=D.next();!V.done;V=D.next())y(V.value).T(E,R)})},l.all=function(T){var E=a(T),R=E.next();return R.done?y([]):new l(function(D,V){function H(X){return function(ee){q[X]=ee,j--,j==0&&D(q)}}var q=[],j=0;do q.push(void 0),j++,y(R.value).T(H(q.length-1),V),R=E.next();while(!R.done)})},l});function Q(m,l){m instanceof String&&(m+="");var p=0,y=!1,v={next:function(){if(!y&&p<m.length){var C=p++;return{value:l(C,m[C]),done:!1}}return y=!0,{done:!0,value:void 0}}};return v[Symbol.iterator]=function(){return v},v}o("Array.prototype.keys",function(m){return m||function(){return Q(this,function(l){return l})}}),o("Array.prototype.fill",function(m){return m||function(l,p,y){var v=this.length||0;for(0>p&&(p=Math.max(0,v+p)),(y==null||y>v)&&(y=v),y=Number(y),0>y&&(y=Math.max(0,v+y)),p=Number(p||0);p<y;p++)this[p]=l;return this}});function J(m){return m||Array.prototype.fill}o("Int8Array.prototype.fill",J),o("Uint8Array.prototype.fill",J),o("Uint8ClampedArray.prototype.fill",J),o("Int16Array.prototype.fill",J),o("Uint16Array.prototype.fill",J),o("Int32Array.prototype.fill",J),o("Uint32Array.prototype.fill",J),o("Float32Array.prototype.fill",J),o("Float64Array.prototype.fill",J),o("Object.is",function(m){return m||function(l,p){return l===p?l!==0||1/l===1/p:l!==l&&p!==p}}),o("Array.prototype.includes",function(m){return m||function(l,p){var y=this;y instanceof String&&(y=String(y));var v=y.length;for(p=p||0,0>p&&(p=Math.max(p+v,0));p<v;p++){var C=y[p];if(C===l||Object.is(C,l))return!0}return!1}}),o("String.prototype.includes",function(m){return m||function(l,p){if(this==null)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(l instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return this.indexOf(l,p||0)!==-1}});var se=this||self;function oe(m,l){m=m.split(".");var p=se;m[0]in p||typeof p.execScript>"u"||p.execScript("var "+m[0]);for(var y;m.length&&(y=m.shift());)m.length||l===void 0?p[y]&&p[y]!==Object.prototype[y]?p=p[y]:p=p[y]={}:p[y]=l}function le(m){var l;e:{if((l=se.navigator)&&(l=l.userAgent))break e;l=""}return l.indexOf(m)!=-1}var ge=Array.prototype.map?function(m,l){return Array.prototype.map.call(m,l,void 0)}:function(m,l){for(var p=m.length,y=Array(p),v=typeof m=="string"?m.split(""):m,C=0;C<p;C++)C in v&&(y[C]=l.call(void 0,v[C],C,m));return y},$e={},Ce=null;function at(m){var l=m.length,p=3*l/4;p%3?p=Math.floor(p):"=.".indexOf(m[l-1])!=-1&&(p="=.".indexOf(m[l-2])!=-1?p-2:p-1);var y=new Uint8Array(p),v=0;return vt(m,function(C){y[v++]=C}),v!==p?y.subarray(0,v):y}function vt(m,l){function p(R){for(;y<m.length;){var D=m.charAt(y++),V=Ce[D];if(V!=null)return V;if(!/^[\s\xa0]*$/.test(D))throw Error("Unknown base64 encoding at char: "+D)}return R}mt();for(var y=0;;){var v=p(-1),C=p(0),T=p(64),E=p(64);if(E===64&&v===-1)break;l(v<<2|C>>4),T!=64&&(l(C<<4&240|T>>2),E!=64&&l(T<<6&192|E))}}function mt(){if(!Ce){Ce={};for(var m="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),l=["+/=","+/","-_=","-_.","-_"],p=0;5>p;p++){var y=m.concat(l[p].split(""));$e[p]=y;for(var v=0;v<y.length;v++){var C=y[v];Ce[C]===void 0&&(Ce[C]=v)}}}}var Je=typeof Uint8Array<"u",gt=!(le("Trident")||le("MSIE"))&&typeof se.btoa=="function";function ut(m){if(!gt){var l;l===void 0&&(l=0),mt(),l=$e[l];for(var p=Array(Math.floor(m.length/3)),y=l[64]||"",v=0,C=0;v<m.length-2;v+=3){var T=m[v],E=m[v+1],R=m[v+2],D=l[T>>2];T=l[(T&3)<<4|E>>4],E=l[(E&15)<<2|R>>6],R=l[R&63],p[C++]=D+T+E+R}switch(D=0,R=y,m.length-v){case 2:D=m[v+1],R=l[(D&15)<<2]||y;case 1:m=m[v],p[C]=l[m>>2]+l[(m&3)<<4|D>>4]+R+y}return p.join("")}for(l="";10240<m.length;)l+=String.fromCharCode.apply(null,m.subarray(0,10240)),m=m.subarray(10240);return l+=String.fromCharCode.apply(null,m),btoa(l)}var ct=RegExp("[-_.]","g");function pn(m){switch(m){case"-":return"+";case"_":return"/";case".":return"=";default:return""}}function mn(m){if(!gt)return at(m);ct.test(m)&&(m=m.replace(ct,pn)),m=atob(m);for(var l=new Uint8Array(m.length),p=0;p<m.length;p++)l[p]=m.charCodeAt(p);return l}var Ln;function Bn(){return Ln||(Ln=new Uint8Array(0))}var jt={},zu=typeof Uint8Array.prototype.slice=="function",we=0,_e=0;function $o(m){var l=0>m;m=Math.abs(m);var p=m>>>0;m=Math.floor((m-p)/4294967296),l&&(p=a(So(p,m)),l=p.next().value,m=p.next().value,p=l),we=p>>>0,_e=m>>>0}var Wu=typeof BigInt=="function";function So(m,l){return l=~l,m?m=~m+1:l+=1,[m,l]}function Co(m,l){this.i=m>>>0,this.h=l>>>0}function To(m){if(!m)return No||(No=new Co(0,0));if(!/^-?\d+$/.test(m))return null;if(16>m.length)$o(Number(m));else if(Wu)m=BigInt(m),we=Number(m&BigInt(4294967295))>>>0,_e=Number(m>>BigInt(32)&BigInt(4294967295));else{var l=+(m[0]==="-");_e=we=0;for(var p=m.length,y=l,v=(p-l)%6+l;v<=p;y=v,v+=6)y=Number(m.slice(y,v)),_e*=1e6,we=1e6*we+y,4294967296<=we&&(_e+=we/4294967296|0,we%=4294967296);l&&(l=a(So(we,_e)),m=l.next().value,l=l.next().value,we=m,_e=l)}return new Co(we,_e)}var No;function Eo(m,l){return Error("Invalid wire type: "+m+" (at position "+l+")")}function Br(){return Error("Failed to read varint, encoding is invalid.")}function Io(m,l){return Error("Tried to read past the end of the data "+l+" > "+m)}function kt(){throw Error("Invalid UTF8")}function ko(m,l){return l=String.fromCharCode.apply(null,l),m==null?l:m+l}var qn=void 0,Mr,Gu=typeof TextDecoder<"u",Ro,ju=typeof TextEncoder<"u",_o;function Ao(m){if(m!==jt)throw Error("illegal external caller")}function gn(m,l){if(Ao(l),this.V=m,m!=null&&m.length===0)throw Error("ByteString should be constructed with non-empty values")}function Vr(){return _o||(_o=new gn(null,jt))}function Oo(m){Ao(jt);var l=m.V;return l=l==null||Je&&l!=null&&l instanceof Uint8Array?l:typeof l=="string"?mn(l):null,l==null?l:m.V=l}function Hu(m){if(typeof m=="string")return{buffer:mn(m),C:!1};if(Array.isArray(m))return{buffer:new Uint8Array(m),C:!1};if(m.constructor===Uint8Array)return{buffer:m,C:!1};if(m.constructor===ArrayBuffer)return{buffer:new Uint8Array(m),C:!1};if(m.constructor===gn)return{buffer:Oo(m)||Bn(),C:!0};if(m instanceof Uint8Array)return{buffer:new Uint8Array(m.buffer,m.byteOffset,m.byteLength),C:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}function Do(m,l){this.i=null,this.m=!1,this.h=this.j=this.l=0,Ur(this,m,l)}function Ur(m,l,p){p=p===void 0?{}:p,m.S=p.S===void 0?!1:p.S,l&&(l=Hu(l),m.i=l.buffer,m.m=l.C,m.l=0,m.j=m.i.length,m.h=m.l)}Do.prototype.reset=function(){this.h=this.l};function Rt(m,l){if(m.h=l,l>m.j)throw Io(m.j,l)}function yn(m){var l=m.i,p=m.h,y=l[p++],v=y&127;if(y&128&&(y=l[p++],v|=(y&127)<<7,y&128&&(y=l[p++],v|=(y&127)<<14,y&128&&(y=l[p++],v|=(y&127)<<21,y&128&&(y=l[p++],v|=y<<28,y&128&&l[p++]&128&&l[p++]&128&&l[p++]&128&&l[p++]&128&&l[p++]&128)))))throw Br();return Rt(m,p),v}function Fo(m,l){if(0>l)throw Error("Tried to read a negative byte length: "+l);var p=m.h,y=p+l;if(y>m.j)throw Io(l,m.j-p);return m.h=y,p}var Po=[];function zr(){this.h=[]}zr.prototype.length=function(){return this.h.length},zr.prototype.end=function(){var m=this.h;return this.h=[],m};function Lo(m,l,p){for(;0<p||127<l;)m.h.push(l&127|128),l=(l>>>7|p<<25)>>>0,p>>>=7;m.h.push(l)}function _t(m,l){for(;127<l;)m.h.push(l&127|128),l>>>=7;m.h.push(l)}function Wr(m,l){if(Po.length){var p=Po.pop();Ur(p,m,l),m=p}else m=new Do(m,l);this.h=m,this.j=this.h.h,this.i=this.l=-1,this.setOptions(l)}Wr.prototype.setOptions=function(m){m=m===void 0?{}:m,this.ca=m.ca===void 0?!1:m.ca},Wr.prototype.reset=function(){this.h.reset(),this.j=this.h.h,this.i=this.l=-1};function Bo(m){var l=m.h;if(l.h==l.j)return!1;m.j=m.h.h;var p=yn(m.h)>>>0;if(l=p>>>3,p&=7,!(0<=p&&5>=p))throw Eo(p,m.j);if(1>l)throw Error("Invalid field number: "+l+" (at position "+m.j+")");return m.l=l,m.i=p,!0}function Yn(m){switch(m.i){case 0:if(m.i!=0)Yn(m);else e:{m=m.h;for(var l=m.h,p=l+10,y=m.i;l<p;)if(!(y[l++]&128)){Rt(m,l);break e}throw Br()}break;case 1:m=m.h,Rt(m,m.h+8);break;case 2:m.i!=2?Yn(m):(l=yn(m.h)>>>0,m=m.h,Rt(m,m.h+l));break;case 5:m=m.h,Rt(m,m.h+4);break;case 3:l=m.l;do{if(!Bo(m))throw Error("Unmatched start-group tag: stream EOF");if(m.i==4){if(m.l!=l)throw Error("Unmatched end-group tag");break}Yn(m)}while(!0);break;default:throw Eo(m.i,m.j)}}var Qn=[];function Ku(){this.j=[],this.i=0,this.h=new zr}function Ht(m,l){l.length!==0&&(m.j.push(l),m.i+=l.length)}function Xu(m,l){if(l=l.R){Ht(m,m.h.end());for(var p=0;p<l.length;p++)Ht(m,Oo(l[p])||Bn())}}var nt=typeof Symbol=="function"&&typeof Symbol()=="symbol"?Symbol():void 0;function At(m,l){return nt?m[nt]|=l:m.A!==void 0?m.A|=l:(Object.defineProperties(m,{A:{value:l,configurable:!0,writable:!0,enumerable:!1}}),l)}function Mo(m,l){nt?m[nt]&&(m[nt]&=~l):m.A!==void 0&&(m.A&=~l)}function ye(m){var l;return nt?l=m[nt]:l=m.A,l??0}function qe(m,l){nt?m[nt]=l:m.A!==void 0?m.A=l:Object.defineProperties(m,{A:{value:l,configurable:!0,writable:!0,enumerable:!1}})}function Gr(m){return At(m,1),m}function qu(m,l){qe(l,(m|0)&-51)}function Zn(m,l){qe(l,(m|18)&-41)}var jr={};function Jn(m){return m!==null&&typeof m=="object"&&!Array.isArray(m)&&m.constructor===Object}var xn,Vo=[];qe(Vo,23),xn=Object.freeze(Vo);function Hr(m){if(ye(m.o)&2)throw Error("Cannot mutate an immutable Message")}function Kr(m){var l=m.length;(l=l?m[l-1]:void 0)&&Jn(l)?l.g=1:(l={},m.push((l.g=1,l)))}function Uo(m){var l=m.i+m.G;return m.B||(m.B=m.o[l]={})}function Ke(m,l){return l===-1?null:l>=m.i?m.B?m.B[l]:void 0:m.o[l+m.G]}function Ye(m,l,p,y){Hr(m),bn(m,l,p,y)}function bn(m,l,p,y){m.j&&(m.j=void 0),l>=m.i||y?Uo(m)[l]=p:(m.o[l+m.G]=p,(m=m.B)&&l in m&&delete m[l])}function Xr(m,l,p,y){var v=Ke(m,l);Array.isArray(v)||(v=xn);var C=ye(v);if(C&1||Gr(v),y)C&2||At(v,2),p&1||Object.freeze(v);else{y=!(p&2);var T=C&2;p&1||!T?y&&C&16&&!T&&Mo(v,16):(v=Gr(Array.prototype.slice.call(v)),bn(m,l,v))}return v}function qr(m,l){var p=Ke(m,l),y=p==null?p:typeof p=="number"||p==="NaN"||p==="Infinity"||p==="-Infinity"?Number(p):void 0;return y!=null&&y!==p&&bn(m,l,y),y}function zo(m,l,p,y,v){m.h||(m.h={});var C=m.h[p],T=Xr(m,p,3,v);if(!C){var E=T;C=[];var R=!!(ye(m.o)&16);T=!!(ye(E)&2);var D=E;!v&&T&&(E=Array.prototype.slice.call(E));for(var V=T,H=0;H<E.length;H++){var q=E[H],j=l,X=!1;if(X=X===void 0?!1:X,q=Array.isArray(q)?new j(q):X?new j:void 0,q!==void 0){j=q.o;var ee=X=ye(j);T&&(ee|=2),R&&(ee|=16),ee!=X&&qe(j,ee),j=ee,V=V||!!(2&j),C.push(q)}}return m.h[p]=C,R=ye(E),l=R|33,l=V?l&-9:l|8,R!=l&&(V=E,Object.isFrozen(V)&&(V=Array.prototype.slice.call(V)),qe(V,l),E=V),D!==E&&bn(m,p,E),(v||y&&T)&&At(C,2),y&&Object.freeze(C),C}return v||(v=Object.isFrozen(C),y&&!v?Object.freeze(C):!y&&v&&(C=Array.prototype.slice.call(C),m.h[p]=C)),C}function wr(m,l,p){var y=!!(ye(m.o)&2);if(l=zo(m,l,p,y,y),m=Xr(m,p,3,y),!(y||ye(m)&8)){for(y=0;y<l.length;y++){if(p=l[y],ye(p.o)&2){var v=Xo(p,!1);v.j=p}else v=p;p!==v&&(l[y]=v,m[y]=v.o)}At(m,8)}return l}function Qe(m,l,p){if(p!=null&&typeof p!="number")throw Error("Value of float/double field must be a number|null|undefined, found "+typeof p+": "+p);Ye(m,l,p)}function Wo(m,l,p,y,v){Hr(m);var C=zo(m,p,l,!1,!1);return p=y??new p,m=Xr(m,l,2,!1),v!=null?(C.splice(v,0,p),m.splice(v,0,p.o)):(C.push(p),m.push(p.o)),p.C()&&Mo(m,8),p}function er(m,l){return m??l}function Ze(m,l,p){return p=p===void 0?0:p,er(qr(m,l),p)}var tr;function Yu(m){switch(typeof m){case"number":return isFinite(m)?m:String(m);case"object":if(m)if(Array.isArray(m)){if(ye(m)&128)return m=Array.prototype.slice.call(m),Kr(m),m}else{if(Je&&m!=null&&m instanceof Uint8Array)return ut(m);if(m instanceof gn){var l=m.V;return l==null?"":typeof l=="string"?l:m.V=ut(l)}}}return m}function Go(m,l,p,y){if(m!=null){if(Array.isArray(m))m=Yr(m,l,p,y!==void 0);else if(Jn(m)){var v={},C;for(C in m)v[C]=Go(m[C],l,p,y);m=v}else m=l(m,y);return m}}function Yr(m,l,p,y){var v=ye(m);y=y?!!(v&16):void 0,m=Array.prototype.slice.call(m);for(var C=0;C<m.length;C++)m[C]=Go(m[C],l,p,y);return p(v,m),m}function Qu(m){return m.ja===jr?m.toJSON():Yu(m)}function Zu(m,l){m&128&&Kr(l)}function jo(m,l,p){if(p=p===void 0?Zn:p,m!=null){if(Je&&m instanceof Uint8Array)return m.length?new gn(new Uint8Array(m),jt):Vr();if(Array.isArray(m)){var y=ye(m);return y&2?m:l&&!(y&32)&&(y&16||y===0)?(qe(m,y|2),m):(m=Yr(m,jo,y&4?Zn:p,!0),l=ye(m),l&4&&l&2&&Object.freeze(m),m)}return m.ja===jr?Ko(m):m}}function Ho(m,l,p,y,v,C,T){if(m=m.h&&m.h[p]){if(y=ye(m),y&2?y=m:(C=ge(m,Ko),Zn(y,C),Object.freeze(C),y=C),Hr(l),T=y==null?xn:Gr([]),y!=null){for(C=!!y.length,m=0;m<y.length;m++){var E=y[m];C=C&&!(ye(E.o)&2),T[m]=E.o}C=(C?8:0)|1,m=ye(T),(m&C)!==C&&(Object.isFrozen(T)&&(T=Array.prototype.slice.call(T)),qe(T,m|C)),l.h||(l.h={}),l.h[p]=y}else l.h&&(l.h[p]=void 0);bn(l,p,T,v)}else Ye(l,p,jo(y,C,T),v)}function Ko(m){return ye(m.o)&2||(m=Xo(m,!0),At(m.o,2)),m}function Xo(m,l){var p=m.o,y=[];At(y,16);var v=m.constructor.h;if(v&&y.push(v),v=m.B,v){y.length=p.length,y.fill(void 0,y.length,p.length);var C={};y[y.length-1]=C}ye(p)&128&&Kr(y),l=l||m.C()?Zn:qu,C=m.constructor,tr=y,y=new C(y),tr=void 0,m.R&&(y.R=m.R.slice()),C=!!(ye(p)&16);for(var T=v?p.length-1:p.length,E=0;E<T;E++)Ho(m,y,E-m.G,p[E],!1,C,l);if(v)for(var R in v)Ho(m,y,+R,v[R],!0,C,l);return y}function Oe(m,l,p){m==null&&(m=tr),tr=void 0;var y=this.constructor.i||0,v=0<y,C=this.constructor.h,T=!1;if(m==null){m=C?[C]:[];var E=48,R=!0;v&&(y=0,E|=128),qe(m,E)}else{if(!Array.isArray(m)||C&&C!==m[0])throw Error();var D=E=At(m,0);if((R=(16&D)!==0)&&((T=(32&D)!==0)||(D|=32)),v){if(128&D)y=0;else if(0<m.length){var V=m[m.length-1];if(Jn(V)&&"g"in V){y=0,D|=128,delete V.g;var H=!0,q;for(q in V){H=!1;break}H&&m.pop()}}}else if(128&D)throw Error();E!==D&&qe(m,D)}this.G=(C?0:-1)-y,this.h=void 0,this.o=m;e:{if(C=this.o.length,y=C-1,C&&(C=this.o[y],Jn(C))){this.B=C,this.i=y-this.G;break e}l!==void 0&&-1<l?(this.i=Math.max(l,y+1-this.G),this.B=void 0):this.i=Number.MAX_VALUE}if(!v&&this.B&&"g"in this.B)throw Error('Unexpected "g" flag in sparse object of message that is not a group type.');if(p){l=R&&!T&&!0,v=this.i;var j;for(R=0;R<p.length;R++)T=p[R],T<v?(T+=this.G,(y=m[T])?qo(y,l):m[T]=xn):(j||(j=Uo(this)),(y=j[T])?qo(y,l):j[T]=xn)}}Oe.prototype.toJSON=function(){return Yr(this.o,Qu,Zu)},Oe.prototype.C=function(){return!!(ye(this.o)&2)};function qo(m,l){if(Array.isArray(m)){var p=ye(m),y=1;!l||p&2||(y|=16),(p&y)!==y&&qe(m,p|y)}}Oe.prototype.ja=jr,Oe.prototype.toString=function(){return this.o.toString()};function Yo(m,l,p){if(p){var y={},v;for(v in p){var C=p[v],T=C.ra;T||(y.J=C.xa||C.oa.W,C.ia?(y.aa=ti(C.ia),T=function(E){return function(R,D,V){return E.J(R,D,V,E.aa)}}(y)):C.ka?(y.Z=ni(C.da.P,C.ka),T=function(E){return function(R,D,V){return E.J(R,D,V,E.Z)}}(y)):T=y.J,C.ra=T),T(l,m,C.da),y={J:y.J,aa:y.aa,Z:y.Z}}}Xu(l,m)}var nr=Symbol();function Qo(m,l,p){return m[nr]||(m[nr]=function(y,v){return l(y,v,p)})}function Zo(m){var l=m[nr];if(!l){var p=Zr(m);l=function(y,v){return ri(y,v,p)},m[nr]=l}return l}function Ju(m){var l=m.ia;if(l)return Zo(l);if(l=m.wa)return Qo(m.da.P,l,m.ka)}function ec(m){var l=Ju(m),p=m.da,y=m.oa.U;return l?function(v,C){return y(v,C,p,l)}:function(v,C){return y(v,C,p)}}function Jo(m,l){var p=m[l];return typeof p=="function"&&p.length===0&&(p=p(),m[l]=p),Array.isArray(p)&&(wn in p||vn in p||0<p.length&&typeof p[0]=="function")?p:void 0}function ei(m,l,p,y,v,C){l.P=m[0];var T=1;if(m.length>T&&typeof m[T]!="number"){var E=m[T++];p(l,E)}for(;T<m.length;){p=m[T++];for(var R=T+1;R<m.length&&typeof m[R]!="number";)R++;switch(E=m[T++],R-=T,R){case 0:y(l,p,E);break;case 1:(R=Jo(m,T))?(T++,v(l,p,E,R)):y(l,p,E,m[T++]);break;case 2:R=T++,R=Jo(m,R),v(l,p,E,R,m[T++]);break;case 3:C(l,p,E,m[T++],m[T++],m[T++]);break;case 4:C(l,p,E,m[T++],m[T++],m[T++],m[T++]);break;default:throw Error("unexpected number of binary field arguments: "+R)}}return l}var rr=Symbol();function ti(m){var l=m[rr];if(!l){var p=Qr(m);l=function(y,v){return si(y,v,p)},m[rr]=l}return l}function ni(m,l){var p=m[rr];return p||(p=function(y,v){return Yo(y,v,l)},m[rr]=p),p}var vn=Symbol();function tc(m,l){m.push(l)}function nc(m,l,p){m.push(l,p.W)}function rc(m,l,p,y){var v=ti(y),C=Qr(y).P,T=p.W;m.push(l,function(E,R,D){return T(E,R,D,C,v)})}function sc(m,l,p,y,v,C){var T=ni(y,C),E=p.W;m.push(l,function(R,D,V){return E(R,D,V,y,T)})}function Qr(m){var l=m[vn];return l||(l=ei(m,m[vn]=[],tc,nc,rc,sc),wn in m&&vn in m&&(m.length=0),l)}var wn=Symbol();function oc(m,l){m[0]=l}function ic(m,l,p,y){var v=p.U;m[l]=y?function(C,T,E){return v(C,T,E,y)}:v}function ac(m,l,p,y,v){var C=p.U,T=Zo(y),E=Zr(y).P;m[l]=function(R,D,V){return C(R,D,V,E,T,v)}}function uc(m,l,p,y,v,C,T){var E=p.U,R=Qo(y,v,C);m[l]=function(D,V,H){return E(D,V,H,y,R,T)}}function Zr(m){var l=m[wn];return l||(l=ei(m,m[wn]={},oc,ic,ac,uc),wn in m&&vn in m&&(m.length=0),l)}function ri(m,l,p){for(;Bo(l)&&l.i!=4;){var y=l.l,v=p[y];if(!v){var C=p[0];C&&(C=C[y])&&(v=p[y]=ec(C))}if(!v||!v(l,m,y)){v=l,y=m,C=v.j,Yn(v);var T=v;if(!T.ca){if(v=T.h.h-C,T.h.h=C,T=T.h,v==0)v=Vr();else{if(C=Fo(T,v),T.S&&T.m)v=T.i.subarray(C,C+v);else{T=T.i;var E=C;v=C+v,v=E===v?Bn():zu?T.slice(E,v):new Uint8Array(T.subarray(E,v))}v=v.length==0?Vr():new gn(v,jt)}(C=y.R)?C.push(v):y.R=[v]}}}return m}function si(m,l,p){for(var y=p.length,v=y%2==1,C=v?1:0;C<y;C+=2)(0,p[C+1])(l,m,p[C]);Yo(m,l,v?p[0]:void 0)}function $n(m,l){return{U:m,W:l}}var Xe=$n(function(m,l,p){if(m.i!==5)return!1;m=m.h;var y=m.i,v=m.h,C=y[v],T=y[v+1],E=y[v+2];return y=y[v+3],Rt(m,m.h+4),T=(C<<0|T<<8|E<<16|y<<24)>>>0,m=2*(T>>31)+1,C=T>>>23&255,T&=8388607,Ye(l,p,C==255?T?NaN:1/0*m:C==0?m*Math.pow(2,-149)*T:m*Math.pow(2,C-150)*(T+Math.pow(2,23))),!0},function(m,l,p){if(l=qr(l,p),l!=null){_t(m.h,8*p+5),m=m.h;var y=+l;y===0?0<1/y?we=_e=0:(_e=0,we=2147483648):isNaN(y)?(_e=0,we=2147483647):(y=(p=0>y?-2147483648:0)?-y:y,34028234663852886e22<y?(_e=0,we=(p|2139095040)>>>0):11754943508222875e-54>y?(y=Math.round(y/Math.pow(2,-149)),_e=0,we=(p|y)>>>0):(l=Math.floor(Math.log(y)/Math.LN2),y*=Math.pow(2,-l),y=Math.round(8388608*y),16777216<=y&&++l,_e=0,we=(p|l+127<<23|y&8388607)>>>0)),p=we,m.h.push(p>>>0&255),m.h.push(p>>>8&255),m.h.push(p>>>16&255),m.h.push(p>>>24&255)}}),cc=$n(function(m,l,p){if(m.i!==0)return!1;var y=m.h,v=0,C=m=0,T=y.i,E=y.h;do{var R=T[E++];v|=(R&127)<<C,C+=7}while(32>C&&R&128);for(32<C&&(m|=(R&127)>>4),C=3;32>C&&R&128;C+=7)R=T[E++],m|=(R&127)<<C;if(Rt(y,E),128>R)y=v>>>0,R=m>>>0,(m=R&2147483648)&&(y=~y+1>>>0,R=~R>>>0,y==0&&(R=R+1>>>0)),y=4294967296*R+(y>>>0);else throw Br();return Ye(l,p,m?-y:y),!0},function(m,l,p){l=Ke(l,p),l!=null&&(typeof l=="string"&&To(l),l!=null&&(_t(m.h,8*p),typeof l=="number"?(m=m.h,$o(l),Lo(m,we,_e)):(p=To(l),Lo(m.h,p.i,p.h))))}),lc=$n(function(m,l,p){return m.i!==0?!1:(Ye(l,p,yn(m.h)),!0)},function(m,l,p){if(l=Ke(l,p),l!=null&&l!=null)if(_t(m.h,8*p),m=m.h,p=l,0<=p)_t(m,p);else{for(l=0;9>l;l++)m.h.push(p&127|128),p>>=7;m.h.push(1)}}),oi=$n(function(m,l,p){if(m.i!==2)return!1;var y=yn(m.h)>>>0;m=m.h;var v=Fo(m,y);if(m=m.i,Gu){var C=m,T;(T=Mr)||(T=Mr=new TextDecoder("utf-8",{fatal:!0})),m=v+y,C=v===0&&m===C.length?C:C.subarray(v,m);try{var E=T.decode(C)}catch(H){if(qn===void 0){try{T.decode(new Uint8Array([128]))}catch{}try{T.decode(new Uint8Array([97])),qn=!0}catch{qn=!1}}throw!qn&&(Mr=void 0),H}}else{E=v,y=E+y,v=[];for(var R=null,D,V;E<y;)D=m[E++],128>D?v.push(D):224>D?E>=y?kt():(V=m[E++],194>D||(V&192)!==128?(E--,kt()):v.push((D&31)<<6|V&63)):240>D?E>=y-1?kt():(V=m[E++],(V&192)!==128||D===224&&160>V||D===237&&160<=V||((C=m[E++])&192)!==128?(E--,kt()):v.push((D&15)<<12|(V&63)<<6|C&63)):244>=D?E>=y-2?kt():(V=m[E++],(V&192)!==128||(D<<28)+(V-144)>>30||((C=m[E++])&192)!==128||((T=m[E++])&192)!==128?(E--,kt()):(D=(D&7)<<18|(V&63)<<12|(C&63)<<6|T&63,D-=65536,v.push((D>>10&1023)+55296,(D&1023)+56320))):kt(),8192<=v.length&&(R=ko(R,v),v.length=0);E=ko(R,v)}return Ye(l,p,E),!0},function(m,l,p){if(l=Ke(l,p),l!=null){var y=!1;if(y=y===void 0?!1:y,ju){if(y&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(l))throw Error("Found an unpaired surrogate");l=(Ro||(Ro=new TextEncoder)).encode(l)}else{for(var v=0,C=new Uint8Array(3*l.length),T=0;T<l.length;T++){var E=l.charCodeAt(T);if(128>E)C[v++]=E;else{if(2048>E)C[v++]=E>>6|192;else{if(55296<=E&&57343>=E){if(56319>=E&&T<l.length){var R=l.charCodeAt(++T);if(56320<=R&&57343>=R){E=1024*(E-55296)+R-56320+65536,C[v++]=E>>18|240,C[v++]=E>>12&63|128,C[v++]=E>>6&63|128,C[v++]=E&63|128;continue}else T--}if(y)throw Error("Found an unpaired surrogate");E=65533}C[v++]=E>>12|224,C[v++]=E>>6&63|128}C[v++]=E&63|128}}l=v===C.length?C:C.subarray(0,v)}_t(m.h,8*p+2),_t(m.h,l.length),Ht(m,m.h.end()),Ht(m,l)}}),ii=$n(function(m,l,p,y,v){if(m.i!==2)return!1;l=Wo(l,p,y),p=m.h.j,y=yn(m.h)>>>0;var C=m.h.h+y,T=C-p;if(0>=T&&(m.h.j=C,v(l,m,void 0,void 0,void 0),T=C-m.h.h),T)throw Error("Message parsing ended unexpectedly. Expected to read "+(y+" bytes, instead read "+(y-T)+" bytes, either the data ended unexpectedly or the message misreported its own length"));return m.h.h=C,m.h.j=p,!0},function(m,l,p,y,v){if(l=wr(l,y,p),l!=null)for(y=0;y<l.length;y++){var C=m;_t(C.h,8*p+2);var T=C.h.end();Ht(C,T),T.push(C.i),C=T,v(l[y],m),T=m;var E=C.pop();for(E=T.i+T.h.length()-E;127<E;)C.push(E&127|128),E>>>=7,T.i++;C.push(E),T.i++}});function Jr(m){return function(l,p){e:{if(Qn.length){var y=Qn.pop();y.setOptions(p),Ur(y.h,l,p),l=y}else l=new Wr(l,p);try{var v=Zr(m),C=ri(new v.P,l,v);break e}finally{v=l.h,v.i=null,v.m=!1,v.l=0,v.j=0,v.h=0,v.S=!1,l.l=-1,l.i=-1,100>Qn.length&&Qn.push(l)}C=void 0}return C}}function es(m){return function(){var l=new Ku;si(this,l,Qr(m)),Ht(l,l.h.end());for(var p=new Uint8Array(l.i),y=l.j,v=y.length,C=0,T=0;T<v;T++){var E=y[T];p.set(E,C),C+=E.length}return l.j=[p],p}}function Kt(m){Oe.call(this,m)}b(Kt,Oe);var ai=[Kt,1,lc,2,Xe,3,oi,4,oi];Kt.prototype.l=es(ai);function ts(m){Oe.call(this,m,-1,hc)}b(ts,Oe),ts.prototype.addClassification=function(m,l){return Wo(this,1,Kt,m,l),this};var hc=[1],ha=Jr([ts,1,ii,ai]);function Zt(m){Oe.call(this,m)}b(Zt,Oe);var ui=[Zt,1,Xe,2,Xe,3,Xe,4,Xe,5,Xe];Zt.prototype.l=es(ui);function ci(m){Oe.call(this,m,-1,dc)}b(ci,Oe);var dc=[1],da=Jr([ci,1,ii,ui]);function sr(m){Oe.call(this,m)}b(sr,Oe);var li=[sr,1,Xe,2,Xe,3,Xe,4,Xe,5,Xe,6,cc],fc=Jr(li);sr.prototype.l=es(li);function hi(m,l,p){if(p=m.createShader(p===0?m.VERTEX_SHADER:m.FRAGMENT_SHADER),m.shaderSource(p,l),m.compileShader(p),!m.getShaderParameter(p,m.COMPILE_STATUS))throw Error(`Could not compile WebGL shader.

`+m.getShaderInfoLog(p));return p}function fa(m){return wr(m,Kt,1).map(function(l){var p=Ke(l,1);return{index:p??0,qa:Ze(l,2),label:Ke(l,3)!=null?er(Ke(l,3),""):void 0,displayName:Ke(l,4)!=null?er(Ke(l,4),""):void 0}})}function pa(m){return{x:Ze(m,1),y:Ze(m,2),z:Ze(m,3),visibility:qr(m,4)!=null?Ze(m,4):void 0}}function Fs(m,l){this.i=m,this.h=l,this.m=0}function Ps(m,l,p){return ma(m,l),typeof m.h.canvas.transferToImageBitmap=="function"?Promise.resolve(m.h.canvas.transferToImageBitmap()):p?Promise.resolve(m.h.canvas):typeof createImageBitmap=="function"?createImageBitmap(m.h.canvas):(m.j===void 0&&(m.j=document.createElement("canvas")),new Promise(function(y){m.j.height=m.h.canvas.height,m.j.width=m.h.canvas.width,m.j.getContext("2d",{}).drawImage(m.h.canvas,0,0,m.h.canvas.width,m.h.canvas.height),y(m.j)}))}function ma(m,l){var p=m.h;if(m.s===void 0){var y=hi(p,`
  attribute vec2 aVertex;
  attribute vec2 aTex;
  varying vec2 vTex;
  void main(void) {
    gl_Position = vec4(aVertex, 0.0, 1.0);
    vTex = aTex;
  }`,0),v=hi(p,`
  precision mediump float;
  varying vec2 vTex;
  uniform sampler2D sampler0;
  void main(){
    gl_FragColor = texture2D(sampler0, vTex);
  }`,1),C=p.createProgram();if(p.attachShader(C,y),p.attachShader(C,v),p.linkProgram(C),!p.getProgramParameter(C,p.LINK_STATUS))throw Error(`Could not compile WebGL program.

`+p.getProgramInfoLog(C));y=m.s=C,p.useProgram(y),v=p.getUniformLocation(y,"sampler0"),m.l={O:p.getAttribLocation(y,"aVertex"),N:p.getAttribLocation(y,"aTex"),ya:v},m.v=p.createBuffer(),p.bindBuffer(p.ARRAY_BUFFER,m.v),p.enableVertexAttribArray(m.l.O),p.vertexAttribPointer(m.l.O,2,p.FLOAT,!1,0,0),p.bufferData(p.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),p.STATIC_DRAW),p.bindBuffer(p.ARRAY_BUFFER,null),m.u=p.createBuffer(),p.bindBuffer(p.ARRAY_BUFFER,m.u),p.enableVertexAttribArray(m.l.N),p.vertexAttribPointer(m.l.N,2,p.FLOAT,!1,0,0),p.bufferData(p.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),p.STATIC_DRAW),p.bindBuffer(p.ARRAY_BUFFER,null),p.uniform1i(v,0)}y=m.l,p.useProgram(m.s),p.canvas.width=l.width,p.canvas.height=l.height,p.viewport(0,0,l.width,l.height),p.activeTexture(p.TEXTURE0),m.i.bindTexture2d(l.glName),p.enableVertexAttribArray(y.O),p.bindBuffer(p.ARRAY_BUFFER,m.v),p.vertexAttribPointer(y.O,2,p.FLOAT,!1,0,0),p.enableVertexAttribArray(y.N),p.bindBuffer(p.ARRAY_BUFFER,m.u),p.vertexAttribPointer(y.N,2,p.FLOAT,!1,0,0),p.bindFramebuffer(p.DRAW_FRAMEBUFFER?p.DRAW_FRAMEBUFFER:p.FRAMEBUFFER,null),p.clearColor(0,0,0,0),p.clear(p.COLOR_BUFFER_BIT),p.colorMask(!0,!0,!0,!0),p.drawArrays(p.TRIANGLE_FAN,0,4),p.disableVertexAttribArray(y.O),p.disableVertexAttribArray(y.N),p.bindBuffer(p.ARRAY_BUFFER,null),m.i.bindTexture2d(0)}function pc(m){this.h=m}var mc=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function gc(m,l){return l+m}function ga(m,l){window[m]=l}function ya(m){var l=document.createElement("script");return l.setAttribute("src",m),l.setAttribute("crossorigin","anonymous"),new Promise(function(p){l.addEventListener("load",function(){p()},!1),l.addEventListener("error",function(){p()},!1),document.body.appendChild(l)})}function yc(){return U(function(m){switch(m.h){case 1:return m.s=2,I(m,WebAssembly.instantiate(mc),4);case 4:m.h=3,m.s=0;break;case 2:return m.s=0,m.l=null,m.return(!1);case 3:return m.return(!0)}})}function di(m){if(this.h=m,this.listeners={},this.l={},this.L={},this.s={},this.v={},this.M=this.u=this.ga=!0,this.I=Promise.resolve(),this.fa="",this.D={},this.locateFile=m&&m.locateFile||gc,typeof window=="object")var l=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else if(typeof location<"u")l=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/";else throw Error("solutions can only be loaded on a web page or in a web worker");if(this.ha=l,m.options){l=a(Object.keys(m.options));for(var p=l.next();!p.done;p=l.next()){p=p.value;var y=m.options[p].default;y!==void 0&&(this.l[p]=typeof y=="function"?y():y)}}}n=di.prototype,n.close=function(){return this.j&&this.j.delete(),Promise.resolve()};function fi(m){var l,p,y,v,C,T,E,R,D,V,H;return U(function(q){switch(q.h){case 1:return m.ga?(l=m.h.files===void 0?[]:typeof m.h.files=="function"?m.h.files(m.l):m.h.files,I(q,yc(),2)):q.return();case 2:if(p=q.i,typeof window=="object")return ga("createMediapipeSolutionsWasm",{locateFile:m.locateFile}),ga("createMediapipeSolutionsPackedAssets",{locateFile:m.locateFile}),T=l.filter(function(j){return j.data!==void 0}),E=l.filter(function(j){return j.data===void 0}),R=Promise.all(T.map(function(j){var X=Ls(m,j.url);if(j.path!==void 0){var ee=j.path;X=X.then(function(ie){return m.overrideFile(ee,ie),Promise.resolve(ie)})}return X})),D=Promise.all(E.map(function(j){return j.simd===void 0||j.simd&&p||!j.simd&&!p?ya(m.locateFile(j.url,m.ha)):Promise.resolve()})).then(function(){var j,X,ee;return U(function(ie){if(ie.h==1)return j=window.createMediapipeSolutionsWasm,X=window.createMediapipeSolutionsPackedAssets,ee=m,I(ie,j(X),2);ee.i=ie.i,ie.h=0})}),V=function(){return U(function(j){return m.h.graph&&m.h.graph.url?j=I(j,Ls(m,m.h.graph.url),0):(j.h=0,j=void 0),j})}(),I(q,Promise.all([D,R,V]),7);if(typeof importScripts!="function")throw Error("solutions can only be loaded on a web page or in a web worker");return y=l.filter(function(j){return j.simd===void 0||j.simd&&p||!j.simd&&!p}).map(function(j){return m.locateFile(j.url,m.ha)}),importScripts.apply(null,u(y)),v=m,I(q,createMediapipeSolutionsWasm(Module),6);case 6:v.i=q.i,m.m=new OffscreenCanvas(1,1),m.i.canvas=m.m,C=m.i.GL.createContext(m.m,{antialias:!1,alpha:!1,va:typeof WebGL2RenderingContext<"u"?2:1}),m.i.GL.makeContextCurrent(C),q.h=4;break;case 7:if(m.m=document.createElement("canvas"),H=m.m.getContext("webgl2",{}),!H&&(H=m.m.getContext("webgl",{}),!H))return alert("Failed to create WebGL canvas context when passing video frame."),q.return();m.K=H,m.i.canvas=m.m,m.i.createContext(m.m,!0,!0,{});case 4:m.j=new m.i.SolutionWasm,m.ga=!1,q.h=0}})}function xc(m){var l,p,y,v,C,T,E,R;return U(function(D){if(D.h==1){if(m.h.graph&&m.h.graph.url&&m.fa===m.h.graph.url)return D.return();if(m.u=!0,!m.h.graph||!m.h.graph.url){D.h=2;return}return m.fa=m.h.graph.url,I(D,Ls(m,m.h.graph.url),3)}for(D.h!=2&&(l=D.i,m.j.loadGraph(l)),p=a(Object.keys(m.D)),y=p.next();!y.done;y=p.next())v=y.value,m.j.overrideFile(v,m.D[v]);if(m.D={},m.h.listeners)for(C=a(m.h.listeners),T=C.next();!T.done;T=C.next())E=T.value,wc(m,E);R=m.l,m.l={},m.setOptions(R),D.h=0})}n.reset=function(){var m=this;return U(function(l){m.j&&(m.j.reset(),m.s={},m.v={}),l.h=0})},n.setOptions=function(m,l){var p=this;if(l=l||this.h.options){for(var y=[],v=[],C={},T=a(Object.keys(m)),E=T.next();!E.done;C={X:C.X,Y:C.Y},E=T.next())if(E=E.value,!(E in this.l&&this.l[E]===m[E])){this.l[E]=m[E];var R=l[E];R!==void 0&&(R.onChange&&(C.X=R.onChange,C.Y=m[E],y.push(function(D){return function(){var V;return U(function(H){if(H.h==1)return I(H,D.X(D.Y),2);V=H.i,V===!0&&(p.u=!0),H.h=0})}}(C))),R.graphOptionXref&&(E=Object.assign({},{calculatorName:"",calculatorIndex:0},R.graphOptionXref,{valueNumber:R.type===1?m[E]:0,valueBoolean:R.type===0?m[E]:!1,valueString:R.type===2?m[E]:""}),v.push(E)))}(y.length!==0||v.length!==0)&&(this.u=!0,this.H=(this.H===void 0?[]:this.H).concat(v),this.F=(this.F===void 0?[]:this.F).concat(y))}};function bc(m){var l,p,y,v,C,T,E;return U(function(R){switch(R.h){case 1:if(!m.u)return R.return();if(!m.F){R.h=2;break}l=a(m.F),p=l.next();case 3:if(p.done){R.h=5;break}return y=p.value,I(R,y(),4);case 4:p=l.next(),R.h=3;break;case 5:m.F=void 0;case 2:if(m.H){for(v=new m.i.GraphOptionChangeRequestList,C=a(m.H),T=C.next();!T.done;T=C.next())E=T.value,v.push_back(E);m.j.changeOptions(v),v.delete(),m.H=void 0}m.u=!1,R.h=0}})}n.initialize=function(){var m=this;return U(function(l){return l.h==1?I(l,fi(m),2):l.h!=3?I(l,xc(m),3):I(l,bc(m),0)})};function Ls(m,l){var p,y;return U(function(v){return l in m.L?v.return(m.L[l]):(p=m.locateFile(l,""),y=fetch(p).then(function(C){return C.arrayBuffer()}),m.L[l]=y,v.return(y))})}n.overrideFile=function(m,l){this.j?this.j.overrideFile(m,l):this.D[m]=l},n.clearOverriddenFiles=function(){this.D={},this.j&&this.j.clearOverriddenFiles()},n.send=function(m,l){var p=this,y,v,C,T,E,R,D,V,H;return U(function(q){switch(q.h){case 1:return p.h.inputs?(y=1e3*(l??performance.now()),I(q,p.I,2)):q.return();case 2:return I(q,p.initialize(),3);case 3:for(v=new p.i.PacketDataList,C=a(Object.keys(m)),T=C.next();!T.done;T=C.next())if(E=T.value,R=p.h.inputs[E]){e:{var j=m[E];switch(R.type){case"video":var X=p.s[R.stream];if(X||(X=new Fs(p.i,p.K),p.s[R.stream]=X),X.m===0&&(X.m=X.i.createTexture()),typeof HTMLVideoElement<"u"&&j instanceof HTMLVideoElement)var ee=j.videoWidth,ie=j.videoHeight;else typeof HTMLImageElement<"u"&&j instanceof HTMLImageElement?(ee=j.naturalWidth,ie=j.naturalHeight):(ee=j.width,ie=j.height);ie={glName:X.m,width:ee,height:ie},ee=X.h,ee.canvas.width=ie.width,ee.canvas.height=ie.height,ee.activeTexture(ee.TEXTURE0),X.i.bindTexture2d(X.m),ee.texImage2D(ee.TEXTURE_2D,0,ee.RGBA,ee.RGBA,ee.UNSIGNED_BYTE,j),X.i.bindTexture2d(0),X=ie;break e;case"detections":for(X=p.s[R.stream],X||(X=new pc(p.i),p.s[R.stream]=X),X.data||(X.data=new X.h.DetectionListData),X.data.reset(j.length),ie=0;ie<j.length;++ie){ee=j[ie];var he=X.data,me=he.setBoundingBox,Ae=ie,Fe=ee.la,fe=new sr;if(Qe(fe,1,Fe.sa),Qe(fe,2,Fe.ta),Qe(fe,3,Fe.height),Qe(fe,4,Fe.width),Qe(fe,5,Fe.rotation),Ye(fe,6,Fe.pa),Fe=fe.l(),me.call(he,Ae,Fe),ee.ea)for(he=0;he<ee.ea.length;++he){fe=ee.ea[he],me=X.data,Ae=me.addNormalizedLandmark,Fe=ie,fe=Object.assign({},fe,{visibility:fe.visibility?fe.visibility:0});var de=new Zt;Qe(de,1,fe.x),Qe(de,2,fe.y),Qe(de,3,fe.z),fe.visibility&&Qe(de,4,fe.visibility),fe=de.l(),Ae.call(me,Fe,fe)}if(ee.ba)for(he=0;he<ee.ba.length;++he)me=X.data,Ae=me.addClassification,Fe=ie,fe=ee.ba[he],de=new Kt,Qe(de,2,fe.qa),fe.index&&Ye(de,1,fe.index),fe.label&&Ye(de,3,fe.label),fe.displayName&&Ye(de,4,fe.displayName),fe=de.l(),Ae.call(me,Fe,fe)}X=X.data;break e;default:X={}}}switch(D=X,V=R.stream,R.type){case"video":v.pushTexture2d(Object.assign({},D,{stream:V,timestamp:y}));break;case"detections":H=D,H.stream=V,H.timestamp=y,v.pushDetectionList(H);break;default:throw Error("Unknown input config type: '"+R.type+"'")}}return p.j.send(v),I(q,p.I,4);case 4:v.delete(),q.h=0}})};function Bs(m,l,p){var y,v,C,T,E,R,D,V,H,q,j,X,ee,ie;return U(function(he){switch(he.h){case 1:if(!p)return he.return(l);for(y={},v=0,C=a(Object.keys(p)),T=C.next();!T.done;T=C.next())E=T.value,R=p[E],typeof R!="string"&&R.type==="texture"&&l[R.stream]!==void 0&&++v;1<v&&(m.M=!1),D=a(Object.keys(p)),T=D.next();case 2:if(T.done){he.h=4;break}if(V=T.value,H=p[V],typeof H=="string")return ee=y,ie=V,I(he,vc(m,V,l[H]),14);if(q=l[H.stream],H.type==="detection_list"){if(q){for(var me=q.getRectList(),Ae=q.getLandmarksList(),Fe=q.getClassificationsList(),fe=[],de=0;de<me.size();++de){var Me=fc(me.get(de)),Mn=Ze(Me,1),$c=Ze(Me,2),Sc=Ze(Me,3),Cc=Ze(Me,4),Tc=Ze(Me,5,0),Ms=void 0;Ms=Ms===void 0?0:Ms,Me={la:{sa:Mn,ta:$c,height:Sc,width:Cc,rotation:Tc,pa:er(Ke(Me,6),Ms)},ea:wr(da(Ae.get(de)),Zt,1).map(pa),ba:fa(ha(Fe.get(de)))},fe.push(Me)}me=fe}else me=[];y[V]=me,he.h=7;break}if(H.type==="proto_list"){if(q){for(me=Array(q.size()),Ae=0;Ae<q.size();Ae++)me[Ae]=q.get(Ae);q.delete()}else me=[];y[V]=me,he.h=7;break}if(q===void 0){he.h=3;break}if(H.type==="float_list"){y[V]=q,he.h=7;break}if(H.type==="proto"){y[V]=q,he.h=7;break}if(H.type!=="texture")throw Error("Unknown output config type: '"+H.type+"'");return j=m.v[V],j||(j=new Fs(m.i,m.K),m.v[V]=j),I(he,Ps(j,q,m.M),13);case 13:X=he.i,y[V]=X;case 7:H.transform&&y[V]&&(y[V]=H.transform(y[V])),he.h=3;break;case 14:ee[ie]=he.i;case 3:T=D.next(),he.h=2;break;case 4:return he.return(y)}})}function vc(m,l,p){var y;return U(function(v){return typeof p=="number"||p instanceof Uint8Array||p instanceof m.i.Uint8BlobList?v.return(p):p instanceof m.i.Texture2dDataOut?(y=m.v[l],y||(y=new Fs(m.i,m.K),m.v[l]=y),v.return(Ps(y,p,m.M))):v.return(void 0)})}function wc(m,l){for(var p=l.name||"$",y=[].concat(u(l.wants)),v=new m.i.StringList,C=a(l.wants),T=C.next();!T.done;T=C.next())v.push_back(T.value);C=m.i.PacketListener.implement({onResults:function(E){for(var R={},D=0;D<l.wants.length;++D)R[y[D]]=E.get(D);var V=m.listeners[p];V&&(m.I=Bs(m,R,l.outs).then(function(H){H=V(H);for(var q=0;q<l.wants.length;++q){var j=R[y[q]];typeof j=="object"&&j.hasOwnProperty&&j.hasOwnProperty("delete")&&j.delete()}H&&(m.I=H)}))}}),m.j.attachMultiListener(v,C),v.delete()}n.onResults=function(m,l){this.listeners[l||"$"]=m},oe("Solution",di),oe("OptionType",{BOOL:0,NUMBER:1,ua:2,0:"BOOL",1:"NUMBER",2:"STRING"});function xa(m){switch(m===void 0&&(m=0),m){case 1:return"selfie_segmentation_landscape.tflite";default:return"selfie_segmentation.tflite"}}function pi(m){var l=this;m=m||{},this.h=new di({locateFile:m.locateFile,files:function(p){return[{simd:!0,url:"selfie_segmentation_solution_simd_wasm_bin.js"},{simd:!1,url:"selfie_segmentation_solution_wasm_bin.js"},{data:!0,url:xa(p.modelSelection)}]},graph:{url:"selfie_segmentation.binarypb"},listeners:[{wants:["segmentation_mask","image_transformed"],outs:{image:{type:"texture",stream:"image_transformed"},segmentationMask:{type:"texture",stream:"segmentation_mask"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:typeof window!="object"||window.navigator===void 0?!1:"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},modelSelection:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelSelection",fieldName:"int_value"},onChange:function(p){var y,v,C;return U(function(T){return T.h==1?(y=xa(p),v="third_party/mediapipe/modules/selfie_segmentation/"+y,I(T,Ls(l.h,y),2)):(C=T.i,l.h.overrideFile(v,C),T.return(!0))})}}}})}n=pi.prototype,n.close=function(){return this.h.close(),Promise.resolve()},n.onResults=function(m){this.h.onResults(m)},n.initialize=function(){var m=this;return U(function(l){return I(l,m.h.initialize(),0)})},n.reset=function(){this.h.reset()},n.send=function(m){var l=this;return U(function(p){return I(p,l.h.send(m),0)})},n.setOptions=function(m){this.h.setOptions(m)},oe("SelfieSegmentation",pi),oe("VERSION","0.1.1675465747")}).call(qt);var bR=SelfieSegmentation;/**
    * @license
    * Copyright 2023 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */var El=function(n,e){return El=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var s in r)r.hasOwnProperty(s)&&(t[s]=r[s])},El(n,e)};function wb(n,e){function t(){this.constructor=n}El(n,e),n.prototype=e===null?Object.create(e):(t.prototype=e.prototype,new t)}var wt=function(){return wt=Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var s in e=arguments[t])Object.prototype.hasOwnProperty.call(e,s)&&(n[s]=e[s]);return n},wt.apply(this,arguments)};function Ee(n,e,t,r){return new(t||(t=Promise))(function(s,o){function i(c){try{u(r.next(c))}catch(h){o(h)}}function a(c){try{u(r.throw(c))}catch(h){o(h)}}function u(c){var h;c.done?s(c.value):(h=c.value,h instanceof t?h:new t(function(d){d(h)})).then(i,a)}u((r=r.apply(n,[])).next())})}function Ie(n,e){var t,r,s,o,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},typeof Symbol=="function"&&(o[Symbol.iterator]=function(){return this}),o;function a(u){return function(c){return function(h){if(t)throw new TypeError("Generator is already executing.");for(;i;)try{if(t=1,r&&(s=2&h[0]?r.return:h[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,h[1])).done)return s;switch(r=0,s&&(h=[2&h[0],s.value]),h[0]){case 0:case 1:s=h;break;case 4:return i.label++,{value:h[1],done:!1};case 5:i.label++,r=h[1],h=[0];continue;case 7:h=i.ops.pop(),i.trys.pop();continue;default:if(s=i.trys,!((s=s.length>0&&s[s.length-1])||h[0]!==6&&h[0]!==2)){i=0;continue}if(h[0]===3&&(!s||h[1]>s[0]&&h[1]<s[3])){i.label=h[1];break}if(h[0]===6&&i.label<s[1]){i.label=s[1],s=h;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(h);break}s[2]&&i.ops.pop(),i.trys.pop();continue}h=e.call(n,i)}catch(d){h=[6,d],r=0}finally{t=s=0}if(5&h[0])throw h[1];return{value:h[0]?h[1]:void 0,done:!0}}([u,c])}}}function ru(n){return n instanceof SVGAnimatedLength?n.baseVal.value:n}function nm(n){return Ee(this,void 0,void 0,function(){var e,t;return Ie(this,function(r){switch(r.label){case 0:return e=document.createElement("canvas"),n instanceof Te?[4,fo(n,e)]:[3,2];case 1:return r.sent(),[3,3];case 2:e.width=ru(n.width),e.height=ru(n.height),t=e.getContext("2d"),n instanceof ImageData?t.putImageData(n,0,0):t.drawImage(n,0,0),r.label=3;case 3:return[2,e]}})})}function $b(n){return Ee(this,void 0,void 0,function(){var e,t,r,s,o,i;return Ie(this,function(a){switch(a.label){case 0:return n instanceof Te?(e=n.shape.slice(0,2),t=e[0],r=e[1],s=ImageData.bind,[4,fo(n)]):[3,2];case 1:return[2,new(s.apply(ImageData,[void 0,a.sent(),r,t]))];case 2:return o=document.createElement("canvas"),i=o.getContext("2d"),o.width=ru(n.width),o.height=ru(n.height),i.drawImage(n,0,0),[2,i.getImageData(0,0,o.width,o.height)]}})})}function Sb(n){return Ee(this,void 0,void 0,function(){var e,t;return Ie(this,function(r){switch(r.label){case 0:return n instanceof SVGImageElement||n instanceof OffscreenCanvas?[4,nm(n)]:[3,2];case 1:return t=r.sent(),[3,3];case 2:t=n,r.label=3;case 3:return e=t,[2,oa(e,4)]}})})}function Fu(n){if(n<0||n>=256)throw new Error("Mask value must be in range [0, 255] but got "+n);if(!Number.isInteger(n))throw new Error("Mask value must be an integer but got "+n)}function Cb(n){var e=n.shape[2],t=Uf(n,2),r=K(t,[-1]);return Bi(r,e)}function Sa(n,e){return ce(function(){return Se(lo(n,be(e)),"int32")})}function vR(n,e){var t=e.shape,r=t[0],s=t[1],o=t[2];return ce(function(){var i=Cb(e),a=yt(Ar(0,o,1,"int32"),1),u=Se(Re(i,a),"int32"),c=K(u,[r,s]),h=ue(c,be(1,"int32"));return pe(function(d,f){return Z(d,f)}(h,n),be(1,"int32"))})}var Tb=function(){function n(e,t){this.model=e,this.outputStride=t;var r=this.model.inputs[0].shape;A(r[1]===-1&&r[2]===-1,function(){return"Input shape ["+r[1]+", "+r[2]+"] must both be equal to or -1"})}return n.prototype.predict=function(e){var t=this;return ce(function(){var r=t.preprocessInput(Se(e,"float32")),s=yt(r,0),o=t.model.predict(s).map(function(a){return Pe(a,[0])}),i=t.nameOutputResults(o);return{heatmapScores:In(i.heatmap),offsets:i.offsets,displacementFwd:i.displacementFwd,displacementBwd:i.displacementBwd,segmentation:i.segmentation,partHeatmaps:i.partHeatmaps,longOffsets:i.longOffsets,partOffsets:i.partOffsets}})},n.prototype.dispose=function(){this.model.dispose()},n}(),wR=function(n){function e(){return n!==null&&n.apply(this,arguments)||this}return wb(e,n),e.prototype.preprocessInput=function(t){return ce(function(){return pe(ve(t,127.5),1)})},e.prototype.nameOutputResults=function(t){return{offsets:t[0],segmentation:t[1],partHeatmaps:t[2],longOffsets:t[3],heatmap:t[4],displacementFwd:t[5],displacementBwd:t[6],partOffsets:t[7]}},e}(Tb),Pu=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],Nn=Pu.length,su=Pu.reduce(function(n,e,t){return n[e]=t,n},{});[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]].map(function(n){var e=n[0],t=n[1];return[su[e],su[t]]});function rm(n,e,t){var r=n[0],s=n[1],o=e[0],i=e[1],a=t.top,u=t.bottom;return[i/(t.left+t.right+s),o/(a+u+r)]}function Nb(n,e,t,r){return{y:r.get(n,e,t),x:r.get(n,e,t+Nn)}}function Eb(n,e,t){var r=Nb(n.heatmapY,n.heatmapX,n.id,t),s=r.y,o=r.x;return{x:n.heatmapX*e+o,y:n.heatmapY*e+s}}function jm(n,e,t){return n<e?e:n>t?t:n}function Hm(n,e){return{x:n.x+e.x,y:n.y+e.y}}function $R(n,e,t){t===void 0&&(t=.3);for(var r=0,s=0,o=0;o<n.length;o++)e.keypoints[o].score>t&&(s+=1,r+=Math.pow(n[o].x-e.keypoints[o].position.x,2)+Math.pow(n[o].y-e.keypoints[o].position.y,2));return s===0?r=1/0:r/=s,r}function SR(n,e,t,r,s,o,i){for(var a=i[0],u=i[1],c=t(n),h=c.y*r+c.x,d=s[Nn*(2*h)+e],f=s[Nn*(2*h+1)+e],g=n.y+d,x=n.x+f,w=0;w<o;w++){g=Math.min(g,a-1);var b=t({x:x=Math.min(x,u-1),y:g}),$=b.y*r+b.x;g+=d=s[Nn*(2*$)+e],x+=f=s[Nn*(2*$+1)+e]}return{x,y:g}}function Ib(n,e,t,r,s,o,i,a,u,c){for(var h=s[0],d=s[1],f=o[0],g=o[1],x=a[0],w=a[1],b=[],$=function(B){return function(z,G,U,Q){var J=G[0],se=G[1],oe=U[0],le=U[1],ge=Math.round(((J+z.y+1)*le-1)/Q);return{x:Math.round(((se+z.x+1)*oe-1)/Q),y:ge}}(B,[h,d],[f,g],u)},N=0;N<r;N++){var k=SR(n,N,$,i,e,c,[x,w]);b.push(k)}for(var I=-1,O=1/0,F=0;F<t.length;F++){var M=$R(b,t[F]);M<O&&(I=F,O=M)}return I}function kb(n,e){var t=n[0],r=n[1];return[Math.round((r-1)/e+1),Math.round((t-1)/e+1)]}function Rb(n,e,t,r,s,o,i,a,u,c,h){for(var d=i[0],f=i[1],g=n.shape,x=g[0],w=g[1],b=e.shape.slice(0,2),$=b[0],N=b[1],k=K(e,[$,N,2,Nn]),I=new Float32Array(h*Nn*3).fill(0),O=0;O<t.length;O++)for(var F=O*Nn*3,M=t[O],B=0;B<Nn;B++){var z=M.keypoints[B],G=F+3*B;I[G]=z.score,I[G+1]=z.position.y,I[G+2]=z.position.x}var U=rm([r,s],[d,f],a),Q=U[0],J=U[1],se=un(I,[h,Nn,3]),oe=a.top,le=a.left,ge={variableNames:["segmentation","longOffsets","poses"],outputShape:[x,w],userCode:`
    int convertToPositionInOutput(int pos, int pad, float scale, int stride) {
      return round(((float(pos + pad) + 1.0) * scale - 1.0) / float(stride));
    }

    float convertToPositionInOutputFloat(
        int pos, int pad, float scale, int stride) {
      return ((float(pos + pad) + 1.0) * scale - 1.0) / float(stride);
    }

    float dist(float x1, float y1, float x2, float y2) {
      return pow(x1 - x2, 2.0) + pow(y1 - y2, 2.0);
    }

    float sampleLongOffsets(float h, float w, int d, int k) {
      float fh = fract(h);
      float fw = fract(w);
      int clH = int(ceil(h));
      int clW = int(ceil(w));
      int flH = int(floor(h));
      int flW = int(floor(w));
      float o11 = getLongOffsets(flH, flW, d, k);
      float o12 = getLongOffsets(flH, clW, d, k);
      float o21 = getLongOffsets(clH, flW, d, k);
      float o22 = getLongOffsets(clH, clW, d, k);
      float o1 = mix(o11, o12, fw);
      float o2 = mix(o21, o22, fw);
      return mix(o1, o2, fh);
    }

    int findNearestPose(int h, int w) {
      float prob = getSegmentation(h, w);
      if (prob < 1.0) {
        return -1;
      }

      // Done(Tyler): convert from output space h/w to strided space.
      float stridedH = convertToPositionInOutputFloat(
        h, `+oe+", "+J+", "+o+`);
      float stridedW = convertToPositionInOutputFloat(
        w, `+le+", "+Q+", "+o+`);

      float minDist = 1000000.0;
      int iMin = -1;
      for (int i = 0; i < `+h+`; i++) {
        float curDistSum = 0.0;
        int numKpt = 0;
        for (int k = 0; k < `+Nn+`; k++) {
          float dy = sampleLongOffsets(stridedH, stridedW, 0, k);
          float dx = sampleLongOffsets(stridedH, stridedW, 1, k);

          float y = float(h) + dy;
          float x = float(w) + dx;

          for (int s = 0; s < `+u+`; s++) {
            int yRounded = round(min(y, float(`+(r-1)+`)));
            int xRounded = round(min(x, float(`+(s-1)+`)));

            float yStrided = convertToPositionInOutputFloat(
              yRounded, `+oe+", "+J+", "+o+`);
            float xStrided = convertToPositionInOutputFloat(
              xRounded, `+le+", "+Q+", "+o+`);

            float dy = sampleLongOffsets(yStrided, xStrided, 0, k);
            float dx = sampleLongOffsets(yStrided, xStrided, 1, k);

            y = y + dy;
            x = x + dx;
          }

          float poseScore = getPoses(i, k, 0);
          float poseY = getPoses(i, k, 1);
          float poseX = getPoses(i, k, 2);
          if (poseScore > `+c+`) {
            numKpt = numKpt + 1;
            curDistSum = curDistSum + dist(x, y, poseX, poseY);
          }
        }
        if (numKpt > 0 && curDistSum / float(numKpt) < minDist) {
          minDist = curDistSum / float(numKpt);
          iMin = i;
        }
      }
      return iMin;
    }

    void main() {
        ivec2 coords = getOutputCoords();
        int nearestPose = findNearestPose(coords[0], coords[1]);
        setOutput(float(nearestPose));
      }
  `};return Pf().compileAndRun(ge,[n,k,se])}function _b(){return Ff()==="webgl"}function CR(n,e,t,r,s,o,i,a,u,c,h,d){var f=i[0],g=i[1];return u===void 0&&(u=.2),c===void 0&&(c=8),h===void 0&&(h=.3),d===void 0&&(d=10),Ee(this,void 0,void 0,function(){var x,w,b,$,N;return Ie(this,function(k){switch(k.label){case 0:return x=t.filter(function(I){return I.score>=u}),_b()?(b=ce(function(){var I=Rb(n,e,x,r,s,o,[f,g],a,c,h,d),O=Sn().makeTensorFromDataId(I.dataId,I.shape,I.dtype);return x.map(function(F,M){return function(B,z){return ce(function(){return Se(ea(B,be(z)),"int32")})}(O,M)})}),[4,Promise.all(b.map(function(I){return I.data()}))]):[3,2];case 1:return w=k.sent(),b.forEach(function(I){return I.dispose()}),[3,5];case 2:return[4,n.data()];case 3:return $=k.sent(),[4,e.data()];case 4:N=k.sent(),w=function(I,O,F,M,B,z,G,U,Q,J){var se=G[0],oe=G[1];J===void 0&&(J=5);for(var le=F.map(function(pn){return new Uint8Array(M*B).fill(0)}),ge=U.top,$e=U.left,Ce=rm([M,B],[se,oe],U),at=Ce[0],vt=Ce[1],mt=kb([se,oe],z)[0],Je=0;Je<M;Je+=1)for(var gt=0;gt<B;gt+=1){var ut=Je*B+gt;if(I[ut]===1){var ct=Ib({x:gt,y:Je},O,F,J,[ge,$e],[at,vt],mt,[M,B],z,Q);ct>=0&&(le[ct][ut]=1)}}return le}($,N,x,r,s,o,[f,g],a,c),k.label=5;case 5:return[2,w.map(function(I,O){return{data:I,pose:x[O],width:s,height:r}})]}})})}function TR(n,e,t,r,s,o,i,a,u,c,h,d,f){var g=a[0],x=a[1];return c===void 0&&(c=.2),h===void 0&&(h=8),d===void 0&&(d=.3),f===void 0&&(f=10),Ee(this,void 0,void 0,function(){var w,b,$,N,k,I;return Ie(this,function(O){switch(O.label){case 0:return w=r.filter(function(F){return F.score>=c}),_b()?($=ce(function(){var F=Rb(n,e,w,s,o,i,[g,x],u,h,d,f),M=Sn().makeTensorFromDataId(F.dataId,F.shape,F.dtype);return w.map(function(B,z){return function(G,U,Q){return ce(function(){return pe(Z(Se(ea(G,be(Q)),"int32"),ue(U,1)),1)})}(M,t,z)})}),[4,Promise.all($.map(function(F){return F.data()}))]):[3,2];case 1:return b=O.sent(),$.forEach(function(F){return F.dispose()}),[3,6];case 2:return[4,n.data()];case 3:return N=O.sent(),[4,e.data()];case 4:return k=O.sent(),[4,t.data()];case 5:I=O.sent(),b=function(F,M,B,z,G,U,Q,J,se,oe,le){var ge=J[0],$e=J[1];le===void 0&&(le=5);for(var Ce=z.map(function(Bn){return new Int32Array(G*U).fill(-1)}),at=se.top,vt=se.left,mt=rm([G,U],[ge,$e],se),Je=mt[0],gt=mt[1],ut=kb([ge,$e],Q)[0],ct=0;ct<G;ct+=1)for(var pn=0;pn<U;pn+=1){var mn=ct*U+pn;if(F[mn]===1){var Ln=Ib({x:pn,y:ct},M,z,le,[at,vt],[Je,gt],ut,[G,U],Q,oe);Ln>=0&&(Ce[Ln][mn]=B[mn])}}return Ce}(N,k,I,w,s,o,i,[g,x],u,h),O.label=6;case 6:return[2,b.map(function(F,M){return{pose:w[M],data:F,height:s,width:o}})]}})})}function Oc(n){return Math.floor(n/2)}var NR=function(){function n(e,t){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}return n.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},n.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},n.prototype.empty=function(){return this.numberOfElements===-1},n.prototype.size=function(){return this.numberOfElements+1},n.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},n.prototype.max=function(){return this.priorityQueue[0]},n.prototype.swim=function(e){for(;e>0&&this.less(Oc(e),e);)this.exchange(e,Oc(e)),e=Oc(e)},n.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},n.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},n.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},n.prototype.exchange=function(e,t){var r=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=r},n}();function ER(n,e,t,r,s,o){for(var i=o.shape,a=i[0],u=i[1],c=!0,h=Math.max(t-s,0),d=Math.min(t+s+1,a),f=h;f<d;++f){for(var g=Math.max(r-s,0),x=Math.min(r+s+1,u),w=g;w<x;++w)if(o.get(f,w,n)>e){c=!1;break}if(!c)break}return c}var Ab=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]].map(function(n){var e=n[0],t=n[1];return[su[e],su[t]]}),Dc=Ab.map(function(n){return n[1]}),Km=Ab.map(function(n){return n[0]});function Fc(n,e,t,r){return{y:jm(Math.round(n.y/e),0,t-1),x:jm(Math.round(n.x/e),0,r-1)}}function Xm(n,e,t,r,s,o,i,a){a===void 0&&(a=2);for(var u=r.shape,c=u[0],h=u[1],d=function(N,k,I){var O=I.shape[2]/2;return{y:I.get(k.y,k.x,N),x:I.get(k.y,k.x,O+N)}}(n,Fc(e.position,o,c,h),i),f=Hm(e.position,d),g=0;g<a;g++){var x=Fc(f,o,c,h),w=Nb(x.y,x.x,t,s);f=Hm({x:x.x*o,y:x.y*o},{x:w.x,y:w.y})}var b=Fc(f,o,c,h),$=r.get(b.y,b.x,t);return{position:f,part:Pu[t],score:$}}function IR(n,e,t,r,s,o){var i=e.shape[2],a=Dc.length,u=new Array(i),c=n.part,h=n.score,d=Eb(c,r,t);u[c.id]={score:h,part:Pu[c.id],position:d};for(var f=a-1;f>=0;--f){var g=Dc[f],x=Km[f];u[g]&&!u[x]&&(u[x]=Xm(f,u[g],x,e,t,r,o))}for(f=0;f<a;++f)g=Km[f],x=Dc[f],u[g]&&!u[x]&&(u[x]=Xm(f,u[g],x,e,t,r,s));return u}function Ob(n,e,t,r){var s=t.x,o=t.y;return n.some(function(i){var a,u,c,h,d,f,g=i.keypoints[r].position;return a=o,u=s,c=g.y,h=g.x,(d=c-a)*d+(f=h-u)*f<=e})}function kR(n,e,t){var r=t.reduce(function(s,o,i){var a=o.position,u=o.score;return Ob(n,e,a,i)||(s+=u),s},0);return r/t.length}function Ca(n,e,t,r,s,o,i,a){i===void 0&&(i=.5),a===void 0&&(a=20);for(var u=[],c=function(x,w,b){for(var $=b.shape,N=$[0],k=$[1],I=$[2],O=new NR(N*k*I,function(G){return G.score}),F=0;F<N;++F)for(var M=0;M<k;++M)for(var B=0;B<I;++B){var z=b.get(F,M,B);z<x||ER(B,z,F,M,w,b)&&O.enqueue({score:z,part:{heatmapY:F,heatmapX:M,id:B}})}return O}(i,1,n),h=a*a;u.length<o&&!c.empty();){var d=c.dequeue();if(!Ob(u,h,Eb(d.part,s,e),d.part.id)){var f=IR(d,n,e,s,t,r),g=kR(u,h,f);u.push({keypoints:f,score:g})}}return u}var yi,RR=[-123.15,-115.9,-103.06],_R=function(n){function e(){return n!==null&&n.apply(this,arguments)||this}return wb(e,n),e.prototype.preprocessInput=function(t){return ue(t,RR)},e.prototype.nameOutputResults=function(t){var r=t[0],s=t[1],o=t[2],i=t[3],a=t[4],u=t[5];return{offsets:a,segmentation:t[6],partHeatmaps:u,longOffsets:i,heatmap:o,displacementFwd:s,displacementBwd:r,partOffsets:t[7]}},e}(Tb),qm="https://storage.googleapis.com/tfjs-models/savedmodel/bodypix/resnet50/",Ym="https://storage.googleapis.com/tfjs-models/savedmodel/bodypix/mobilenet/";function vi(n){if(typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&n instanceof OffscreenCanvas||typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)return function(e){if("offsetHeight"in e&&e.offsetHeight!==0&&"offsetWidth"in e&&e.offsetWidth!==0)return[e.offsetHeight,e.offsetWidth];if(e.height!=null&&e.width!=null)return[e.height,e.width];throw new Error("HTMLImageElement must have height and width attributes set.")}(n);if(typeof ImageData<"u"&&n instanceof ImageData)return[n.height,n.width];if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)return function(e){return e.hasAttribute("height")&&e.hasAttribute("width")?[e.height,e.width]:[e.videoHeight,e.videoWidth]}(n);if(n instanceof Te)return[n.shape[0],n.shape[1]];throw new Error("error: Unknown input type: "+n+".")}function Qm(n,e){return function(t,r){return(t-1)%r==0}(n,e)?n:Math.floor(n/e)*e+1}var wi={low:"low",medium:"medium",high:"high",full:"full"},AR=((yi={})[wi.low]=.25,yi[wi.medium]=.5,yi[wi.high]=.75,yi[wi.full]=1,yi);function Ta(n,e,t){var r=t[0],s=t[1],o=function(i){if(typeof i=="string"){var a=AR[i];return A(typeof a=="number",function(){return"string value of inputResolution must be one of "+Object.values(wi).join(",")+" but was "+i+"."}),a}return A(typeof i=="number"&&i<=2&&i>=.1,function(){return"inputResolution must be a string or number between 0.1 and 2, but was "+i}),i}(n);return[Qm(r*o,e),Qm(s*o,e)]}function Vs(n,e,t,r,s){var o=e[0],i=e[1],a=t[0],u=t[1],c=r[0],h=c[0],d=c[1],f=r[1],g=f[0],x=f[1];return ce(function(){var w=Kn.resizeBilinear(n,[a,u],!0);return w=In(w),function(b,$,N){var k=$[0],I=$[1],O=N[0],F=O[0],M=O[1],B=N[1],z=B[0],G=B[1];return ce(function(){var U=yt(b);return Pe(Kn.cropAndResize(U,[[F/(k+F+M-1),z/(I+z+G-1),(F+k-1)/(k+F+M-1),(z+I-1)/(I+z+G-1)]],[0],[k,I]),[0])})}(w,[o,i],[[h,d],[g,x]])})}function Na(n,e){var t=e[0],r=e[1],s=vi(n),o=s[0],i=s[1],a=r/t,u=[0,0,0,0],c=u[0],h=u[1],d=u[2],f=u[3];i/o<a?(c=0,h=0,d=Math.round(.5*(a*o-i)),f=Math.round(.5*(a*o-i))):(c=Math.round(.5*(1/a*i-o)),h=Math.round(.5*(1/a*i-o)),d=0,f=0);var g=ce(function(){var x=function(w){return w instanceof Te?w:oa(w)}(n);return x=hp(x,[[c,h],[d,f],[0,0]]),Kn.resizeBilinear(x,[t,r])});return{resized:g,padding:{top:c,left:d,right:f,bottom:h}}}function Ea(n){return Ee(this,void 0,void 0,function(){return Ie(this,function(e){return[2,Promise.all(n.map(function(t){return t.buffer()}))]})})}function Ia(n,e,t,r,s){var o=e[0],i=e[1],a=t[0],u=t[1],c=function(h,d,f,g,x){return g===void 0&&(g=0),x===void 0&&(x=0),f===1&&d===1&&g===0&&x===0?h:h.map(function(w){return function(b,$,N,k,I){return k===void 0&&(k=0),I===void 0&&(I=0),{score:b.score,keypoints:b.keypoints.map(function(O){var F=O.score,M=O.part,B=O.position;return{score:F,part:M,position:{x:B.x*N+I,y:B.y*$+k}}})}}(w,d,f,g,x)})}(n,(o+r.top+r.bottom)/a,(i+r.left+r.right)/u,-r.top,-r.left);return s?function(h,d){return d<=0?h:h.map(function(f){return function(g,x){return{score:g.score,keypoints:g.keypoints.map(function(w){var b=w.score,$=w.part,N=w.position;return{score:b,part:$,position:{x:x-1-N.x,y:N.y}}})}}(f,d)})}(c,i):c}var Zm={architecture:"MobileNetV1",outputStride:16,quantBytes:4,multiplier:.75},Jm=["MobileNetV1","ResNet50"],eg={MobileNetV1:[8,16,32],ResNet50:[32,16]},tg={MobileNetV1:[.5,.75,1],ResNet50:[1]},ng=[1,2,4],ka={flipHorizontal:!1,internalResolution:"medium",segmentationThreshold:.7,maxDetections:10,scoreThreshold:.4,nmsRadius:20},Ra={flipHorizontal:!1,internalResolution:"medium",segmentationThreshold:.7,maxDetections:10,scoreThreshold:.4,nmsRadius:20,minKeypointScore:.3,refineSteps:10};function rg(n){var e=n.segmentationThreshold,t=n.maxDetections,r=n.scoreThreshold,s=n.nmsRadius;if(e<0||e>1)throw new Error("segmentationThreshold "+e+". Should be in range [0.0, 1.0]");if(t<=0)throw new Error("Invalid maxDetections "+t+". Should be > 0");if(r<0||r>1)throw new Error("Invalid scoreThreshold "+r+". Should be in range [0.0, 1.0]");if(s<=0)throw new Error("Invalid nmsRadius "+s+".")}function sg(n){var e=n.segmentationThreshold,t=n.maxDetections,r=n.scoreThreshold,s=n.nmsRadius,o=n.minKeypointScore,i=n.refineSteps;if(e<0||e>1)throw new Error("segmentationThreshold "+e+". Should be in range [0.0, 1.0]");if(t<=0)throw new Error("Invalid maxDetections "+t+". Should be > 0");if(r<0||r>1)throw new Error("Invalid scoreThreshold "+r+". Should be in range [0.0, 1.0]");if(s<=0)throw new Error("Invalid nmsRadius "+s+".");if(o<0||o>1)throw new Error("Invalid minKeypointScore "+o+".Should be in range [0.0, 1.0]");if(i<=0||i>20)throw new Error("Invalid refineSteps "+i+".Should be in range [1, 20]")}var Db=function(){function n(e){this.baseModel=e}return n.prototype.predictForPersonSegmentation=function(e){var t=this.baseModel.predict(e);return{segmentLogits:t.segmentation,heatmapScores:t.heatmapScores,offsets:t.offsets,displacementFwd:t.displacementFwd,displacementBwd:t.displacementBwd}},n.prototype.predictForPersonSegmentationAndPart=function(e){var t=this.baseModel.predict(e);return{segmentLogits:t.segmentation,partHeatmapLogits:t.partHeatmaps,heatmapScores:t.heatmapScores,offsets:t.offsets,displacementFwd:t.displacementFwd,displacementBwd:t.displacementBwd}},n.prototype.predictForMultiPersonInstanceSegmentationAndPart=function(e){var t=this.baseModel.predict(e);return{segmentLogits:t.segmentation,longOffsets:t.longOffsets,heatmapScores:t.heatmapScores,offsets:t.offsets,displacementFwd:t.displacementFwd,displacementBwd:t.displacementBwd,partHeatmaps:t.partHeatmaps}},n.prototype.segmentPersonActivation=function(e,t,r){var s=this;r===void 0&&(r=.5);var o=vi(e),i=o[0],a=o[1],u=Ta(t,this.baseModel.outputStride,[i,a]),c=Na(e,u),h=c.resized,d=c.padding,f=ce(function(){var N=s.predictForPersonSegmentation(h),k=N.segmentLogits,I=N.heatmapScores,O=N.offsets,F=N.displacementFwd,M=N.displacementBwd,B=h.shape,z=B[0],G=B[1],U=Vs(k,[i,a],[z,G],[[d.top,d.bottom],[d.left,d.right]]);return{segmentation:Sa(Pe(U),r),heatmapScores:I,offsets:O,displacementFwd:F,displacementBwd:M}}),g=f.segmentation,x=f.heatmapScores,w=f.offsets,b=f.displacementFwd,$=f.displacementBwd;return h.dispose(),{segmentation:g,heatmapScores:x,offsets:w,displacementFwd:b,displacementBwd:$,padding:d,internalResolutionHeightAndWidth:u}},n.prototype.segmentPerson=function(e,t){return t===void 0&&(t=ka),Ee(this,void 0,void 0,function(){var r,s,o,i,a,u,c,h,d,f,g,x,w,b,$,N,k,I;return Ie(this,function(O){switch(O.label){case 0:return rg(t=wt(wt({},ka),t)),r=this.segmentPersonActivation(e,t.internalResolution,t.segmentationThreshold),s=r.segmentation,o=r.heatmapScores,i=r.offsets,a=r.displacementFwd,u=r.displacementBwd,c=r.padding,h=r.internalResolutionHeightAndWidth,d=s.shape,f=d[0],g=d[1],[4,s.data()];case 1:return x=O.sent(),s.dispose(),[4,Ea([o,i,a,u])];case 2:return w=O.sent(),b=w[0],$=w[1],N=w[2],k=w[3],I=Ia(I=Ca(b,$,N,k,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[f,g],h,c,!1),o.dispose(),i.dispose(),a.dispose(),u.dispose(),[2,{height:f,width:g,data:x,allPoses:I}]}})})},n.prototype.segmentMultiPerson=function(e,t){return t===void 0&&(t=Ra),Ee(this,void 0,void 0,function(){var r,s,o,i,a,u,c,h,d,f,g,x,w,b,$,N,k,I,O,F,M,B=this;return Ie(this,function(z){switch(z.label){case 0:return sg(t=wt(wt({},Ra),t)),r=vi(e),s=r[0],o=r[1],i=Ta(t.internalResolution,this.baseModel.outputStride,[s,o]),a=Na(e,i),u=a.resized,c=a.padding,h=ce(function(){var G,U=B.predictForMultiPersonInstanceSegmentationAndPart(u),Q=U.segmentLogits,J=U.longOffsets,se=U.heatmapScores,oe=U.offsets,le=U.displacementFwd,ge=U.displacementBwd,$e=Vs(Q,[s,o],i,[[c.top,c.bottom],[c.left,c.right]]);return G=J,{segmentation:Sa(Pe($e),t.segmentationThreshold),longOffsets:G,heatmapScoresRaw:se,offsetsRaw:oe,displacementFwdRaw:le,displacementBwdRaw:ge}}),d=h.segmentation,f=h.longOffsets,g=h.heatmapScoresRaw,x=h.offsetsRaw,w=h.displacementFwdRaw,b=h.displacementBwdRaw,[4,Ea([g,x,w,b])];case 1:return $=z.sent(),N=$[0],k=$[1],I=$[2],O=$[3],F=Ia(F=Ca(N,k,I,O,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[s,o],i,c,!1),[4,CR(d,f,F,s,o,this.baseModel.outputStride,i,c,t.scoreThreshold,t.refineSteps,t.minKeypointScore,t.maxDetections)];case 2:return M=z.sent(),u.dispose(),d.dispose(),f.dispose(),g.dispose(),x.dispose(),w.dispose(),b.dispose(),[2,M]}})})},n.prototype.segmentPersonPartsActivation=function(e,t,r){var s=this;r===void 0&&(r=.5);var o=vi(e),i=o[0],a=o[1],u=Ta(t,this.baseModel.outputStride,[i,a]),c=Na(e,u),h=c.resized,d=c.padding,f=ce(function(){var N=s.predictForPersonSegmentationAndPart(h),k=N.segmentLogits,I=N.partHeatmapLogits,O=N.heatmapScores,F=N.offsets,M=N.displacementFwd,B=N.displacementBwd,z=h.shape,G=z[0],U=z[1],Q=Vs(k,[i,a],[G,U],[[d.top,d.bottom],[d.left,d.right]]),J=Vs(I,[i,a],[G,U],[[d.top,d.bottom],[d.left,d.right]]);return{partSegmentation:vR(Sa(Pe(Q),r),J),heatmapScores:O,offsets:F,displacementFwd:M,displacementBwd:B}}),g=f.partSegmentation,x=f.heatmapScores,w=f.offsets,b=f.displacementFwd,$=f.displacementBwd;return h.dispose(),{partSegmentation:g,heatmapScores:x,offsets:w,displacementFwd:b,displacementBwd:$,padding:d,internalResolutionHeightAndWidth:u}},n.prototype.segmentPersonParts=function(e,t){return t===void 0&&(t=ka),Ee(this,void 0,void 0,function(){var r,s,o,i,a,u,c,h,d,f,g,x,w,b,$,N,k,I;return Ie(this,function(O){switch(O.label){case 0:return rg(t=wt(wt({},ka),t)),r=this.segmentPersonPartsActivation(e,t.internalResolution,t.segmentationThreshold),s=r.partSegmentation,o=r.heatmapScores,i=r.offsets,a=r.displacementFwd,u=r.displacementBwd,c=r.padding,h=r.internalResolutionHeightAndWidth,d=s.shape,f=d[0],g=d[1],[4,s.data()];case 1:return x=O.sent(),s.dispose(),[4,Ea([o,i,a,u])];case 2:return w=O.sent(),b=w[0],$=w[1],N=w[2],k=w[3],I=Ia(I=Ca(b,$,N,k,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[f,g],h,c,!1),o.dispose(),i.dispose(),a.dispose(),u.dispose(),[2,{height:f,width:g,data:x,allPoses:I}]}})})},n.prototype.segmentMultiPersonParts=function(e,t){return t===void 0&&(t=Ra),Ee(this,void 0,void 0,function(){var r,s,o,i,a,u,c,h,d,f,g,x,w,b,$,N,k,I,O,F,M,B,z=this;return Ie(this,function(G){switch(G.label){case 0:return sg(t=wt(wt({},Ra),t)),r=vi(e),s=r[0],o=r[1],i=Ta(t.internalResolution,this.baseModel.outputStride,[s,o]),a=Na(e,i),u=a.resized,c=a.padding,h=ce(function(){var U=z.predictForMultiPersonInstanceSegmentationAndPart(u),Q=U.segmentLogits,J=U.longOffsets,se=U.heatmapScores,oe=U.offsets,le=U.displacementFwd,ge=U.displacementBwd,$e=U.partHeatmaps,Ce=Vs(Q,[s,o],i,[[c.top,c.bottom],[c.left,c.right]]),at=Vs($e,[s,o],i,[[c.top,c.bottom],[c.left,c.right]]),vt=J,mt=Sa(Pe(Ce),t.segmentationThreshold),Je=function(gt){var ut=gt.shape,ct=ut[0],pn=ut[1],mn=ut[2];return ce(function(){var Ln=Cb(gt),Bn=yt(Ar(0,mn,1,"int32"),1),jt=Se(Re(Ln,Bn),"int32");return K(jt,[ct,pn])})}(at);return{segmentation:mt,longOffsets:vt,heatmapScoresRaw:se,offsetsRaw:oe,displacementFwdRaw:le,displacementBwdRaw:ge,partSegmentation:Je}}),d=h.segmentation,f=h.longOffsets,g=h.heatmapScoresRaw,x=h.offsetsRaw,w=h.displacementFwdRaw,b=h.displacementBwdRaw,$=h.partSegmentation,[4,Ea([g,x,w,b])];case 1:return N=G.sent(),k=N[0],I=N[1],O=N[2],F=N[3],M=Ia(M=Ca(k,I,O,F,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[s,o],i,c,!1),[4,TR(d,f,$,M,s,o,this.baseModel.outputStride,i,c,t.scoreThreshold,t.refineSteps,t.minKeypointScore,t.maxDetections)];case 2:return B=G.sent(),u.dispose(),d.dispose(),f.dispose(),g.dispose(),x.dispose(),w.dispose(),b.dispose(),$.dispose(),[2,B]}})})},n.prototype.dispose=function(){this.baseModel.dispose()},n}();function OR(n){return Ee(this,void 0,void 0,function(){var e,t,r,s,o,i;return Ie(this,function(a){switch(a.label){case 0:if(e=n.outputStride,t=n.quantBytes,r=n.multiplier,yb==null)throw new Error(`Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this
        model.`);return s=function(u,c,h){var d={1:"100",.75:"075",.5:"050"},f="model-stride"+u+".json";return h===4?Ym+"float/"+d[c]+"/"+f:Ym+"quant"+h+"/"+d[c]+"/"+f}(e,r,t),[4,Ui(n.modelUrl||s)];case 1:return o=a.sent(),i=new wR(o,e),[2,new Db(i)]}})})}function DR(n){return Ee(this,void 0,void 0,function(){var e,t,r,s,o;return Ie(this,function(i){switch(i.label){case 0:if(e=n.outputStride,t=n.quantBytes,yb==null)throw new Error(`Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this
        model.`);return r=function(a,u){var c="model-stride"+a+".json";return u===4?qm+"float/"+c:qm+"quant"+u+"/"+c}(e,t),[4,Ui(n.modelUrl||r)];case 1:return s=i.sent(),o=new _R(s,e),[2,new Db(o)]}})})}function FR(n){return n===void 0&&(n=Zm),Ee(this,void 0,void 0,function(){return Ie(this,function(e){return(n=function(t){if((t=t||Zm).architecture==null&&(t.architecture="MobileNetV1"),Jm.indexOf(t.architecture)<0)throw new Error("Invalid architecture "+t.architecture+". Should be one of "+Jm);if(t.outputStride==null&&(t.outputStride=16),eg[t.architecture].indexOf(t.outputStride)<0)throw new Error("Invalid outputStride "+t.outputStride+". Should be one of "+eg[t.architecture]+" for architecture "+t.architecture+".");if(t.multiplier==null&&(t.multiplier=1),tg[t.architecture].indexOf(t.multiplier)<0)throw new Error("Invalid multiplier "+t.multiplier+". Should be one of "+tg[t.architecture]+" for architecture "+t.architecture+".");if(t.quantBytes==null&&(t.quantBytes=4),ng.indexOf(t.quantBytes)<0)throw new Error("Invalid quantBytes "+t.quantBytes+". Should be one of "+ng+" for architecture "+t.architecture+".");return t}(n)).architecture==="ResNet50"?[2,DR(n)]:n.architecture==="MobileNetV1"?[2,OR(n)]:[2,null]})})}var Il=["left_face","right_face","left_upper_arm_front","left_upper_arm_back","right_upper_arm_front","right_upper_arm_back","left_lower_arm_front","left_lower_arm_back","right_lower_arm_front","right_lower_arm_back","left_hand","right_hand","torso_front","torso_back","left_upper_leg_front","left_upper_leg_back","right_upper_leg_front","right_upper_leg_back","left_lower_leg_front","left_lower_leg_back","right_lower_leg_front","right_lower_leg_back","left_feet","right_feet"],og=function(){function n(e){this.mask=e}return n.prototype.toCanvasImageSource=function(){return Ee(this,void 0,void 0,function(){return Ie(this,function(e){return[2,nm(this.mask)]})})},n.prototype.toImageData=function(){return Ee(this,void 0,void 0,function(){return Ie(this,function(e){return[2,this.mask]})})},n.prototype.toTensor=function(){return Ee(this,void 0,void 0,function(){return Ie(this,function(e){return[2,Sb(this.mask)]})})},n.prototype.getUnderlyingType=function(){return"imagedata"},n}();function PR(n){if(Fu(n),n!==255)throw new Error("Foreground id must be 255 but got "+n);return"person"}function LR(n){if(Fu(n),n>=Il.length)throw new Error("Invalid body part value "+n);return Il[n]}var BR=function(){function n(e){this.bodyPixModel=e}return n.prototype.segmentPeople=function(e,t){return Ee(this,void 0,void 0,function(){var r,s,o,i;return Ie(this,function(a){switch(a.label){case 0:return e instanceof ImageBitmap&&((r=document.createElement("canvas")).getContext("2d").drawImage(e,0,0),e=r),t.segmentBodyParts?t.multiSegmentation?[4,this.bodyPixModel.segmentMultiPersonParts(e,t)]:[3,2]:[3,5];case 1:return o=a.sent(),[3,4];case 2:return[4,this.bodyPixModel.segmentPersonParts(e,t)];case 3:o=[a.sent()],a.label=4;case 4:return s=o.map(function(u){var c=u.data,h=u.width,d=u.height,f=new Uint8ClampedArray(h*d*4).fill(0);return c.forEach(function(g,x){g===-1?(f[4*x]=Il.length,f[4*x+3]=0):(f[4*x]=g,f[4*x+3]=255)}),{maskValueToLabel:LR,mask:new og(new ImageData(f,h,d))}}),[3,10];case 5:return t.multiSegmentation?[4,this.bodyPixModel.segmentMultiPerson(e,t)]:[3,7];case 6:return i=a.sent(),[3,9];case 7:return[4,this.bodyPixModel.segmentPerson(e,t)];case 8:i=[a.sent()],a.label=9;case 9:s=i.map(function(u){var c=u.data,h=u.width,d=u.height,f=new Uint8ClampedArray(h*d*4).fill(0);return c.forEach(function(g,x){g===0?(f[4*x]=0,f[4*x+3]=0):(f[4*x]=255,f[4*x+3]=255)}),{maskValueToLabel:PR,mask:new og(new ImageData(f,h,d))}}),a.label=10;case 10:return[2,s]}})})},n.prototype.dispose=function(){this.bodyPixModel.dispose()},n.prototype.reset=function(){},n}();function MR(n){return Ee(this,void 0,void 0,function(){return Ie(this,function(e){return[2,FR(n).then(function(t){return new BR(t)})]})})}var ig={runtime:"mediapipe",modelType:"general"},VR=function(){function n(e){this.mask=e}return n.prototype.toCanvasImageSource=function(){return Ee(this,void 0,void 0,function(){return Ie(this,function(e){return[2,this.mask]})})},n.prototype.toImageData=function(){return Ee(this,void 0,void 0,function(){return Ie(this,function(e){return[2,$b(this.mask)]})})},n.prototype.toTensor=function(){return Ee(this,void 0,void 0,function(){return Ie(this,function(e){return[2,Sb(this.mask)]})})},n.prototype.getUnderlyingType=function(){return"canvasimagesource"},n}();function UR(n){return Fu(n),"person"}var zR=function(){function n(e){var t,r=this;this.selfieMode=!1;var s;this.selfieSegmentationSolution=new bR({locateFile:(t=e.locateFile)!==null&&t!==void 0?t:function(o,i){return e.solutionPath?e.solutionPath.replace(/\/+$/,"")+"/"+o:i+"/"+o}}),e.modelType==="landscape"?s=1:s=0,this.selfieSegmentationSolution.setOptions({modelSelection:s,selfieMode:this.selfieMode}),this.selfieSegmentationSolution.onResults(function(o){r.segmentation=[{maskValueToLabel:UR,mask:new VR(o.segmentationMask)}]})}return n.prototype.segmentPeople=function(e,t){return Ee(this,void 0,void 0,function(){var r,s;return Ie(this,function(o){switch(o.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.selfieSegmentationSolution.setOptions({selfieMode:this.selfieMode})),e instanceof Te?(s=ImageData.bind,[4,fo(e)]):[3,2];case 1:return r=new(s.apply(ImageData,[void 0,o.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:r=e,o.label=3;case 3:return e=r,[4,this.selfieSegmentationSolution.send({image:e})];case 4:return o.sent(),[2,this.segmentation]}})})},n.prototype.dispose=function(){this.selfieSegmentationSolution.close()},n.prototype.reset=function(){this.selfieSegmentationSolution.reset(),this.segmentation=null,this.selfieMode=!1},n.prototype.initialize=function(){return this.selfieSegmentationSolution.initialize()},n}();function WR(n){return Ee(this,void 0,void 0,function(){var e,t;return Ie(this,function(r){switch(r.label){case 0:return e=function(s){if(s==null)return wt({},ig);var o=wt({},s);return o.runtime="mediapipe",o.modelType==null&&(o.modelType=ig.modelType),o}(n),[4,(t=new zR(e)).initialize()];case 1:return r.sent(),[2,t]}})})}function GR(n,e,t,r){var s=n.width,o=n.height,i=1,a=Math.cos(n.rotation),u=Math.sin(n.rotation),c=n.xCenter,h=n.yCenter,d=1/e,f=1/t,g=new Array(16);return g[0]=s*a*i*d,g[1]=-o*u*d,g[2]=0,g[3]=(-.5*s*a*i+.5*o*u+c)*d,g[4]=s*u*i*f,g[5]=o*a*f,g[6]=0,g[7]=(-.5*o*a-.5*s*u*i+h)*f,g[8]=0,g[9]=0,g[10]=s*d,g[11]=0,g[12]=0,g[13]=0,g[14]=0,g[15]=1,function(x){if(x.length!==16)throw new Error("Array length must be 16 but got "+x.length);return[[x[0],x[1],x[2],x[3]],[x[4],x[5],x[6],x[7]],[x[8],x[9],x[10],x[11]],[x[12],x[13],x[14],x[15]]]}(g)}function Fb(n){return n instanceof Te?{height:n.shape[0],width:n.shape[1]}:{height:n.height,width:n.width}}function Pc(n,e){A(n.width!==0,function(){return e+" width cannot be 0."}),A(n.height!==0,function(){return e+" height cannot be 0."})}function jR(n,e){var t=function(r,s,o,i){var a=s-r,u=i-o,c=u/a;return{scale:c,offset:o-r*c}}(0,255,e[0],e[1]);return ce(function(){return ue(Z(n,t.scale),t.offset)})}function HR(n,e,t){var r=e.outputTensorSize,s=e.keepAspectRatio,o=e.borderMode,i=e.outputTensorFloatRange,a=Fb(n),u=function(f,g){return{xCenter:.5*f.width,yCenter:.5*f.height,width:f.width,height:f.height,rotation:0}}(a),c=function(f,g,x){if(x===void 0&&(x=!1),!x)return{top:0,left:0,right:0,bottom:0};var w=g.height,b=g.width;Pc(g,"targetSize"),Pc(f,"roi");var $,N,k=w/b,I=f.height/f.width,O=0,F=0;return k>I?($=f.width,N=f.width*k,F=(1-I/k)/2):($=f.height/k,N=f.height,O=(1-k/I)/2),f.width=$,f.height=N,{top:F,left:O,right:O,bottom:F}}(u,r,s),h=GR(u,a.width,a.height),d=ce(function(){var f,g=(f=n)instanceof Te?f:oa(f),x=fr(function($,N,k){return Pc(k,"inputResolution"),[1/k.width*$[0][0]*N.width,1/k.height*$[0][1]*N.width,$[0][3]*N.width,1/k.width*$[1][0]*N.height,1/k.height*$[1][1]*N.height,$[1][3]*N.height,0,0]}(h,a,r),[1,8]),w=o==="zero"?"constant":"nearest",b=Kn.transform(yt(Se(g,"float32")),x,"bilinear",w,0,[r.height,r.width]);return i!=null?jR(b,i):b});return{imageTensor:d,padding:c,transformationMatrix:h}}function KR(n,e,t){return ce(function(){var r=Pe(n,[0]),s=r.shape[2];if(s===1){var o=r;switch(e.activation){case"none":break;case"sigmoid":o=In(o);break;case"softmax":throw new Error("Softmax activation requires two channels.");default:throw new Error("Activation not supported ("+e.activation+")")}var i=t?Kn.resizeBilinear(o,[t.height,t.width]):o;return Pe(i,[2])}throw new Error("Unsupported number of tensor channels "+s)})}var ag={runtime:"tfjs",modelType:"general",modelUrl:"https://tfhub.dev/mediapipe/tfjs-model/selfie_segmentation/general/1"},ug={flipHorizontal:!1},XR={outputTensorSize:{width:256,height:256},keepAspectRatio:!1,borderMode:"zero",outputTensorFloatRange:[0,1]},qR={outputTensorSize:{width:256,height:144},keepAspectRatio:!1,borderMode:"zero",outputTensorFloatRange:[0,1]},YR={activation:"none"},QR=function(){function n(e){this.mask=e}return n.prototype.toCanvasImageSource=function(){return Ee(this,void 0,void 0,function(){return Ie(this,function(e){return[2,nm(this.mask)]})})},n.prototype.toImageData=function(){return Ee(this,void 0,void 0,function(){return Ie(this,function(e){return[2,$b(this.mask)]})})},n.prototype.toTensor=function(){return Ee(this,void 0,void 0,function(){return Ie(this,function(e){return[2,this.mask]})})},n.prototype.getUnderlyingType=function(){return"tensor"},n}();function ZR(n){return Fu(n),"person"}var zi,JR=function(){function n(e,t){this.modelType=e,this.model=t}return n.prototype.segmentPeople=function(e,t){return Ee(this,void 0,void 0,function(){var r,s=this;return Ie(this,function(o){return t=function(i){if(i==null)return wt({},ug);var a=wt({},i);return a.flipHorizontal==null&&(a.flipHorizontal=ug.flipHorizontal),a}(t),e==null?(this.reset(),[2,[]]):(r=ce(function(){var i=HR(e,s.modelType==="general"?XR:qR).imageTensor,a=xe(s.model.predict(i),[0,0,0,1],-1),u=Fb(e),c=KR(a,YR,u),h=yt(c,2),d=ks(h,[[0,0],[0,0],[0,1]]);return cp(d,[[0,0],[0,0],[0,2]],"symmetric")}),[2,[{maskValueToLabel:ZR,mask:new QR(r)}]])})})},n.prototype.dispose=function(){this.model.dispose()},n.prototype.reset=function(){},n}();function e_(n){return Ee(this,void 0,void 0,function(){var e,t,r;return Ie(this,function(s){switch(s.label){case 0:return e=function(o){if(o==null)return wt({},ag);var i=wt({},o);if(i.runtime="tfjs",i.modelType==null&&(i.modelType=ag.modelType),i.modelType!=="general"&&i.modelType!=="landscape")throw new Error("Model type must be one of general or landscape, but got "+i.modelType);return i.modelUrl==null&&(i.modelType==="general"?i.modelUrl="https://tfhub.dev/mediapipe/tfjs-model/selfie_segmentation/general/1":i.modelUrl="https://tfhub.dev/mediapipe/tfjs-model/selfie_segmentation/landscape/1"),i}(n),t=typeof e.modelUrl=="string"&&e.modelUrl.indexOf("https://tfhub.dev")>-1,[4,Ui(e.modelUrl,{fromTFHub:t})];case 1:return r=s.sent(),[2,new JR(e.modelType,r)]}})})}function t_(n,e){return Ee(this,void 0,void 0,function(){var t,r;return Ie(this,function(s){switch(n){case zi.MediaPipeSelfieSegmentation:if(t=void 0,(r=e)!=null){if(r.runtime==="tfjs")return[2,e_(r)];if(r.runtime==="mediapipe")return[2,WR(r)];t=r.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' or 'mediapipe', but got "+t);case zi.BodyPix:return[2,MR(r=e)];default:throw new Error(n+" is not a supported model name.")}})})}(function(n){n.BodyPix="BodyPix",n.MediaPipeSelfieSegmentation="MediaPipeSelfieSegmentation"})(zi||(zi={}));var n_="blurred-mask",r_="mask",s_="draw-image",Lc={};function o_(n,e,t,r){var s=n.width,o=n.height,i=e.width,a=e.height;if(s!==i||o!==a)throw new Error("error: dimensions must match. "+t+" has dimensions "+s+"x"+o+", "+r+" has dimensions "+i+"x"+a)}function sm(n){if(typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&n instanceof OffscreenCanvas||typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)return function(e){if("offsetHeight"in e&&e.offsetHeight!==0&&"offsetWidth"in e&&e.offsetWidth!==0)return[e.offsetHeight,e.offsetWidth];if(e.height!=null&&e.width!=null)return[e.height,e.width];throw new Error("HTMLImageElement must have height and width attributes set.")}(n);if(typeof ImageData<"u"&&n instanceof ImageData)return[n.height,n.width];if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)return function(e){return e.hasAttribute("height")&&e.hasAttribute("width")?[e.height,e.width]:[e.videoHeight,e.videoWidth]}(n);if(n instanceof Te)return[n.shape[0],n.shape[1]];throw new Error("error: Unknown input type: "+n+".")}function Pb(n){return Lc[n]||(Lc[n]=function(){if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(0,0);throw new Error("Cannot create a canvas in this context")}()),Lc[n]}function Lb(n,e){var t=Pb(e);return function(r,s){s.width=r.width,s.height=r.height,s.getContext("2d").putImageData(r,0,0)}(n,t),t}function om(n,e,t,r,s,o){return Ee(this,void 0,void 0,function(){var i,a,u,c;return Ie(this,function(h){switch(h.label){case 0:return e instanceof Te?[4,fo(e)]:[3,2];case 1:i=h.sent(),a=sm(e),u=a[0],c=a[1],e=new ImageData(i,c,u),h.label=2;case 2:return e instanceof ImageData&&(e=Lb(e,s_)),s==null||o==null?n.drawImage(e,t,r):n.drawImage(e,t,r,s,o),[2]}})})}function i_(n){var e=n.getContext("2d");e.scale(-1,1),e.translate(-n.width,0)}function a_(n,e,t){return Ee(this,void 0,void 0,function(){var r,s,o,i,a,u,c,h;return Ie(this,function(d){switch(d.label){case 0:for(r=n.getContext("2d"),s=0,o=5,i=1/(2*Math.PI*o*o),a=2,c=-t;c<=t;c+=a)for(h=-t;h<=t;h+=a)u=i*Math.exp(-(h*h+c*c)/(2*o*o)),s+=u;c=-t,d.label=1;case 1:if(!(c<=t))return[3,6];h=-t,d.label=2;case 2:return h<=t?(r.globalAlpha=i*Math.exp(-(h*h+c*c)/(2*o*o))/s*t,[4,om(r,e,h,c)]):[3,5];case 3:d.sent(),d.label=4;case 4:return h+=a,[3,2];case 5:return c+=a,[3,1];case 6:return r.globalAlpha=1,[2]}})})}function u_(n,e,t){return Ee(this,void 0,void 0,function(){var r,s,o,i;return Ie(this,function(a){switch(a.label){case 0:return r=sm(n),s=r[0],o=r[1],i=t.getContext("2d"),t.width=o,t.height=s,i.clearRect(0,0,o,s),i.save(),/^((?!chrome|android).)*safari/i.test(navigator.userAgent)?[4,a_(t,n,e)]:[3,2];case 1:return a.sent(),[3,4];case 2:return i.filter="blur("+e+"px)",[4,om(i,n,0,0,o,s)];case 3:a.sent(),a.label=4;case 4:return i.restore(),[2]}})})}function c_(n,e,t){return Ee(this,void 0,void 0,function(){var r;return Ie(this,function(s){switch(s.label){case 0:return r=Pb(t),[3,2];case 1:return s.sent(),[3,4];case 2:return[4,u_(n,e,r)];case 3:s.sent(),s.label=4;case 4:return[2,r]}})})}function l_(n,e,t,r,s,o){o===void 0&&(o={r:0,g:255,b:255,a:255});for(var i=-s;i<=s;i++)for(var a=-s;a<=s;a++)if(i!==0&&a!==0){var u=(e+i)*r+(t+a);n[4*u+0]=o.r,n[4*u+1]=o.g,n[4*u+2]=o.b,n[4*u+3]=o.a}}function h_(n,e,t,r,s,o,i){i===void 0&&(i=1);for(var a=0,u=-i;u<=i;u++)for(var c=-i;c<=i;c++)if(u!==0&&c!==0){var h=(e+u)*r+(t+c);(!s[n[4*h]]||n[4*h+3]<o)&&(a+=1)}return a>0}function d_(n,e,t,r,s,o){return e===void 0&&(e={r:0,g:0,b:0,a:0}),t===void 0&&(t={r:0,g:0,b:0,a:255}),r===void 0&&(r=!1),s===void 0&&(s=.5),o===void 0&&(o=Array.from(Array(256).keys())),Ee(this,void 0,void 0,function(){var i,a,u,c,h,d,f,g,x,w,b,$,N,k;return Ie(this,function(I){switch(I.label){case 0:return(i=Array.isArray(n)?n:[n]).length===0?[2,null]:[4,Promise.all(i.map(function(O){return O.mask.toImageData()}))];case 1:for(a=I.sent(),u=a[0],c=u.width,h=u.height,d=new Uint8ClampedArray(c*h*4),f=Math.round(255*s),g=new Array(256).fill(!1),o.forEach(function(O){return g[O]=!0}),x=0;x<h;x++)for(w=0;w<c;w++)for(d[4*(b=x*c+w)+0]=t.r,d[4*b+1]=t.g,d[4*b+2]=t.b,d[4*b+3]=t.a,$=0,N=a;$<N.length;$++)k=N[$],g[k.data[4*b]]&&k.data[4*b+3]>=f&&(d[4*b]=e.r,d[4*b+1]=e.g,d[4*b+2]=e.b,d[4*b+3]=e.a,r&&x-1>=0&&x+1<h&&w-1>=0&&w+1<c&&h_(k.data,x,w,c,g,f)&&l_(d,x,w,c,1));return[2,new ImageData(d,c,h)]}})})}function f_(n,e,t,r,s,o){return Ee(this,void 0,void 0,function(){var i,a,u,c,h;return Ie(this,function(d){switch(d.label){case 0:return i=sm(e),a=i[0],u=i[1],n.width=u,n.height=a,(c=n.getContext("2d")).save(),i_(n),[4,om(c,e,0,0)];case 1:return d.sent(),c.globalAlpha=r,t?(o_({width:u,height:a},t,"image","mask"),[4,c_(Lb(t,r_),s,n_)]):[3,3];case 2:h=d.sent(),c.drawImage(h,0,0,u,a),d.label=3;case 3:return c.restore(),[2]}})})}(function(){var n;function e(l){var p=0;return function(){return p<l.length?{done:!1,value:l[p++]}:{done:!0}}}var t=typeof Object.defineProperties=="function"?Object.defineProperty:function(l,p,y){return l==Array.prototype||l==Object.prototype||(l[p]=y.value),l};function r(l){l=[typeof globalThis=="object"&&globalThis,l,typeof window=="object"&&window,typeof self=="object"&&self,typeof qt=="object"&&qt];for(var p=0;p<l.length;++p){var y=l[p];if(y&&y.Math==Math)return y}throw Error("Cannot find global object")}var s=r(this);function o(l,p){if(p)e:{var y=s;l=l.split(".");for(var v=0;v<l.length-1;v++){var C=l[v];if(!(C in y))break e;y=y[C]}l=l[l.length-1],v=y[l],p=p(v),p!=v&&p!=null&&t(y,l,{configurable:!0,writable:!0,value:p})}}o("Symbol",function(l){function p(T){if(this instanceof p)throw new TypeError("Symbol is not a constructor");return new y(v+(T||"")+"_"+C++,T)}function y(T,E){this.h=T,t(this,"description",{configurable:!0,writable:!0,value:E})}if(l)return l;y.prototype.toString=function(){return this.h};var v="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",C=0;return p}),o("Symbol.iterator",function(l){if(l)return l;l=Symbol("Symbol.iterator");for(var p="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),y=0;y<p.length;y++){var v=s[p[y]];typeof v=="function"&&typeof v.prototype[l]!="function"&&t(v.prototype,l,{configurable:!0,writable:!0,value:function(){return i(e(this))}})}return l});function i(l){return l={next:l},l[Symbol.iterator]=function(){return this},l}function a(l){var p=typeof Symbol<"u"&&Symbol.iterator&&l[Symbol.iterator];return p?p.call(l):{next:e(l)}}function u(l){if(!(l instanceof Array)){l=a(l);for(var p,y=[];!(p=l.next()).done;)y.push(p.value);l=y}return l}var c=typeof Object.assign=="function"?Object.assign:function(l,p){for(var y=1;y<arguments.length;y++){var v=arguments[y];if(v)for(var C in v)Object.prototype.hasOwnProperty.call(v,C)&&(l[C]=v[C])}return l};o("Object.assign",function(l){return l||c});var h=typeof Object.create=="function"?Object.create:function(l){function p(){}return p.prototype=l,new p},d;if(typeof Object.setPrototypeOf=="function")d=Object.setPrototypeOf;else{var f;e:{var g={a:!0},x={};try{x.__proto__=g,f=x.a;break e}catch{}f=!1}d=f?function(l,p){if(l.__proto__=p,l.__proto__!==p)throw new TypeError(l+" is not extensible");return l}:null}var w=d;function b(l,p){if(l.prototype=h(p.prototype),l.prototype.constructor=l,w)w(l,p);else for(var y in p)if(y!="prototype")if(Object.defineProperties){var v=Object.getOwnPropertyDescriptor(p,y);v&&Object.defineProperty(l,y,v)}else l[y]=p[y];l.ya=p.prototype}function $(){this.m=!1,this.j=null,this.i=void 0,this.h=1,this.v=this.s=0,this.l=null}function N(l){if(l.m)throw new TypeError("Generator is already running");l.m=!0}$.prototype.u=function(l){this.i=l};function k(l,p){l.l={ma:p,na:!0},l.h=l.s||l.v}$.prototype.return=function(l){this.l={return:l},this.h=this.v};function I(l,p,y){return l.h=y,{value:p}}function O(l){this.h=new $,this.i=l}function F(l,p){N(l.h);var y=l.h.j;return y?M(l,"return"in y?y.return:function(v){return{value:v,done:!0}},p,l.h.return):(l.h.return(p),B(l))}function M(l,p,y,v){try{var C=p.call(l.h.j,y);if(!(C instanceof Object))throw new TypeError("Iterator result "+C+" is not an object");if(!C.done)return l.h.m=!1,C;var T=C.value}catch(E){return l.h.j=null,k(l.h,E),B(l)}return l.h.j=null,v.call(l.h,T),B(l)}function B(l){for(;l.h.h;)try{var p=l.i(l.h);if(p)return l.h.m=!1,{value:p.value,done:!1}}catch(y){l.h.i=void 0,k(l.h,y)}if(l.h.m=!1,l.h.l){if(p=l.h.l,l.h.l=null,p.na)throw p.ma;return{value:p.return,done:!0}}return{value:void 0,done:!0}}function z(l){this.next=function(p){return N(l.h),l.h.j?p=M(l,l.h.j.next,p,l.h.u):(l.h.u(p),p=B(l)),p},this.throw=function(p){return N(l.h),l.h.j?p=M(l,l.h.j.throw,p,l.h.u):(k(l.h,p),p=B(l)),p},this.return=function(p){return F(l,p)},this[Symbol.iterator]=function(){return this}}function G(l){function p(v){return l.next(v)}function y(v){return l.throw(v)}return new Promise(function(v,C){function T(E){E.done?v(E.value):Promise.resolve(E.value).then(p,y).then(T,C)}T(l.next())})}function U(l){return G(new z(new O(l)))}o("Promise",function(l){function p(E){this.i=0,this.j=void 0,this.h=[],this.u=!1;var R=this.l();try{E(R.resolve,R.reject)}catch(D){R.reject(D)}}function y(){this.h=null}function v(E){return E instanceof p?E:new p(function(R){R(E)})}if(l)return l;y.prototype.i=function(E){if(this.h==null){this.h=[];var R=this;this.j(function(){R.m()})}this.h.push(E)};var C=s.setTimeout;y.prototype.j=function(E){C(E,0)},y.prototype.m=function(){for(;this.h&&this.h.length;){var E=this.h;this.h=[];for(var R=0;R<E.length;++R){var D=E[R];E[R]=null;try{D()}catch(V){this.l(V)}}}this.h=null},y.prototype.l=function(E){this.j(function(){throw E})},p.prototype.l=function(){function E(V){return function(H){D||(D=!0,V.call(R,H))}}var R=this,D=!1;return{resolve:E(this.I),reject:E(this.m)}},p.prototype.I=function(E){if(E===this)this.m(new TypeError("A Promise cannot resolve to itself"));else if(E instanceof p)this.L(E);else{e:switch(typeof E){case"object":var R=E!=null;break e;case"function":R=!0;break e;default:R=!1}R?this.F(E):this.s(E)}},p.prototype.F=function(E){var R=void 0;try{R=E.then}catch(D){this.m(D);return}typeof R=="function"?this.M(R,E):this.s(E)},p.prototype.m=function(E){this.v(2,E)},p.prototype.s=function(E){this.v(1,E)},p.prototype.v=function(E,R){if(this.i!=0)throw Error("Cannot settle("+E+", "+R+"): Promise already settled in state"+this.i);this.i=E,this.j=R,this.i===2&&this.K(),this.H()},p.prototype.K=function(){var E=this;C(function(){if(E.D()){var R=s.console;typeof R<"u"&&R.error(E.j)}},1)},p.prototype.D=function(){if(this.u)return!1;var E=s.CustomEvent,R=s.Event,D=s.dispatchEvent;return typeof D>"u"?!0:(typeof E=="function"?E=new E("unhandledrejection",{cancelable:!0}):typeof R=="function"?E=new R("unhandledrejection",{cancelable:!0}):(E=s.document.createEvent("CustomEvent"),E.initCustomEvent("unhandledrejection",!1,!0,E)),E.promise=this,E.reason=this.j,D(E))},p.prototype.H=function(){if(this.h!=null){for(var E=0;E<this.h.length;++E)T.i(this.h[E]);this.h=null}};var T=new y;return p.prototype.L=function(E){var R=this.l();E.T(R.resolve,R.reject)},p.prototype.M=function(E,R){var D=this.l();try{E.call(R,D.resolve,D.reject)}catch(V){D.reject(V)}},p.prototype.then=function(E,R){function D(j,X){return typeof j=="function"?function(ee){try{V(j(ee))}catch(ie){H(ie)}}:X}var V,H,q=new p(function(j,X){V=j,H=X});return this.T(D(E,V),D(R,H)),q},p.prototype.catch=function(E){return this.then(void 0,E)},p.prototype.T=function(E,R){function D(){switch(V.i){case 1:E(V.j);break;case 2:R(V.j);break;default:throw Error("Unexpected state: "+V.i)}}var V=this;this.h==null?T.i(D):this.h.push(D),this.u=!0},p.resolve=v,p.reject=function(E){return new p(function(R,D){D(E)})},p.race=function(E){return new p(function(R,D){for(var V=a(E),H=V.next();!H.done;H=V.next())v(H.value).T(R,D)})},p.all=function(E){var R=a(E),D=R.next();return D.done?v([]):new p(function(V,H){function q(ee){return function(ie){j[ee]=ie,X--,X==0&&V(j)}}var j=[],X=0;do j.push(void 0),X++,v(D.value).T(q(j.length-1),H),D=R.next();while(!D.done)})},p});function Q(l,p){l instanceof String&&(l+="");var y=0,v=!1,C={next:function(){if(!v&&y<l.length){var T=y++;return{value:p(T,l[T]),done:!1}}return v=!0,{done:!0,value:void 0}}};return C[Symbol.iterator]=function(){return C},C}o("Array.prototype.keys",function(l){return l||function(){return Q(this,function(p){return p})}}),o("Array.prototype.fill",function(l){return l||function(p,y,v){var C=this.length||0;for(0>y&&(y=Math.max(0,C+y)),(v==null||v>C)&&(v=C),v=Number(v),0>v&&(v=Math.max(0,C+v)),y=Number(y||0);y<v;y++)this[y]=p;return this}});function J(l){return l||Array.prototype.fill}o("Int8Array.prototype.fill",J),o("Uint8Array.prototype.fill",J),o("Uint8ClampedArray.prototype.fill",J),o("Int16Array.prototype.fill",J),o("Uint16Array.prototype.fill",J),o("Int32Array.prototype.fill",J),o("Uint32Array.prototype.fill",J),o("Float32Array.prototype.fill",J),o("Float64Array.prototype.fill",J),o("Object.is",function(l){return l||function(p,y){return p===y?p!==0||1/p===1/y:p!==p&&y!==y}}),o("Array.prototype.includes",function(l){return l||function(p,y){var v=this;v instanceof String&&(v=String(v));var C=v.length;for(y=y||0,0>y&&(y=Math.max(y+C,0));y<C;y++){var T=v[y];if(T===p||Object.is(T,p))return!0}return!1}}),o("String.prototype.includes",function(l){return l||function(p,y){if(this==null)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(p instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return this.indexOf(p,y||0)!==-1}});var se=this||self;function oe(l,p){l=l.split(".");var y=se;l[0]in y||typeof y.execScript>"u"||y.execScript("var "+l[0]);for(var v;l.length&&(v=l.shift());)l.length||p===void 0?y[v]&&y[v]!==Object.prototype[v]?y=y[v]:y=y[v]={}:y[v]=p}function le(l){var p;e:{if((p=se.navigator)&&(p=p.userAgent))break e;p=""}return p.indexOf(l)!=-1}var ge=Array.prototype.map?function(l,p){return Array.prototype.map.call(l,p,void 0)}:function(l,p){for(var y=l.length,v=Array(y),C=typeof l=="string"?l.split(""):l,T=0;T<y;T++)T in C&&(v[T]=p.call(void 0,C[T],T,l));return v},$e={},Ce=null;function at(l){var p=l.length,y=3*p/4;y%3?y=Math.floor(y):"=.".indexOf(l[p-1])!=-1&&(y="=.".indexOf(l[p-2])!=-1?y-2:y-1);var v=new Uint8Array(y),C=0;return vt(l,function(T){v[C++]=T}),C!==y?v.subarray(0,C):v}function vt(l,p){function y(D){for(;v<l.length;){var V=l.charAt(v++),H=Ce[V];if(H!=null)return H;if(!/^[\s\xa0]*$/.test(V))throw Error("Unknown base64 encoding at char: "+V)}return D}mt();for(var v=0;;){var C=y(-1),T=y(0),E=y(64),R=y(64);if(R===64&&C===-1)break;p(C<<2|T>>4),E!=64&&(p(T<<4&240|E>>2),R!=64&&p(E<<6&192|R))}}function mt(){if(!Ce){Ce={};for(var l="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),p=["+/=","+/","-_=","-_.","-_"],y=0;5>y;y++){var v=l.concat(p[y].split(""));$e[y]=v;for(var C=0;C<v.length;C++){var T=v[C];Ce[T]===void 0&&(Ce[T]=C)}}}}var Je=typeof Uint8Array<"u",gt=!(le("Trident")||le("MSIE"))&&typeof se.btoa=="function";function ut(l){if(!gt){var p;p===void 0&&(p=0),mt(),p=$e[p];for(var y=Array(Math.floor(l.length/3)),v=p[64]||"",C=0,T=0;C<l.length-2;C+=3){var E=l[C],R=l[C+1],D=l[C+2],V=p[E>>2];E=p[(E&3)<<4|R>>4],R=p[(R&15)<<2|D>>6],D=p[D&63],y[T++]=V+E+R+D}switch(V=0,D=v,l.length-C){case 2:V=l[C+1],D=p[(V&15)<<2]||v;case 1:l=l[C],y[T]=p[l>>2]+p[(l&3)<<4|V>>4]+D+v}return y.join("")}for(p="";10240<l.length;)p+=String.fromCharCode.apply(null,l.subarray(0,10240)),l=l.subarray(10240);return p+=String.fromCharCode.apply(null,l),btoa(p)}var ct=RegExp("[-_.]","g");function pn(l){switch(l){case"-":return"+";case"_":return"/";case".":return"=";default:return""}}function mn(l){if(!gt)return at(l);ct.test(l)&&(l=l.replace(ct,pn)),l=atob(l);for(var p=new Uint8Array(l.length),y=0;y<l.length;y++)p[y]=l.charCodeAt(y);return p}var Ln;function Bn(){return Ln||(Ln=new Uint8Array(0))}var jt={},zu=typeof Uint8Array.prototype.slice=="function",we=0,_e=0;function $o(l){var p=0>l;l=Math.abs(l);var y=l>>>0;l=Math.floor((l-y)/4294967296),p&&(y=a(So(y,l)),p=y.next().value,l=y.next().value,y=p),we=y>>>0,_e=l>>>0}var Wu=typeof BigInt=="function";function So(l,p){return p=~p,l?l=~l+1:p+=1,[l,p]}function Co(l,p){this.i=l>>>0,this.h=p>>>0}function To(l){if(!l)return No||(No=new Co(0,0));if(!/^-?\d+$/.test(l))return null;if(16>l.length)$o(Number(l));else if(Wu)l=BigInt(l),we=Number(l&BigInt(4294967295))>>>0,_e=Number(l>>BigInt(32)&BigInt(4294967295));else{var p=+(l[0]==="-");_e=we=0;for(var y=l.length,v=p,C=(y-p)%6+p;C<=y;v=C,C+=6)v=Number(l.slice(v,C)),_e*=1e6,we=1e6*we+v,4294967296<=we&&(_e+=we/4294967296|0,we%=4294967296);p&&(p=a(So(we,_e)),l=p.next().value,p=p.next().value,we=l,_e=p)}return new Co(we,_e)}var No;function Eo(l,p){return Error("Invalid wire type: "+l+" (at position "+p+")")}function Br(){return Error("Failed to read varint, encoding is invalid.")}function Io(l,p){return Error("Tried to read past the end of the data "+p+" > "+l)}function kt(){throw Error("Invalid UTF8")}function ko(l,p){return p=String.fromCharCode.apply(null,p),l==null?p:l+p}var qn=void 0,Mr,Gu=typeof TextDecoder<"u",Ro,ju=typeof TextEncoder<"u",_o;function Ao(l){if(l!==jt)throw Error("illegal external caller")}function gn(l,p){if(Ao(p),this.V=l,l!=null&&l.length===0)throw Error("ByteString should be constructed with non-empty values")}function Vr(){return _o||(_o=new gn(null,jt))}function Oo(l){Ao(jt);var p=l.V;return p=p==null||Je&&p!=null&&p instanceof Uint8Array?p:typeof p=="string"?mn(p):null,p==null?p:l.V=p}function Hu(l){if(typeof l=="string")return{buffer:mn(l),C:!1};if(Array.isArray(l))return{buffer:new Uint8Array(l),C:!1};if(l.constructor===Uint8Array)return{buffer:l,C:!1};if(l.constructor===ArrayBuffer)return{buffer:new Uint8Array(l),C:!1};if(l.constructor===gn)return{buffer:Oo(l)||Bn(),C:!0};if(l instanceof Uint8Array)return{buffer:new Uint8Array(l.buffer,l.byteOffset,l.byteLength),C:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}function Do(l,p){this.i=null,this.m=!1,this.h=this.j=this.l=0,Ur(this,l,p)}function Ur(l,p,y){y=y===void 0?{}:y,l.S=y.S===void 0?!1:y.S,p&&(p=Hu(p),l.i=p.buffer,l.m=p.C,l.l=0,l.j=l.i.length,l.h=l.l)}Do.prototype.reset=function(){this.h=this.l};function Rt(l,p){if(l.h=p,p>l.j)throw Io(l.j,p)}function yn(l){var p=l.i,y=l.h,v=p[y++],C=v&127;if(v&128&&(v=p[y++],C|=(v&127)<<7,v&128&&(v=p[y++],C|=(v&127)<<14,v&128&&(v=p[y++],C|=(v&127)<<21,v&128&&(v=p[y++],C|=v<<28,v&128&&p[y++]&128&&p[y++]&128&&p[y++]&128&&p[y++]&128&&p[y++]&128)))))throw Br();return Rt(l,y),C}function Fo(l,p){if(0>p)throw Error("Tried to read a negative byte length: "+p);var y=l.h,v=y+p;if(v>l.j)throw Io(p,l.j-y);return l.h=v,y}var Po=[];function zr(){this.h=[]}zr.prototype.length=function(){return this.h.length},zr.prototype.end=function(){var l=this.h;return this.h=[],l};function Lo(l,p,y){for(;0<y||127<p;)l.h.push(p&127|128),p=(p>>>7|y<<25)>>>0,y>>>=7;l.h.push(p)}function _t(l,p){for(;127<p;)l.h.push(p&127|128),p>>>=7;l.h.push(p)}function Wr(l,p){if(Po.length){var y=Po.pop();Ur(y,l,p),l=y}else l=new Do(l,p);this.h=l,this.j=this.h.h,this.i=this.l=-1,this.setOptions(p)}Wr.prototype.setOptions=function(l){l=l===void 0?{}:l,this.ca=l.ca===void 0?!1:l.ca},Wr.prototype.reset=function(){this.h.reset(),this.j=this.h.h,this.i=this.l=-1};function Bo(l){var p=l.h;if(p.h==p.j)return!1;l.j=l.h.h;var y=yn(l.h)>>>0;if(p=y>>>3,y&=7,!(0<=y&&5>=y))throw Eo(y,l.j);if(1>p)throw Error("Invalid field number: "+p+" (at position "+l.j+")");return l.l=p,l.i=y,!0}function Yn(l){switch(l.i){case 0:if(l.i!=0)Yn(l);else e:{l=l.h;for(var p=l.h,y=p+10,v=l.i;p<y;)if(!(v[p++]&128)){Rt(l,p);break e}throw Br()}break;case 1:l=l.h,Rt(l,l.h+8);break;case 2:l.i!=2?Yn(l):(p=yn(l.h)>>>0,l=l.h,Rt(l,l.h+p));break;case 5:l=l.h,Rt(l,l.h+4);break;case 3:p=l.l;do{if(!Bo(l))throw Error("Unmatched start-group tag: stream EOF");if(l.i==4){if(l.l!=p)throw Error("Unmatched end-group tag");break}Yn(l)}while(!0);break;default:throw Eo(l.i,l.j)}}var Qn=[];function Ku(){this.j=[],this.i=0,this.h=new zr}function Ht(l,p){p.length!==0&&(l.j.push(p),l.i+=p.length)}function Xu(l,p){if(p=p.R){Ht(l,l.h.end());for(var y=0;y<p.length;y++)Ht(l,Oo(p[y])||Bn())}}var nt=typeof Symbol=="function"&&typeof Symbol()=="symbol"?Symbol():void 0;function At(l,p){return nt?l[nt]|=p:l.A!==void 0?l.A|=p:(Object.defineProperties(l,{A:{value:p,configurable:!0,writable:!0,enumerable:!1}}),p)}function Mo(l,p){nt?l[nt]&&(l[nt]&=~p):l.A!==void 0&&(l.A&=~p)}function ye(l){var p;return nt?p=l[nt]:p=l.A,p??0}function qe(l,p){nt?l[nt]=p:l.A!==void 0?l.A=p:Object.defineProperties(l,{A:{value:p,configurable:!0,writable:!0,enumerable:!1}})}function Gr(l){return At(l,1),l}function qu(l,p){qe(p,(l|0)&-51)}function Zn(l,p){qe(p,(l|18)&-41)}var jr={};function Jn(l){return l!==null&&typeof l=="object"&&!Array.isArray(l)&&l.constructor===Object}var xn,Vo=[];qe(Vo,23),xn=Object.freeze(Vo);function Hr(l){if(ye(l.o)&2)throw Error("Cannot mutate an immutable Message")}function Kr(l){var p=l.length;(p=p?l[p-1]:void 0)&&Jn(p)?p.g=1:(p={},l.push((p.g=1,p)))}function Uo(l){var p=l.i+l.G;return l.B||(l.B=l.o[p]={})}function Ke(l,p){return p===-1?null:p>=l.i?l.B?l.B[p]:void 0:l.o[p+l.G]}function Ye(l,p,y,v){Hr(l),bn(l,p,y,v)}function bn(l,p,y,v){l.j&&(l.j=void 0),p>=l.i||v?Uo(l)[p]=y:(l.o[p+l.G]=y,(l=l.B)&&p in l&&delete l[p])}function Xr(l,p,y,v){var C=Ke(l,p);Array.isArray(C)||(C=xn);var T=ye(C);if(T&1||Gr(C),v)T&2||At(C,2),y&1||Object.freeze(C);else{v=!(y&2);var E=T&2;y&1||!E?v&&T&16&&!E&&Mo(C,16):(C=Gr(Array.prototype.slice.call(C)),bn(l,p,C))}return C}function qr(l,p){var y=Ke(l,p),v=y==null?y:typeof y=="number"||y==="NaN"||y==="Infinity"||y==="-Infinity"?Number(y):void 0;return v!=null&&v!==y&&bn(l,p,v),v}function zo(l,p,y,v,C){l.h||(l.h={});var T=l.h[y],E=Xr(l,y,3,C);if(!T){var R=E;T=[];var D=!!(ye(l.o)&16);E=!!(ye(R)&2);var V=R;!C&&E&&(R=Array.prototype.slice.call(R));for(var H=E,q=0;q<R.length;q++){var j=R[q],X=p,ee=!1;if(ee=ee===void 0?!1:ee,j=Array.isArray(j)?new X(j):ee?new X:void 0,j!==void 0){X=j.o;var ie=ee=ye(X);E&&(ie|=2),D&&(ie|=16),ie!=ee&&qe(X,ie),X=ie,H=H||!!(2&X),T.push(j)}}return l.h[y]=T,D=ye(R),p=D|33,p=H?p&-9:p|8,D!=p&&(H=R,Object.isFrozen(H)&&(H=Array.prototype.slice.call(H)),qe(H,p),R=H),V!==R&&bn(l,y,R),(C||v&&E)&&At(T,2),v&&Object.freeze(T),T}return C||(C=Object.isFrozen(T),v&&!C?Object.freeze(T):!v&&C&&(T=Array.prototype.slice.call(T),l.h[y]=T)),T}function wr(l,p,y){var v=!!(ye(l.o)&2);if(p=zo(l,p,y,v,v),l=Xr(l,y,3,v),!(v||ye(l)&8)){for(v=0;v<p.length;v++){if(y=p[v],ye(y.o)&2){var C=Xo(y,!1);C.j=y}else C=y;y!==C&&(p[v]=C,l[v]=C.o)}At(l,8)}return p}function Qe(l,p,y){if(y!=null&&typeof y!="number")throw Error("Value of float/double field must be a number|null|undefined, found "+typeof y+": "+y);Ye(l,p,y)}function Wo(l,p,y,v,C){Hr(l);var T=zo(l,y,p,!1,!1);return y=v??new y,l=Xr(l,p,2,!1),C!=null?(T.splice(C,0,y),l.splice(C,0,y.o)):(T.push(y),l.push(y.o)),y.C()&&Mo(l,8),y}function er(l,p){return l??p}function Ze(l,p,y){return y=y===void 0?0:y,er(qr(l,p),y)}var tr;function Yu(l){switch(typeof l){case"number":return isFinite(l)?l:String(l);case"object":if(l)if(Array.isArray(l)){if(ye(l)&128)return l=Array.prototype.slice.call(l),Kr(l),l}else{if(Je&&l!=null&&l instanceof Uint8Array)return ut(l);if(l instanceof gn){var p=l.V;return p==null?"":typeof p=="string"?p:l.V=ut(p)}}}return l}function Go(l,p,y,v){if(l!=null){if(Array.isArray(l))l=Yr(l,p,y,v!==void 0);else if(Jn(l)){var C={},T;for(T in l)C[T]=Go(l[T],p,y,v);l=C}else l=p(l,v);return l}}function Yr(l,p,y,v){var C=ye(l);v=v?!!(C&16):void 0,l=Array.prototype.slice.call(l);for(var T=0;T<l.length;T++)l[T]=Go(l[T],p,y,v);return y(C,l),l}function Qu(l){return l.ja===jr?l.toJSON():Yu(l)}function Zu(l,p){l&128&&Kr(p)}function jo(l,p,y){if(y=y===void 0?Zn:y,l!=null){if(Je&&l instanceof Uint8Array)return l.length?new gn(new Uint8Array(l),jt):Vr();if(Array.isArray(l)){var v=ye(l);return v&2?l:p&&!(v&32)&&(v&16||v===0)?(qe(l,v|2),l):(l=Yr(l,jo,v&4?Zn:y,!0),p=ye(l),p&4&&p&2&&Object.freeze(l),l)}return l.ja===jr?Ko(l):l}}function Ho(l,p,y,v,C,T,E){if(l=l.h&&l.h[y]){if(v=ye(l),v&2?v=l:(T=ge(l,Ko),Zn(v,T),Object.freeze(T),v=T),Hr(p),E=v==null?xn:Gr([]),v!=null){for(T=!!v.length,l=0;l<v.length;l++){var R=v[l];T=T&&!(ye(R.o)&2),E[l]=R.o}T=(T?8:0)|1,l=ye(E),(l&T)!==T&&(Object.isFrozen(E)&&(E=Array.prototype.slice.call(E)),qe(E,l|T)),p.h||(p.h={}),p.h[y]=v}else p.h&&(p.h[y]=void 0);bn(p,y,E,C)}else Ye(p,y,jo(v,T,E),C)}function Ko(l){return ye(l.o)&2||(l=Xo(l,!0),At(l.o,2)),l}function Xo(l,p){var y=l.o,v=[];At(v,16);var C=l.constructor.h;if(C&&v.push(C),C=l.B,C){v.length=y.length,v.fill(void 0,v.length,y.length);var T={};v[v.length-1]=T}ye(y)&128&&Kr(v),p=p||l.C()?Zn:qu,T=l.constructor,tr=v,v=new T(v),tr=void 0,l.R&&(v.R=l.R.slice()),T=!!(ye(y)&16);for(var E=C?y.length-1:y.length,R=0;R<E;R++)Ho(l,v,R-l.G,y[R],!1,T,p);if(C)for(var D in C)Ho(l,v,+D,C[D],!0,T,p);return v}function Oe(l,p,y){l==null&&(l=tr),tr=void 0;var v=this.constructor.i||0,C=0<v,T=this.constructor.h,E=!1;if(l==null){l=T?[T]:[];var R=48,D=!0;C&&(v=0,R|=128),qe(l,R)}else{if(!Array.isArray(l)||T&&T!==l[0])throw Error();var V=R=At(l,0);if((D=(16&V)!==0)&&((E=(32&V)!==0)||(V|=32)),C){if(128&V)v=0;else if(0<l.length){var H=l[l.length-1];if(Jn(H)&&"g"in H){v=0,V|=128,delete H.g;var q=!0,j;for(j in H){q=!1;break}q&&l.pop()}}}else if(128&V)throw Error();R!==V&&qe(l,V)}this.G=(T?0:-1)-v,this.h=void 0,this.o=l;e:{if(T=this.o.length,v=T-1,T&&(T=this.o[v],Jn(T))){this.B=T,this.i=v-this.G;break e}p!==void 0&&-1<p?(this.i=Math.max(p,v+1-this.G),this.B=void 0):this.i=Number.MAX_VALUE}if(!C&&this.B&&"g"in this.B)throw Error('Unexpected "g" flag in sparse object of message that is not a group type.');if(y){p=D&&!E&&!0,C=this.i;var X;for(D=0;D<y.length;D++)E=y[D],E<C?(E+=this.G,(v=l[E])?qo(v,p):l[E]=xn):(X||(X=Uo(this)),(v=X[E])?qo(v,p):X[E]=xn)}}Oe.prototype.toJSON=function(){return Yr(this.o,Qu,Zu)},Oe.prototype.C=function(){return!!(ye(this.o)&2)};function qo(l,p){if(Array.isArray(l)){var y=ye(l),v=1;!p||y&2||(v|=16),(y&v)!==v&&qe(l,y|v)}}Oe.prototype.ja=jr,Oe.prototype.toString=function(){return this.o.toString()};function Yo(l,p,y){if(y){var v={},C;for(C in y){var T=y[C],E=T.qa;E||(v.J=T.wa||T.oa.W,T.ia?(v.aa=ti(T.ia),E=function(R){return function(D,V,H){return R.J(D,V,H,R.aa)}}(v)):T.ka?(v.Z=ni(T.da.P,T.ka),E=function(R){return function(D,V,H){return R.J(D,V,H,R.Z)}}(v)):E=v.J,T.qa=E),E(p,l,T.da),v={J:v.J,aa:v.aa,Z:v.Z}}}Xu(p,l)}var nr=Symbol();function Qo(l,p,y){return l[nr]||(l[nr]=function(v,C){return p(v,C,y)})}function Zo(l){var p=l[nr];if(!p){var y=Zr(l);p=function(v,C){return ri(v,C,y)},l[nr]=p}return p}function Ju(l){var p=l.ia;if(p)return Zo(p);if(p=l.va)return Qo(l.da.P,p,l.ka)}function ec(l){var p=Ju(l),y=l.da,v=l.oa.U;return p?function(C,T){return v(C,T,y,p)}:function(C,T){return v(C,T,y)}}function Jo(l,p){var y=l[p];return typeof y=="function"&&y.length===0&&(y=y(),l[p]=y),Array.isArray(y)&&(wn in y||vn in y||0<y.length&&typeof y[0]=="function")?y:void 0}function ei(l,p,y,v,C,T){p.P=l[0];var E=1;if(l.length>E&&typeof l[E]!="number"){var R=l[E++];y(p,R)}for(;E<l.length;){y=l[E++];for(var D=E+1;D<l.length&&typeof l[D]!="number";)D++;switch(R=l[E++],D-=E,D){case 0:v(p,y,R);break;case 1:(D=Jo(l,E))?(E++,C(p,y,R,D)):v(p,y,R,l[E++]);break;case 2:D=E++,D=Jo(l,D),C(p,y,R,D,l[E++]);break;case 3:T(p,y,R,l[E++],l[E++],l[E++]);break;case 4:T(p,y,R,l[E++],l[E++],l[E++],l[E++]);break;default:throw Error("unexpected number of binary field arguments: "+D)}}return p}var rr=Symbol();function ti(l){var p=l[rr];if(!p){var y=Qr(l);p=function(v,C){return si(v,C,y)},l[rr]=p}return p}function ni(l,p){var y=l[rr];return y||(y=function(v,C){return Yo(v,C,p)},l[rr]=y),y}var vn=Symbol();function tc(l,p){l.push(p)}function nc(l,p,y){l.push(p,y.W)}function rc(l,p,y,v){var C=ti(v),T=Qr(v).P,E=y.W;l.push(p,function(R,D,V){return E(R,D,V,T,C)})}function sc(l,p,y,v,C,T){var E=ni(v,T),R=y.W;l.push(p,function(D,V,H){return R(D,V,H,v,E)})}function Qr(l){var p=l[vn];return p||(p=ei(l,l[vn]=[],tc,nc,rc,sc),wn in l&&vn in l&&(l.length=0),p)}var wn=Symbol();function oc(l,p){l[0]=p}function ic(l,p,y,v){var C=y.U;l[p]=v?function(T,E,R){return C(T,E,R,v)}:C}function ac(l,p,y,v,C){var T=y.U,E=Zo(v),R=Zr(v).P;l[p]=function(D,V,H){return T(D,V,H,R,E,C)}}function uc(l,p,y,v,C,T,E){var R=y.U,D=Qo(v,C,T);l[p]=function(V,H,q){return R(V,H,q,v,D,E)}}function Zr(l){var p=l[wn];return p||(p=ei(l,l[wn]={},oc,ic,ac,uc),wn in l&&vn in l&&(l.length=0),p)}function ri(l,p,y){for(;Bo(p)&&p.i!=4;){var v=p.l,C=y[v];if(!C){var T=y[0];T&&(T=T[v])&&(C=y[v]=ec(T))}if(!C||!C(p,l,v)){C=p,v=l,T=C.j,Yn(C);var E=C;if(!E.ca){if(C=E.h.h-T,E.h.h=T,E=E.h,C==0)C=Vr();else{if(T=Fo(E,C),E.S&&E.m)C=E.i.subarray(T,T+C);else{E=E.i;var R=T;C=T+C,C=R===C?Bn():zu?E.slice(R,C):new Uint8Array(E.subarray(R,C))}C=C.length==0?Vr():new gn(C,jt)}(T=v.R)?T.push(C):v.R=[C]}}}return l}function si(l,p,y){for(var v=y.length,C=v%2==1,T=C?1:0;T<v;T+=2)(0,y[T+1])(p,l,y[T]);Yo(l,p,C?y[0]:void 0)}function $n(l,p){return{U:l,W:p}}var Xe=$n(function(l,p,y){if(l.i!==5)return!1;l=l.h;var v=l.i,C=l.h,T=v[C],E=v[C+1],R=v[C+2];return v=v[C+3],Rt(l,l.h+4),E=(T<<0|E<<8|R<<16|v<<24)>>>0,l=2*(E>>31)+1,T=E>>>23&255,E&=8388607,Ye(p,y,T==255?E?NaN:1/0*l:T==0?l*Math.pow(2,-149)*E:l*Math.pow(2,T-150)*(E+Math.pow(2,23))),!0},function(l,p,y){if(p=qr(p,y),p!=null){_t(l.h,8*y+5),l=l.h;var v=+p;v===0?0<1/v?we=_e=0:(_e=0,we=2147483648):isNaN(v)?(_e=0,we=2147483647):(v=(y=0>v?-2147483648:0)?-v:v,34028234663852886e22<v?(_e=0,we=(y|2139095040)>>>0):11754943508222875e-54>v?(v=Math.round(v/Math.pow(2,-149)),_e=0,we=(y|v)>>>0):(p=Math.floor(Math.log(v)/Math.LN2),v*=Math.pow(2,-p),v=Math.round(8388608*v),16777216<=v&&++p,_e=0,we=(y|p+127<<23|v&8388607)>>>0)),y=we,l.h.push(y>>>0&255),l.h.push(y>>>8&255),l.h.push(y>>>16&255),l.h.push(y>>>24&255)}}),cc=$n(function(l,p,y){if(l.i!==0)return!1;var v=l.h,C=0,T=l=0,E=v.i,R=v.h;do{var D=E[R++];C|=(D&127)<<T,T+=7}while(32>T&&D&128);for(32<T&&(l|=(D&127)>>4),T=3;32>T&&D&128;T+=7)D=E[R++],l|=(D&127)<<T;if(Rt(v,R),128>D)v=C>>>0,D=l>>>0,(l=D&2147483648)&&(v=~v+1>>>0,D=~D>>>0,v==0&&(D=D+1>>>0)),v=4294967296*D+(v>>>0);else throw Br();return Ye(p,y,l?-v:v),!0},function(l,p,y){p=Ke(p,y),p!=null&&(typeof p=="string"&&To(p),p!=null&&(_t(l.h,8*y),typeof p=="number"?(l=l.h,$o(p),Lo(l,we,_e)):(y=To(p),Lo(l.h,y.i,y.h))))}),lc=$n(function(l,p,y){return l.i!==0?!1:(Ye(p,y,yn(l.h)),!0)},function(l,p,y){if(p=Ke(p,y),p!=null&&p!=null)if(_t(l.h,8*y),l=l.h,y=p,0<=y)_t(l,y);else{for(p=0;9>p;p++)l.h.push(y&127|128),y>>=7;l.h.push(1)}}),oi=$n(function(l,p,y){if(l.i!==2)return!1;var v=yn(l.h)>>>0;l=l.h;var C=Fo(l,v);if(l=l.i,Gu){var T=l,E;(E=Mr)||(E=Mr=new TextDecoder("utf-8",{fatal:!0})),l=C+v,T=C===0&&l===T.length?T:T.subarray(C,l);try{var R=E.decode(T)}catch(q){if(qn===void 0){try{E.decode(new Uint8Array([128]))}catch{}try{E.decode(new Uint8Array([97])),qn=!0}catch{qn=!1}}throw!qn&&(Mr=void 0),q}}else{R=C,v=R+v,C=[];for(var D=null,V,H;R<v;)V=l[R++],128>V?C.push(V):224>V?R>=v?kt():(H=l[R++],194>V||(H&192)!==128?(R--,kt()):C.push((V&31)<<6|H&63)):240>V?R>=v-1?kt():(H=l[R++],(H&192)!==128||V===224&&160>H||V===237&&160<=H||((T=l[R++])&192)!==128?(R--,kt()):C.push((V&15)<<12|(H&63)<<6|T&63)):244>=V?R>=v-2?kt():(H=l[R++],(H&192)!==128||(V<<28)+(H-144)>>30||((T=l[R++])&192)!==128||((E=l[R++])&192)!==128?(R--,kt()):(V=(V&7)<<18|(H&63)<<12|(T&63)<<6|E&63,V-=65536,C.push((V>>10&1023)+55296,(V&1023)+56320))):kt(),8192<=C.length&&(D=ko(D,C),C.length=0);R=ko(D,C)}return Ye(p,y,R),!0},function(l,p,y){if(p=Ke(p,y),p!=null){var v=!1;if(v=v===void 0?!1:v,ju){if(v&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(p))throw Error("Found an unpaired surrogate");p=(Ro||(Ro=new TextEncoder)).encode(p)}else{for(var C=0,T=new Uint8Array(3*p.length),E=0;E<p.length;E++){var R=p.charCodeAt(E);if(128>R)T[C++]=R;else{if(2048>R)T[C++]=R>>6|192;else{if(55296<=R&&57343>=R){if(56319>=R&&E<p.length){var D=p.charCodeAt(++E);if(56320<=D&&57343>=D){R=1024*(R-55296)+D-56320+65536,T[C++]=R>>18|240,T[C++]=R>>12&63|128,T[C++]=R>>6&63|128,T[C++]=R&63|128;continue}else E--}if(v)throw Error("Found an unpaired surrogate");R=65533}T[C++]=R>>12|224,T[C++]=R>>6&63|128}T[C++]=R&63|128}}p=C===T.length?T:T.subarray(0,C)}_t(l.h,8*y+2),_t(l.h,p.length),Ht(l,l.h.end()),Ht(l,p)}}),ii=$n(function(l,p,y,v,C){if(l.i!==2)return!1;p=Wo(p,y,v),y=l.h.j,v=yn(l.h)>>>0;var T=l.h.h+v,E=T-y;if(0>=E&&(l.h.j=T,C(p,l,void 0,void 0,void 0),E=T-l.h.h),E)throw Error("Message parsing ended unexpectedly. Expected to read "+(v+" bytes, instead read "+(v-E)+" bytes, either the data ended unexpectedly or the message misreported its own length"));return l.h.h=T,l.h.j=y,!0},function(l,p,y,v,C){if(p=wr(p,v,y),p!=null)for(v=0;v<p.length;v++){var T=l;_t(T.h,8*y+2);var E=T.h.end();Ht(T,E),E.push(T.i),T=E,C(p[v],l),E=l;var R=T.pop();for(R=E.i+E.h.length()-R;127<R;)T.push(R&127|128),R>>>=7,E.i++;T.push(R),E.i++}});function Jr(l){return function(p,y){e:{if(Qn.length){var v=Qn.pop();v.setOptions(y),Ur(v.h,p,y),p=v}else p=new Wr(p,y);try{var C=Zr(l),T=ri(new C.P,p,C);break e}finally{C=p.h,C.i=null,C.m=!1,C.l=0,C.j=0,C.h=0,C.S=!1,p.l=-1,p.i=-1,100>Qn.length&&Qn.push(p)}T=void 0}return T}}function es(l){return function(){var p=new Ku;si(this,p,Qr(l)),Ht(p,p.h.end());for(var y=new Uint8Array(p.i),v=p.j,C=v.length,T=0,E=0;E<C;E++){var R=v[E];y.set(R,T),T+=R.length}return p.j=[y],y}}function Kt(l){Oe.call(this,l)}b(Kt,Oe);var ai=[Kt,1,lc,2,Xe,3,oi,4,oi];Kt.prototype.l=es(ai);function ts(l){Oe.call(this,l,-1,hc)}b(ts,Oe),ts.prototype.addClassification=function(l,p){return Wo(this,1,Kt,l,p),this};var hc=[1],ha=Jr([ts,1,ii,ai]);function Zt(l){Oe.call(this,l)}b(Zt,Oe);var ui=[Zt,1,Xe,2,Xe,3,Xe,4,Xe,5,Xe];Zt.prototype.l=es(ui);function ci(l){Oe.call(this,l,-1,dc)}b(ci,Oe);var dc=[1],da=Jr([ci,1,ii,ui]);function sr(l){Oe.call(this,l)}b(sr,Oe);var li=[sr,1,Xe,2,Xe,3,Xe,4,Xe,5,Xe,6,cc],fc=Jr(li);sr.prototype.l=es(li);function hi(l,p,y){if(y=l.createShader(y===0?l.VERTEX_SHADER:l.FRAGMENT_SHADER),l.shaderSource(y,p),l.compileShader(y),!l.getShaderParameter(y,l.COMPILE_STATUS))throw Error(`Could not compile WebGL shader.

`+l.getShaderInfoLog(y));return y}function fa(l){return wr(l,Kt,1).map(function(p){var y=Ke(p,1);return{index:y??0,score:Ze(p,2),label:Ke(p,3)!=null?er(Ke(p,3),""):void 0,displayName:Ke(p,4)!=null?er(Ke(p,4),""):void 0}})}function pa(l){return{x:Ze(l,1),y:Ze(l,2),z:Ze(l,3),visibility:qr(l,4)!=null?Ze(l,4):void 0}}function Fs(l){return l.map(function(p){return wr(da(p),Zt,1).map(pa)})}function Ps(l,p){this.i=l,this.h=p,this.m=0}function ma(l,p,y){return pc(l,p),typeof l.h.canvas.transferToImageBitmap=="function"?Promise.resolve(l.h.canvas.transferToImageBitmap()):y?Promise.resolve(l.h.canvas):typeof createImageBitmap=="function"?createImageBitmap(l.h.canvas):(l.j===void 0&&(l.j=document.createElement("canvas")),new Promise(function(v){l.j.height=l.h.canvas.height,l.j.width=l.h.canvas.width,l.j.getContext("2d",{}).drawImage(l.h.canvas,0,0,l.h.canvas.width,l.h.canvas.height),v(l.j)}))}function pc(l,p){var y=l.h;if(l.s===void 0){var v=hi(y,`
  attribute vec2 aVertex;
  attribute vec2 aTex;
  varying vec2 vTex;
  void main(void) {
    gl_Position = vec4(aVertex, 0.0, 1.0);
    vTex = aTex;
  }`,0),C=hi(y,`
  precision mediump float;
  varying vec2 vTex;
  uniform sampler2D sampler0;
  void main(){
    gl_FragColor = texture2D(sampler0, vTex);
  }`,1),T=y.createProgram();if(y.attachShader(T,v),y.attachShader(T,C),y.linkProgram(T),!y.getProgramParameter(T,y.LINK_STATUS))throw Error(`Could not compile WebGL program.

`+y.getProgramInfoLog(T));v=l.s=T,y.useProgram(v),C=y.getUniformLocation(v,"sampler0"),l.l={O:y.getAttribLocation(v,"aVertex"),N:y.getAttribLocation(v,"aTex"),xa:C},l.v=y.createBuffer(),y.bindBuffer(y.ARRAY_BUFFER,l.v),y.enableVertexAttribArray(l.l.O),y.vertexAttribPointer(l.l.O,2,y.FLOAT,!1,0,0),y.bufferData(y.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),y.STATIC_DRAW),y.bindBuffer(y.ARRAY_BUFFER,null),l.u=y.createBuffer(),y.bindBuffer(y.ARRAY_BUFFER,l.u),y.enableVertexAttribArray(l.l.N),y.vertexAttribPointer(l.l.N,2,y.FLOAT,!1,0,0),y.bufferData(y.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),y.STATIC_DRAW),y.bindBuffer(y.ARRAY_BUFFER,null),y.uniform1i(C,0)}v=l.l,y.useProgram(l.s),y.canvas.width=p.width,y.canvas.height=p.height,y.viewport(0,0,p.width,p.height),y.activeTexture(y.TEXTURE0),l.i.bindTexture2d(p.glName),y.enableVertexAttribArray(v.O),y.bindBuffer(y.ARRAY_BUFFER,l.v),y.vertexAttribPointer(v.O,2,y.FLOAT,!1,0,0),y.enableVertexAttribArray(v.N),y.bindBuffer(y.ARRAY_BUFFER,l.u),y.vertexAttribPointer(v.N,2,y.FLOAT,!1,0,0),y.bindFramebuffer(y.DRAW_FRAMEBUFFER?y.DRAW_FRAMEBUFFER:y.FRAMEBUFFER,null),y.clearColor(0,0,0,0),y.clear(y.COLOR_BUFFER_BIT),y.colorMask(!0,!0,!0,!0),y.drawArrays(y.TRIANGLE_FAN,0,4),y.disableVertexAttribArray(v.O),y.disableVertexAttribArray(v.N),y.bindBuffer(y.ARRAY_BUFFER,null),l.i.bindTexture2d(0)}function mc(l){this.h=l}var gc=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function ga(l,p){return p+l}function ya(l,p){window[l]=p}function yc(l){var p=document.createElement("script");return p.setAttribute("src",l),p.setAttribute("crossorigin","anonymous"),new Promise(function(y){p.addEventListener("load",function(){y()},!1),p.addEventListener("error",function(){y()},!1),document.body.appendChild(p)})}function di(){return U(function(l){switch(l.h){case 1:return l.s=2,I(l,WebAssembly.instantiate(gc),4);case 4:l.h=3,l.s=0;break;case 2:return l.s=0,l.l=null,l.return(!1);case 3:return l.return(!0)}})}function fi(l){if(this.h=l,this.listeners={},this.l={},this.L={},this.s={},this.v={},this.M=this.u=this.ga=!0,this.I=Promise.resolve(),this.fa="",this.D={},this.locateFile=l&&l.locateFile||ga,typeof window=="object")var p=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else if(typeof location<"u")p=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/";else throw Error("solutions can only be loaded on a web page or in a web worker");if(this.ha=p,l.options){p=a(Object.keys(l.options));for(var y=p.next();!y.done;y=p.next()){y=y.value;var v=l.options[y].default;v!==void 0&&(this.l[y]=typeof v=="function"?v():v)}}}n=fi.prototype,n.close=function(){return this.j&&this.j.delete(),Promise.resolve()};function xc(l){var p,y,v,C,T,E,R,D,V,H,q;return U(function(j){switch(j.h){case 1:return l.ga?(p=l.h.files===void 0?[]:typeof l.h.files=="function"?l.h.files(l.l):l.h.files,I(j,di(),2)):j.return();case 2:if(y=j.i,typeof window=="object")return ya("createMediapipeSolutionsWasm",{locateFile:l.locateFile}),ya("createMediapipeSolutionsPackedAssets",{locateFile:l.locateFile}),E=p.filter(function(X){return X.data!==void 0}),R=p.filter(function(X){return X.data===void 0}),D=Promise.all(E.map(function(X){var ee=Bs(l,X.url);if(X.path!==void 0){var ie=X.path;ee=ee.then(function(he){return l.overrideFile(ie,he),Promise.resolve(he)})}return ee})),V=Promise.all(R.map(function(X){return X.simd===void 0||X.simd&&y||!X.simd&&!y?yc(l.locateFile(X.url,l.ha)):Promise.resolve()})).then(function(){var X,ee,ie;return U(function(he){if(he.h==1)return X=window.createMediapipeSolutionsWasm,ee=window.createMediapipeSolutionsPackedAssets,ie=l,I(he,X(ee),2);ie.i=he.i,he.h=0})}),H=function(){return U(function(X){return l.h.graph&&l.h.graph.url?X=I(X,Bs(l,l.h.graph.url),0):(X.h=0,X=void 0),X})}(),I(j,Promise.all([V,D,H]),7);if(typeof importScripts!="function")throw Error("solutions can only be loaded on a web page or in a web worker");return v=p.filter(function(X){return X.simd===void 0||X.simd&&y||!X.simd&&!y}).map(function(X){return l.locateFile(X.url,l.ha)}),importScripts.apply(null,u(v)),C=l,I(j,createMediapipeSolutionsWasm(Module),6);case 6:C.i=j.i,l.m=new OffscreenCanvas(1,1),l.i.canvas=l.m,T=l.i.GL.createContext(l.m,{antialias:!1,alpha:!1,ua:typeof WebGL2RenderingContext<"u"?2:1}),l.i.GL.makeContextCurrent(T),j.h=4;break;case 7:if(l.m=document.createElement("canvas"),q=l.m.getContext("webgl2",{}),!q&&(q=l.m.getContext("webgl",{}),!q))return alert("Failed to create WebGL canvas context when passing video frame."),j.return();l.K=q,l.i.canvas=l.m,l.i.createContext(l.m,!0,!0,{});case 4:l.j=new l.i.SolutionWasm,l.ga=!1,j.h=0}})}function bc(l){var p,y,v,C,T,E,R,D;return U(function(V){if(V.h==1){if(l.h.graph&&l.h.graph.url&&l.fa===l.h.graph.url)return V.return();if(l.u=!0,!l.h.graph||!l.h.graph.url){V.h=2;return}return l.fa=l.h.graph.url,I(V,Bs(l,l.h.graph.url),3)}for(V.h!=2&&(p=V.i,l.j.loadGraph(p)),y=a(Object.keys(l.D)),v=y.next();!v.done;v=y.next())C=v.value,l.j.overrideFile(C,l.D[C]);if(l.D={},l.h.listeners)for(T=a(l.h.listeners),E=T.next();!E.done;E=T.next())R=E.value,xa(l,R);D=l.l,l.l={},l.setOptions(D),V.h=0})}n.reset=function(){var l=this;return U(function(p){l.j&&(l.j.reset(),l.s={},l.v={}),p.h=0})},n.setOptions=function(l,p){var y=this;if(p=p||this.h.options){for(var v=[],C=[],T={},E=a(Object.keys(l)),R=E.next();!R.done;T={X:T.X,Y:T.Y},R=E.next())if(R=R.value,!(R in this.l&&this.l[R]===l[R])){this.l[R]=l[R];var D=p[R];D!==void 0&&(D.onChange&&(T.X=D.onChange,T.Y=l[R],v.push(function(V){return function(){var H;return U(function(q){if(q.h==1)return I(q,V.X(V.Y),2);H=q.i,H===!0&&(y.u=!0),q.h=0})}}(T))),D.graphOptionXref&&(R=Object.assign({},{calculatorName:"",calculatorIndex:0},D.graphOptionXref,{valueNumber:D.type===1?l[R]:0,valueBoolean:D.type===0?l[R]:!1,valueString:D.type===2?l[R]:""}),C.push(R)))}(v.length!==0||C.length!==0)&&(this.u=!0,this.H=(this.H===void 0?[]:this.H).concat(C),this.F=(this.F===void 0?[]:this.F).concat(v))}};function Ls(l){var p,y,v,C,T,E,R;return U(function(D){switch(D.h){case 1:if(!l.u)return D.return();if(!l.F){D.h=2;break}p=a(l.F),y=p.next();case 3:if(y.done){D.h=5;break}return v=y.value,I(D,v(),4);case 4:y=p.next(),D.h=3;break;case 5:l.F=void 0;case 2:if(l.H){for(C=new l.i.GraphOptionChangeRequestList,T=a(l.H),E=T.next();!E.done;E=T.next())R=E.value,C.push_back(R);l.j.changeOptions(C),C.delete(),l.H=void 0}l.u=!1,D.h=0}})}n.initialize=function(){var l=this;return U(function(p){return p.h==1?I(p,xc(l),2):p.h!=3?I(p,bc(l),3):I(p,Ls(l),0)})};function Bs(l,p){var y,v;return U(function(C){return p in l.L?C.return(l.L[p]):(y=l.locateFile(p,""),v=fetch(y).then(function(T){return T.arrayBuffer()}),l.L[p]=v,C.return(v))})}n.overrideFile=function(l,p){this.j?this.j.overrideFile(l,p):this.D[l]=p},n.clearOverriddenFiles=function(){this.D={},this.j&&this.j.clearOverriddenFiles()},n.send=function(l,p){var y=this,v,C,T,E,R,D,V,H,q;return U(function(j){switch(j.h){case 1:return y.h.inputs?(v=1e3*(p??performance.now()),I(j,y.I,2)):j.return();case 2:return I(j,y.initialize(),3);case 3:for(C=new y.i.PacketDataList,T=a(Object.keys(l)),E=T.next();!E.done;E=T.next())if(R=E.value,D=y.h.inputs[R]){e:{var X=l[R];switch(D.type){case"video":var ee=y.s[D.stream];if(ee||(ee=new Ps(y.i,y.K),y.s[D.stream]=ee),ee.m===0&&(ee.m=ee.i.createTexture()),typeof HTMLVideoElement<"u"&&X instanceof HTMLVideoElement)var ie=X.videoWidth,he=X.videoHeight;else typeof HTMLImageElement<"u"&&X instanceof HTMLImageElement?(ie=X.naturalWidth,he=X.naturalHeight):(ie=X.width,he=X.height);he={glName:ee.m,width:ie,height:he},ie=ee.h,ie.canvas.width=he.width,ie.canvas.height=he.height,ie.activeTexture(ie.TEXTURE0),ee.i.bindTexture2d(ee.m),ie.texImage2D(ie.TEXTURE_2D,0,ie.RGBA,ie.RGBA,ie.UNSIGNED_BYTE,X),ee.i.bindTexture2d(0),ee=he;break e;case"detections":for(ee=y.s[D.stream],ee||(ee=new mc(y.i),y.s[D.stream]=ee),ee.data||(ee.data=new ee.h.DetectionListData),ee.data.reset(X.length),he=0;he<X.length;++he){ie=X[he];var me=ee.data,Ae=me.setBoundingBox,Fe=he,fe=ie.la,de=new sr;if(Qe(de,1,fe.ra),Qe(de,2,fe.sa),Qe(de,3,fe.height),Qe(de,4,fe.width),Qe(de,5,fe.rotation),Ye(de,6,fe.pa),fe=de.l(),Ae.call(me,Fe,fe),ie.ea)for(me=0;me<ie.ea.length;++me){de=ie.ea[me],Ae=ee.data,Fe=Ae.addNormalizedLandmark,fe=he,de=Object.assign({},de,{visibility:de.visibility?de.visibility:0});var Me=new Zt;Qe(Me,1,de.x),Qe(Me,2,de.y),Qe(Me,3,de.z),de.visibility&&Qe(Me,4,de.visibility),de=Me.l(),Fe.call(Ae,fe,de)}if(ie.ba)for(me=0;me<ie.ba.length;++me)Ae=ee.data,Fe=Ae.addClassification,fe=he,de=ie.ba[me],Me=new Kt,Qe(Me,2,de.score),de.index&&Ye(Me,1,de.index),de.label&&Ye(Me,3,de.label),de.displayName&&Ye(Me,4,de.displayName),de=Me.l(),Fe.call(Ae,fe,de)}ee=ee.data;break e;default:ee={}}}switch(V=ee,H=D.stream,D.type){case"video":C.pushTexture2d(Object.assign({},V,{stream:H,timestamp:v}));break;case"detections":q=V,q.stream=H,q.timestamp=v,C.pushDetectionList(q);break;default:throw Error("Unknown input config type: '"+D.type+"'")}}return y.j.send(C),I(j,y.I,4);case 4:C.delete(),j.h=0}})};function vc(l,p,y){var v,C,T,E,R,D,V,H,q,j,X,ee,ie,he;return U(function(me){switch(me.h){case 1:if(!y)return me.return(p);for(v={},C=0,T=a(Object.keys(y)),E=T.next();!E.done;E=T.next())R=E.value,D=y[R],typeof D!="string"&&D.type==="texture"&&p[D.stream]!==void 0&&++C;1<C&&(l.M=!1),V=a(Object.keys(y)),E=V.next();case 2:if(E.done){me.h=4;break}if(H=E.value,q=y[H],typeof q=="string")return ie=v,he=H,I(me,wc(l,H,p[q]),14);if(j=p[q.stream],q.type==="detection_list"){if(j){for(var Ae=j.getRectList(),Fe=j.getLandmarksList(),fe=j.getClassificationsList(),de=[],Me=0;Me<Ae.size();++Me){var Mn=fc(Ae.get(Me)),$c=Ze(Mn,1),Sc=Ze(Mn,2),Cc=Ze(Mn,3),Tc=Ze(Mn,4),Ms=Ze(Mn,5,0),ba=void 0;ba=ba===void 0?0:ba,Mn={la:{ra:$c,sa:Sc,height:Cc,width:Tc,rotation:Ms,pa:er(Ke(Mn,6),ba)},ea:wr(da(Fe.get(Me)),Zt,1).map(pa),ba:fa(ha(fe.get(Me)))},de.push(Mn)}Ae=de}else Ae=[];v[H]=Ae,me.h=7;break}if(q.type==="proto_list"){if(j){for(Ae=Array(j.size()),Fe=0;Fe<j.size();Fe++)Ae[Fe]=j.get(Fe);j.delete()}else Ae=[];v[H]=Ae,me.h=7;break}if(j===void 0){me.h=3;break}if(q.type==="float_list"){v[H]=j,me.h=7;break}if(q.type==="proto"){v[H]=j,me.h=7;break}if(q.type!=="texture")throw Error("Unknown output config type: '"+q.type+"'");return X=l.v[H],X||(X=new Ps(l.i,l.K),l.v[H]=X),I(me,ma(X,j,l.M),13);case 13:ee=me.i,v[H]=ee;case 7:q.transform&&v[H]&&(v[H]=q.transform(v[H])),me.h=3;break;case 14:ie[he]=me.i;case 3:E=V.next(),me.h=2;break;case 4:return me.return(v)}})}function wc(l,p,y){var v;return U(function(C){return typeof y=="number"||y instanceof Uint8Array||y instanceof l.i.Uint8BlobList?C.return(y):y instanceof l.i.Texture2dDataOut?(v=l.v[p],v||(v=new Ps(l.i,l.K),l.v[p]=v),C.return(ma(v,y,l.M))):C.return(void 0)})}function xa(l,p){for(var y=p.name||"$",v=[].concat(u(p.wants)),C=new l.i.StringList,T=a(p.wants),E=T.next();!E.done;E=T.next())C.push_back(E.value);T=l.i.PacketListener.implement({onResults:function(R){for(var D={},V=0;V<p.wants.length;++V)D[v[V]]=R.get(V);var H=l.listeners[y];H&&(l.I=vc(l,D,p.outs).then(function(q){q=H(q);for(var j=0;j<p.wants.length;++j){var X=D[v[j]];typeof X=="object"&&X.hasOwnProperty&&X.hasOwnProperty("delete")&&X.delete()}q&&(l.I=q)}))}}),l.j.attachMultiListener(C,T),C.delete()}n.onResults=function(l,p){this.listeners[p||"$"]=l},oe("Solution",fi),oe("OptionType",{BOOL:0,NUMBER:1,ta:2,0:"BOOL",1:"NUMBER",2:"STRING"});function pi(l){return l===void 0&&(l=0),l===1?"hand_landmark_full.tflite":"hand_landmark_lite.tflite"}function m(l){var p=this;l=l||{},this.h=new fi({locateFile:l.locateFile,files:function(y){return[{url:"hands_solution_packed_assets_loader.js"},{simd:!1,url:"hands_solution_wasm_bin.js"},{simd:!0,url:"hands_solution_simd_wasm_bin.js"},{data:!0,url:pi(y.modelComplexity)}]},graph:{url:"hands.binarypb"},inputs:{image:{type:"video",stream:"input_frames_gpu"}},listeners:[{wants:["multi_hand_landmarks","multi_hand_world_landmarks","image_transformed","multi_handedness"],outs:{image:"image_transformed",multiHandLandmarks:{type:"proto_list",stream:"multi_hand_landmarks",transform:Fs},multiHandWorldLandmarks:{type:"proto_list",stream:"multi_hand_world_landmarks",transform:Fs},multiHandedness:{type:"proto_list",stream:"multi_handedness",transform:function(y){return y.map(function(v){return fa(ha(v))[0]})}}}}],options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:typeof window!="object"||window.navigator===void 0?!1:"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},maxNumHands:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculator",fieldName:"int_value"}},modelComplexity:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelComplexity",fieldName:"int_value"},onChange:function(y){var v,C,T;return U(function(E){return E.h==1?(v=pi(y),C="third_party/mediapipe/modules/hand_landmark/"+v,I(E,Bs(p.h,v),2)):(T=E.i,p.h.overrideFile(C,T),E.return(!0))})}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"handlandmarktrackinggpu__palmdetectiongpu__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"handlandmarktrackinggpu__handlandmarkgpu__ThresholdingCalculator",fieldName:"threshold"}}}})}n=m.prototype,n.close=function(){return this.h.close(),Promise.resolve()},n.onResults=function(l){this.h.onResults(l)},n.initialize=function(){var l=this;return U(function(p){return I(p,l.h.initialize(),0)})},n.reset=function(){this.h.reset()},n.send=function(l){var p=this;return U(function(y){return I(y,p.h.send(l),0)})},n.setOptions=function(l){this.h.setOptions(l)},oe("Hands",m),oe("HAND_CONNECTIONS",[[0,1],[1,2],[2,3],[3,4],[0,5],[5,6],[6,7],[7,8],[5,9],[9,10],[10,11],[11,12],[9,13],[13,14],[14,15],[15,16],[13,17],[0,17],[17,18],[18,19],[19,20]]),oe("VERSION","0.4.1675469240")}).call(qt);var p_=Hands;/**
    * @license
    * Copyright 2023 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */var Ct=function(){return Ct=Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var s in e=arguments[t])Object.prototype.hasOwnProperty.call(e,s)&&(n[s]=e[s]);return n},Ct.apply(this,arguments)};function Rn(n,e,t,r){return new(t||(t=Promise))(function(s,o){function i(c){try{u(r.next(c))}catch(h){o(h)}}function a(c){try{u(r.throw(c))}catch(h){o(h)}}function u(c){var h;c.done?s(c.value):(h=c.value,h instanceof t?h:new t(function(d){d(h)})).then(i,a)}u((r=r.apply(n,[])).next())})}function _n(n,e){var t,r,s,o,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},typeof Symbol=="function"&&(o[Symbol.iterator]=function(){return this}),o;function a(u){return function(c){return function(h){if(t)throw new TypeError("Generator is already executing.");for(;o&&(o=0,h[0]&&(i=0)),i;)try{if(t=1,r&&(s=2&h[0]?r.return:h[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,h[1])).done)return s;switch(r=0,s&&(h=[2&h[0],s.value]),h[0]){case 0:case 1:s=h;break;case 4:return i.label++,{value:h[1],done:!1};case 5:i.label++,r=h[1],h=[0];continue;case 7:h=i.ops.pop(),i.trys.pop();continue;default:if(s=i.trys,!((s=s.length>0&&s[s.length-1])||h[0]!==6&&h[0]!==2)){i=0;continue}if(h[0]===3&&(!s||h[1]>s[0]&&h[1]<s[3])){i.label=h[1];break}if(h[0]===6&&i.label<s[1]){i.label=s[1],s=h;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(h);break}s[2]&&i.ops.pop(),i.trys.pop();continue}h=e.call(n,i)}catch(d){h=[6,d],r=0}finally{t=s=0}if(5&h[0])throw h[1];return{value:h[0]?h[1]:void 0,done:!0}}([u,c])}}}var ou=["wrist","thumb_cmc","thumb_mcp","thumb_ip","thumb_tip","index_finger_mcp","index_finger_pip","index_finger_dip","index_finger_tip","middle_finger_mcp","middle_finger_pip","middle_finger_dip","middle_finger_tip","ring_finger_mcp","ring_finger_pip","ring_finger_dip","ring_finger_tip","pinky_finger_mcp","pinky_finger_pip","pinky_finger_dip","pinky_finger_tip"],Bc={runtime:"mediapipe",maxHands:2,modelType:"full"},m_=function(){function n(e){var t,r=this;this.width=0,this.height=0,this.selfieMode=!1,this.handsSolution=new p_({locateFile:function(s,o){return e.solutionPath?e.solutionPath.replace(/\/+$/,"")+"/"+s:o+"/"+s}}),e.modelType==="lite"?t=0:t=1,this.handsSolution.setOptions({modelComplexity:t,selfieMode:this.selfieMode,maxNumHands:e.maxHands}),this.handsSolution.onResults(function(s){if(r.height=s.image.height,r.width=s.image.width,r.hands=[],s.multiHandLandmarks!==null)for(var o=s.multiHandedness,i=s.multiHandLandmarks,a=s.multiHandWorldLandmarks,u=0;u<o.length;u++)r.hands.push(Ct(Ct({},r.translateOutput(i[u],a[u])),{score:o[u].score,handedness:o[u].label}))})}return n.prototype.translateOutput=function(e,t){var r=this;return{keypoints:e.map(function(s,o){return{x:s.x*r.width,y:s.y*r.height,score:s.visibility,name:ou[o]}}),keypoints3D:t.map(function(s,o){return{x:s.x,y:s.y,z:s.z,score:s.visibility,name:ou[o]}})}},n.prototype.estimateHands=function(e,t){return Rn(this,void 0,void 0,function(){var r,s;return _n(this,function(o){switch(o.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.handsSolution.setOptions({selfieMode:this.selfieMode})),e instanceof Te?(s=ImageData.bind,[4,fo(e)]):[3,2];case 1:return r=new(s.apply(ImageData,[void 0,o.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:r=e,o.label=3;case 3:return e=r,[4,this.handsSolution.send({image:e})];case 4:return o.sent(),[2,this.hands]}})})},n.prototype.dispose=function(){this.handsSolution.close()},n.prototype.reset=function(){this.handsSolution.reset(),this.width=0,this.height=0,this.hands=null,this.selfieMode=!1},n.prototype.initialize=function(){return this.handsSolution.initialize()},n}();function g_(n){return Rn(this,void 0,void 0,function(){var e,t;return _n(this,function(r){switch(r.label){case 0:return e=function(s){if(s==null)return Ct({},Bc);var o=Ct({},s);return o.runtime="mediapipe",o.maxHands==null&&(o.maxHands=Bc.maxHands),o.modelType==null&&(o.modelType=Bc.modelType),o}(n),[4,(t=new m_(e)).initialize()];case 1:return r.sent(),[2,t]}})})}function Mc(n){return n.width*n.height}function cg(n){var e=n.xCenter-n.width/2,t=e+n.width,r=n.yCenter-n.height/2;return{xMin:e,xMax:t,yMin:r,yMax:r+n.height,width:n.width,height:n.height}}function y_(n,e){var t=cg(n),r=cg(e);if(!function(i,a){return!(i.xMax<a.xMin||a.xMax<i.xMin||i.yMax<a.yMin||a.yMax<i.yMin)}(t,r))return 0;var s=Mc(function(i,a){var u=Math.max(i.xMin,a.xMin),c=Math.min(i.xMax,a.xMax),h=Math.max(i.yMin,a.yMin),d=Math.min(i.yMax,a.yMax);return{xMin:u,xMax:c,yMin:h,yMax:d,width:Math.max(c-u,0),height:Math.max(d-h,0)}}(t,r)),o=Mc(t)+Mc(r)-s;return o>0?s/o:0}function x_(n,e,t,r){var s=n.width,o=n.height,i=1,a=Math.cos(n.rotation),u=Math.sin(n.rotation),c=n.xCenter,h=n.yCenter,d=1/e,f=1/t,g=new Array(16);return g[0]=s*a*i*d,g[1]=-o*u*d,g[2]=0,g[3]=(-.5*s*a*i+.5*o*u+c)*d,g[4]=s*u*i*f,g[5]=o*a*f,g[6]=0,g[7]=(-.5*o*a-.5*s*u*i+h)*f,g[8]=0,g[9]=0,g[10]=s*d,g[11]=0,g[12]=0,g[13]=0,g[14]=0,g[15]=1,function(x){if(x.length!==16)throw new Error("Array length must be 16 but got "+x.length);return[[x[0],x[1],x[2],x[3]],[x[4],x[5],x[6],x[7]],[x[8],x[9],x[10],x[11]],[x[12],x[13],x[14],x[15]]]}(g)}function Bb(n){return n instanceof Te?{height:n.shape[0],width:n.shape[1]}:{height:n.height,width:n.width}}function iu(n){return n-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI))}function Mb(n){return n instanceof Te?n:oa(n)}function Vc(n,e){A(n.width!==0,function(){return e+" width cannot be 0."}),A(n.height!==0,function(){return e+" height cannot be 0."})}function b_(n,e){var t=function(r,s,o,i){var a=s-r,u=i-o,c=u/a;return{scale:c,offset:o-r*c}}(0,255,e[0],e[1]);return ce(function(){return ue(Z(n,t.scale),t.offset)})}function lg(n,e,t){var r=e.outputTensorSize,s=e.keepAspectRatio,o=e.borderMode,i=e.outputTensorFloatRange,a=Bb(n),u=function(f,g){return g?{xCenter:g.xCenter*f.width,yCenter:g.yCenter*f.height,width:g.width*f.width,height:g.height*f.height,rotation:g.rotation}:{xCenter:.5*f.width,yCenter:.5*f.height,width:f.width,height:f.height,rotation:0}}(a,t),c=function(f,g,x){if(x===void 0&&(x=!1),!x)return{top:0,left:0,right:0,bottom:0};var w=g.height,b=g.width;Vc(g,"targetSize"),Vc(f,"roi");var $,N,k=w/b,I=f.height/f.width,O=0,F=0;return k>I?($=f.width,N=f.width*k,F=(1-I/k)/2):($=f.height/k,N=f.height,O=(1-k/I)/2),f.width=$,f.height=N,{top:F,left:O,right:O,bottom:F}}(u,r,s),h=x_(u,a.width,a.height),d=ce(function(){var f=Mb(n),g=fr(function(b,$,N){return Vc(N,"inputResolution"),[1/N.width*b[0][0]*$.width,1/N.height*b[0][1]*$.width,b[0][3]*$.width,1/N.width*b[1][0]*$.height,1/N.height*b[1][1]*$.height,b[1][3]*$.height,0,0]}(h,a,r),[1,8]),x=o==="zero"?"constant":"nearest",w=Kn.transform(yt(Se(f,"float32")),g,"bilinear",x,0,[r.height,r.width]);return i!=null?b_(w,i):w});return{imageTensor:d,padding:c,transformationMatrix:h}}function hg(n,e,t,r){return r===1?.5*(n+e):n+(e-n)*t/(r-1)}function dg(n){return{xCenter:n.xMin+n.width/2,yCenter:n.yMin+n.height/2,width:n.width,height:n.height}}function v_(n){var e=n.relativeKeypoints;if(e.length<=1)throw new Error("2 or more keypoints required to calculate a rect.");var t=Number.MAX_VALUE,r=Number.MAX_VALUE,s=Number.MIN_VALUE,o=Number.MIN_VALUE;return e.forEach(function(i){t=Math.min(t,i.x),s=Math.max(s,i.x),r=Math.min(r,i.y),o=Math.max(o,i.y)}),{xCenter:(t+s)/2,yCenter:(r+o)/2,width:s-t,height:o-r}}function w_(n,e,t,r,s){var o=t==="rect"?function(i,a,u){var c,h=i.locationData;return c=dg(h.boundingBox),c}(n):function(i,a){var u=i.locationData;return a==="boundingbox"?dg(u.relativeBoundingBox):v_(u)}(n,e);return s&&(o.rotation=function(i,a,u){var c,h=i.locationData,d=u.rotationVectorStartKeypointIndex,f=u.rotationVectorEndKeypointIndex;c=u.rotationVectorTargetAngle?u.rotationVectorTargetAngle:Math.PI*u.rotationVectorTargetAngleDegree/180;var g=h.relativeKeypoints[d].x*a.width,x=h.relativeKeypoints[d].y*a.height,w=h.relativeKeypoints[f].x*a.width,b=h.relativeKeypoints[f].y*a.height;return iu(c-Math.atan2(-(b-x),w-g))}(n,r,s)),o}function $_(n){return ce(function(){var e=function(s){return ce(function(){return[xe(s,[0,0,0],[1,-1,1]),xe(s,[0,0,1],[1,-1,-1])]})}(n),t=e[0],r=e[1];return{boxes:Pe(r),logits:Pe(t)}})}function S_(n,e,t,r){return Rn(this,void 0,void 0,function(){var s,o,i,a,u;return _n(this,function(c){switch(c.label){case 0:return n.sort(function(h,d){return Math.max.apply(Math,d.score)-Math.max.apply(Math,h.score)}),s=fr(n.map(function(h){return[h.locationData.relativeBoundingBox.yMin,h.locationData.relativeBoundingBox.xMin,h.locationData.relativeBoundingBox.yMax,h.locationData.relativeBoundingBox.xMax]})),o=dt(n.map(function(h){return h.score[0]})),[4,Kn.nonMaxSuppressionAsync(s,o,e,t)];case 1:return[4,(i=c.sent()).array()];case 2:return a=c.sent(),u=n.filter(function(h,d){return a.indexOf(d)>-1}),We([s,o,i]),[2,u]}})})}function C_(n,e){return n.map(function(t){var r=Ct(Ct({},t),{x:t.x*e.width,y:t.y*e.height});return t.z!=null&&(r.z=t.z*e.width),r})}function T_(n,e,t){return Rn(this,void 0,void 0,function(){var r,s,o,i,a;return _n(this,function(u){switch(u.label){case 0:return r=n[0],s=n[1],o=function(c,h,d){return ce(function(){var f,g,x,w;d.reverseOutputOrder?(g=Pe(xe(c,[0,d.boxCoordOffset+0],[-1,1])),f=Pe(xe(c,[0,d.boxCoordOffset+1],[-1,1])),w=Pe(xe(c,[0,d.boxCoordOffset+2],[-1,1])),x=Pe(xe(c,[0,d.boxCoordOffset+3],[-1,1]))):(f=Pe(xe(c,[0,d.boxCoordOffset+0],[-1,1])),g=Pe(xe(c,[0,d.boxCoordOffset+1],[-1,1])),x=Pe(xe(c,[0,d.boxCoordOffset+2],[-1,1])),w=Pe(xe(c,[0,d.boxCoordOffset+3],[-1,1]))),g=ue(Z(ve(g,d.xScale),h.w),h.x),f=ue(Z(ve(f,d.yScale),h.h),h.y),d.applyExponentialOnBoxSize?(x=Z(Gn(ve(x,d.hScale)),h.h),w=Z(Gn(ve(w,d.wScale)),h.w)):(x=Z(ve(x,d.hScale),h.h),w=Z(ve(w,d.wScale),h.h));var b=pe(f,ve(x,2)),$=pe(g,ve(w,2)),N=ue(f,ve(x,2)),k=ue(g,ve(w,2)),I=it([K(b,[d.numBoxes,1]),K($,[d.numBoxes,1]),K(N,[d.numBoxes,1]),K(k,[d.numBoxes,1])],1);if(d.numKeypoints)for(var O=0;O<d.numKeypoints;++O){var F=d.keypointCoordOffset+O*d.numValuesPerKeypoint,M=void 0,B=void 0;d.reverseOutputOrder?(M=Pe(xe(c,[0,F],[-1,1])),B=Pe(xe(c,[0,F+1],[-1,1]))):(B=Pe(xe(c,[0,F],[-1,1])),M=Pe(xe(c,[0,F+1],[-1,1])));var z=ue(Z(ve(M,d.xScale),h.w),h.x),G=ue(Z(ve(B,d.yScale),h.h),h.y);I=it([I,K(z,[d.numBoxes,1]),K(G,[d.numBoxes,1])],1)}return I})}(s,e,t),i=ce(function(){var c=r;return t.sigmoidScore?(t.scoreClippingThresh!=null&&(c=Hf(r,-t.scoreClippingThresh,t.scoreClippingThresh)),c=In(c)):c}),[4,N_(o,i,t)];case 1:return a=u.sent(),We([o,i]),[2,a]}})})}function N_(n,e,t){return Rn(this,void 0,void 0,function(){var r,s,o,i,a,u,c,h,d,f,g,x;return _n(this,function(w){switch(w.label){case 0:return r=[],[4,n.data()];case 1:return s=w.sent(),[4,e.data()];case 2:for(o=w.sent(),i=0;i<t.numBoxes;++i)if(!(t.minScoreThresh!=null&&o[i]<t.minScoreThresh||(a=i*t.numCoords,u=E_(s[a+0],s[a+1],s[a+2],s[a+3],o[i],t.flipVertically,i),(c=u.locationData.relativeBoundingBox).width<0||c.height<0))){if(t.numKeypoints>0)for((h=u.locationData).relativeKeypoints=[],d=t.numKeypoints*t.numValuesPerKeypoint,f=0;f<d;f+=t.numValuesPerKeypoint)g=a+t.keypointCoordOffset+f,x={x:s[g+0],y:t.flipVertically?1-s[g+1]:s[g+1]},h.relativeKeypoints.push(x);r.push(u)}return[2,r]}})})}function E_(n,e,t,r,s,o,i){return{score:[s],ind:i,locationData:{relativeBoundingBox:{xMin:e,yMin:o?1-t:n,xMax:r,yMax:o?1-n:t,width:r-e,height:t-n}}}}function I_(n,e){return n==="none"?e:function(t){return 1/(1+Math.exp(-t))}(e)}function fg(n,e,t,r){return Rn(this,void 0,void 0,function(){var s,o,i,a,u,c,h,d;return _n(this,function(f){switch(f.label){case 0:return t=t||e.flipHorizontally||!1,r=r||e.flipVertically||!1,s=n.size,o=s/e.numLandmarks,[4,n.data()];case 1:for(i=f.sent(),a=[],u=0;u<e.numLandmarks;++u)c=u*o,(d={x:0,y:0}).x=t?e.inputImageWidth-i[c]:i[c],o>1&&(d.y=r?e.inputImageHeight-i[c+1]:i[c+1]),o>2&&(d.z=i[c+2]),o>3&&(d.score=I_(e.visibilityActivation,i[c+3])),a.push(d);for(h=0;h<a.length;++h)(d=a[h]).x=d.x/e.inputImageWidth,d.y=d.y/e.inputImageHeight,d.z=d.z/e.inputImageWidth/(e.normalizeZ||1);return[2,a]}})})}function pg(n,e,t){var r=n.width,s=n.height,o=n.rotation;if(t.rotation==null&&t.rotationDegree==null||(o=function(h,d){return d.rotation!=null?h+=d.rotation:d.rotationDegree!=null&&(h+=Math.PI*d.rotationDegree/180),iu(h)}(o,t)),o===0)n.xCenter=n.xCenter+r*t.shiftX,n.yCenter=n.yCenter+s*t.shiftY;else{var i=(e.width*r*t.shiftX*Math.cos(o)-e.height*s*t.shiftY*Math.sin(o))/e.width,a=(e.width*r*t.shiftX*Math.sin(o)+e.height*s*t.shiftY*Math.cos(o))/e.height;n.xCenter=n.xCenter+i,n.yCenter=n.yCenter+a}if(t.squareLong){var u=Math.max(r*e.width,s*e.height);r=u/e.width,s=u/e.height}else if(t.squareShort){var c=Math.min(r*e.width,s*e.height);r=c/e.width,s=c/e.height}return n.width=r*t.scaleX,n.height=s*t.scaleY,n}function k_(n,e){for(var t=function(U,Q){var J=U[0].x*Q.width,se=U[0].y*Q.height,oe=(U[4].x+U[8].x)/2,le=(U[4].y+U[8].y)/2;return oe=(oe+U[6].x)/2*Q.width,le=(le+U[6].y)/2*Q.height,iu(Math.PI/2-Math.atan2(-(le-se),oe-J))}(n,e),r=iu(-t),s=Number.POSITIVE_INFINITY,o=Number.NEGATIVE_INFINITY,i=Number.POSITIVE_INFINITY,a=Number.NEGATIVE_INFINITY,u=0,c=n;u<c.length;u++){var h=(b=c[u]).x,d=b.y;s=Math.min(s,h),o=Math.max(o,h),i=Math.min(i,d),a=Math.max(a,d)}var f=(o+s)/2,g=(a+i)/2;s=Number.POSITIVE_INFINITY,o=Number.NEGATIVE_INFINITY,i=Number.POSITIVE_INFINITY,a=Number.NEGATIVE_INFINITY;for(var x=0,w=n;x<w.length;x++){var b,$=((b=w[x]).x-f)*e.width,N=(b.y-g)*e.height,k=$*Math.cos(r)-N*Math.sin(r),I=$*Math.sin(r)+N*Math.cos(r);s=Math.min(s,k),o=Math.max(o,k),i=Math.min(i,I),a=Math.max(a,I)}var O=(o+s)/2,F=(a+i)/2,M=O*Math.cos(t)-F*Math.sin(t)+e.width*f,B=O*Math.sin(t)+F*Math.cos(t)+e.height*g,z=(o-s)/e.width,G=(a-i)/e.height;return{xCenter:M/e.width,yCenter:B/e.height,width:z,height:G,rotation:t}}var R_={reduceBoxesInLowestLayer:!1,interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:4,minScale:.1484375,maxScale:.75,inputSizeHeight:192,inputSizeWidth:192,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,16,16],aspectRatios:[1],fixedAnchorSize:!0},Uc={runtime:"tfjs",modelType:"full",maxHands:2,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/handpose_3d/detector/full/1",landmarkModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/handpose_3d/landmark/full/1"},zc={flipHorizontal:!1,staticImageMode:!1},__={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:2016,numCoords:18,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:7,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:192,yScale:192,hScale:192,wScale:192,minScoreThresh:.5},A_=.3,O_={shiftX:0,shiftY:-.5,scaleX:2.6,scaleY:2.6,squareLong:!0},D_={shiftX:0,shiftY:-.1,scaleX:2,scaleY:2,squareLong:!0},F_={outputTensorSize:{width:192,height:192},keepAspectRatio:!0,outputTensorFloatRange:[0,1],borderMode:"zero"},P_={outputTensorSize:{width:224,height:224},keepAspectRatio:!0,outputTensorFloatRange:[0,1],borderMode:"zero"},L_={numLandmarks:21,inputImageWidth:224,inputImageHeight:224,normalizeZ:.4,visibilityActivation:"none",flipHorizontally:!1,flipVertically:!1},B_={numLandmarks:21,inputImageWidth:1,inputImageHeight:1,visibilityActivation:"none",flipHorizontally:!1,flipVertically:!1},au,M_=function(){function n(e,t,r){this.detectorModel=e,this.landmarkModel=t,this.maxHands=r,this.prevHandRectsFromLandmarks=null,this.anchors=function(u){u.reduceBoxesInLowestLayer==null&&(u.reduceBoxesInLowestLayer=!1),u.interpolatedScaleAspectRatio==null&&(u.interpolatedScaleAspectRatio=1),u.fixedAnchorSize==null&&(u.fixedAnchorSize=!1);for(var c=[],h=0;h<u.numLayers;){for(var d=[],f=[],g=[],x=[],w=h;w<u.strides.length&&u.strides[w]===u.strides[h];){var b=hg(u.minScale,u.maxScale,w,u.strides.length);if(w===0&&u.reduceBoxesInLowestLayer)g.push(1),g.push(2),g.push(.5),x.push(.1),x.push(b),x.push(b);else{for(var $=0;$<u.aspectRatios.length;++$)g.push(u.aspectRatios[$]),x.push(b);if(u.interpolatedScaleAspectRatio>0){var N=w===u.strides.length-1?1:hg(u.minScale,u.maxScale,w+1,u.strides.length);x.push(Math.sqrt(b*N)),g.push(u.interpolatedScaleAspectRatio)}}w++}for(var k=0;k<g.length;++k){var I=Math.sqrt(g[k]);d.push(x[k]/I),f.push(x[k]*I)}var O=0,F=0;if(u.featureMapHeight.length>0)O=u.featureMapHeight[h],F=u.featureMapWidth[h];else{var M=u.strides[h];O=Math.ceil(u.inputSizeHeight/M),F=Math.ceil(u.inputSizeWidth/M)}for(var B=0;B<O;++B)for(var z=0;z<F;++z)for(var G=0;G<d.length;++G){var U={xCenter:(z+u.anchorOffsetX)/F,yCenter:(B+u.anchorOffsetY)/O,width:0,height:0};u.fixedAnchorSize?(U.width=1,U.height=1):(U.width=f[G],U.height=d[G]),c.push(U)}h=w}return c}(R_);var s=dt(this.anchors.map(function(u){return u.width})),o=dt(this.anchors.map(function(u){return u.height})),i=dt(this.anchors.map(function(u){return u.xCenter})),a=dt(this.anchors.map(function(u){return u.yCenter}));this.anchorTensor={x:i,y:a,w:s,h:o}}return n.prototype.estimateHands=function(e,t){return Rn(this,void 0,void 0,function(){var r,s,o,i,a,u,c,h,d,f,g,x,w,b,$,N,k,I,O=this;return _n(this,function(F){switch(F.label){case 0:return r=function(z){if(z==null)return Ct({},zc);var G=Ct({},z);return G.flipHorizontal==null&&(G.flipHorizontal=zc.flipHorizontal),G.staticImageMode==null&&(G.staticImageMode=zc.staticImageMode),G}(t),e==null?(this.reset(),[2,[]]):(s=Bb(e),o=ce(function(){var z=Se(Mb(e),"float32");return r.flipHorizontal&&(z=Pe(Kn.flipLeftRight(yt(z,0)),[0])),z}),i=this.prevHandRectsFromLandmarks,r.staticImageMode||i==null||i.length<this.maxHands?[4,this.detectPalm(o)]:[3,2]);case 1:return(u=F.sent()).length===0?(this.reset(),o.dispose(),[2,[]]):(c=u.map(function(z){return O.palmDetectionToRoi(z,s)}),a=c,[3,3]);case 2:a=i,F.label=3;case 3:return M=.5,B=[],[a].forEach(function(z){return z.forEach(function(G){(B=B.filter(function(U){return y_(G,U)<=M})).push(G)})}),a=B,[4,Promise.all(a.map(function(z){return O.handLandmarks(z,o)}))];case 4:for(h=F.sent(),d=[],this.prevHandRectsFromLandmarks=[],f=0,g=h;f<g.length;f++)(x=g[f])!=null&&(w=x.landmarks,b=x.worldLandmarks,$=x.handScore,N=x.handedness,this.prevHandRectsFromLandmarks.push(this.handLandmarksToRoi(w,s)),(k=C_(w,s))!=null&&k.forEach(function(z,G){delete z.z,z.name=ou[G]}),(I=b)!=null&&I.forEach(function(z,G){z.name=ou[G]}),d.push({keypoints:k,keypoints3D:I,handedness:N,score:$}));return o.dispose(),[2,d]}var M,B})})},n.prototype.dispose=function(){this.detectorModel.dispose(),this.landmarkModel.dispose(),We([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h])},n.prototype.reset=function(){this.prevHandRectsFromLandmarks=null},n.prototype.detectPalm=function(e){return Rn(this,void 0,void 0,function(){var t,r,s,o,i,a,u,c,h,d;return _n(this,function(f){switch(f.label){case 0:return t=lg(e,F_),r=t.imageTensor,s=t.padding,o=this.detectorModel.predict(r),i=$_(o),a=i.boxes,[4,T_([u=i.logits,a],this.anchorTensor,__)];case 1:return(c=f.sent()).length===0?(We([r,o,u,a]),[2,c]):[4,S_(c,this.maxHands,A_)];case 2:return h=f.sent(),d=function(g,x){g===void 0&&(g=[]);for(var w=x.left,b=x.top,$=x.left+x.right,N=x.top+x.bottom,k=0;k<g.length;k++){var I=g[k],O=I.locationData.relativeBoundingBox,F=(O.xMin-w)/(1-$),M=(O.yMin-b)/(1-N),B=O.width/(1-$),z=O.height/(1-N);O.xMin=F,O.yMin=M,O.width=B,O.height=z,O.xMax=F+B,O.yMax=M+z;var G=I.locationData.relativeKeypoints;G&&G.forEach(function(U){var Q=(U.x-w)/(1-$),J=(U.y-b)/(1-N);U.x=Q,U.y=J})}return g}(h,s),We([r,o,u,a]),[2,d]}})})},n.prototype.palmDetectionToRoi=function(e,t){return pg(w_(e,"boundingbox","normRect",t,{rotationVectorStartKeypointIndex:0,rotationVectorEndKeypointIndex:2,rotationVectorTargetAngleDegree:90}),t,O_)},n.prototype.handLandmarks=function(e,t){return Rn(this,void 0,void 0,function(){var r,s,o,i,a,u,c,h,d,f,g,x,w,b,$,N;return _n(this,function(k){switch(k.label){case 0:return r=lg(t,P_,e),s=r.imageTensor,o=r.padding,i=this.landmarkModel.execute(s,["Identity_2:0","Identity_1:0","Identity:0","Identity_3:0"]),a=i[0],u=i[1],c=i[2],h=i[3],[4,u.data()];case 1:return(d=k.sent()[0])<.5?(We(i),We(s),[2,null]):[4,c.data()];case 2:return f=k.sent()[0],g=f>=.5?"Left":"Right",[4,fg(a,L_)];case 3:return x=k.sent(),[4,fg(h,B_)];case 4:return w=k.sent(),b=function(I,O){var F=O.left,M=O.top,B=O.left+O.right,z=O.top+O.bottom;return I.map(function(G){return Ct(Ct({},G),{x:(G.x-F)/(1-B),y:(G.y-M)/(1-z),z:G.z/(1-B)})})}(x,o),$=function(I,O,F){F===void 0&&(F={ignoreRotation:!1});for(var M=[],B=0,z=I;B<z.length;B++){var G=z[B],U=G.x-.5,Q=G.y-.5,J=F.ignoreRotation?0:O.rotation,se=Math.cos(J)*U-Math.sin(J)*Q,oe=Math.sin(J)*U+Math.cos(J)*Q;se=se*O.width+O.xCenter,oe=oe*O.height+O.yCenter;var le=G.z*O.width,ge=Ct({},G);ge.x=se,ge.y=oe,ge.z=le,M.push(ge)}return M}(b,e),N=function(I,O){for(var F=[],M=0,B=I;M<B.length;M++){var z=B[M],G=z.x,U=z.y,Q=O.rotation,J=Math.cos(Q)*G-Math.sin(Q)*U,se=Math.sin(Q)*G+Math.cos(Q)*U,oe=Ct({},z);oe.x=J,oe.y=se,F.push(oe)}return F}(w,e),We(i),We(s),[2,{landmarks:$,worldLandmarks:N,handScore:d,handedness:g}]}})})},n.prototype.handLandmarksToRoi=function(e,t){return pg(k_([].concat(e.slice(0,4),e.slice(5,7),e.slice(9,11),e.slice(13,15),e.slice(17,19)),t),t,D_)},n}();function V_(n){return Rn(this,void 0,void 0,function(){var e,t,r,s,o,i;return _n(this,function(a){switch(a.label){case 0:return e=function(u){if(u==null)return Ct({},Uc);var c=Ct({},u);if(c.runtime="tfjs",c.maxHands==null&&(c.maxHands=Uc.maxHands),c.modelType==null&&(c.modelType=Uc.modelType),c.modelType!=="lite"&&c.modelType!=="full")throw new Error("Model type must be one of lite or full, but got "+c.modelType);return c.detectorModelUrl==null&&(c.modelType==="lite"?c.detectorModelUrl="https://tfhub.dev/mediapipe/tfjs-model/handpose_3d/detector/lite/1":c.detectorModelUrl="https://tfhub.dev/mediapipe/tfjs-model/handpose_3d/detector/full/1"),c.landmarkModelUrl==null&&(c.modelType==="lite"?c.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/handpose_3d/landmark/lite/1":c.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/handpose_3d/landmark/full/1"),c}(n),t=e.detectorModelUrl.indexOf("https://tfhub.dev")>-1,r=e.landmarkModelUrl.indexOf("https://tfhub.dev")>-1,[4,Promise.all([Ui(e.detectorModelUrl,{fromTFHub:t}),Ui(e.landmarkModelUrl,{fromTFHub:r})])];case 1:return s=a.sent(),o=s[0],i=s[1],[2,new M_(o,i,e.maxHands)]}})})}function U_(n,e){return Rn(this,void 0,void 0,function(){var t,r;return _n(this,function(s){if(n===au.MediaPipeHands){if(r=void 0,(t=e)!=null){if(t.runtime==="tfjs")return[2,V_(t)];if(t.runtime==="mediapipe")return[2,g_(t)];r=t.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' or 'mediapipe', but got "+r)}throw new Error(n+" is not a supported model name.")})})}(function(n){n.MediaPipeHands="MediaPipeHands"})(au||(au={}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const us={},_a={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function z_(n,e){us[n]=e}function On(n,e){if(!(n in us)||e!=null){const r=G_(n,e);if(r!==null)us[n]=r;else return console.log("Could not get context for WebGL version",n),null}const t=us[n];return t==null||t.isContextLost()?(delete us[n],On(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),us[n])}function W_(n){if(!W().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function G_(n,e){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e??W_(n);return t.addEventListener("webglcontextlost",r=>{r.preventDefault(),delete us[n]},!1),W().getBool("SOFTWARE_WEBGL_ENABLED")&&(_a.failIfMajorPerformanceCaveat=!1),n===1?t.getContext("webgl",_a)||t.getContext("experimental-webgl",_a):t.getContext("webgl2",_a)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Wi;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(Wi||(Wi={}));var Xt;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(Xt||(Xt={}));var ht;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(ht||(ht={}));function ia(n,e){return[e,n]}function j_(n,e){return n*e}function Aa(n){const e=Y(n),t=Math.ceil(e/4);return Wa(t)}function po(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function H_(n,e){const[t,r]=po(n,e);return t*r*4}function im(n,e){const t=n;let r,s,o,i,a,u,c,h,d,f;return W().getNumber("WEBGL_VERSION")===2?(r=t.R32F,s=t.R16F,o=t.RGBA16F,i=t.RGBA32F,a=t.RED,c=4,h=1,d=t.HALF_FLOAT,f=t.FLOAT,u=t.RGBA8):(r=n.RGBA,s=n.RGBA,o=n.RGBA,i=t.RGBA,a=n.RGBA,c=4,h=4,d=e!=null?e.HALF_FLOAT_OES:null,f=n.FLOAT,u=n.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:i,textureFormatFloat:a,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:h,textureTypeHalfFloat:d,textureTypeFloat:f}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function re(n,e){const t=e();return W().getBool("DEBUG")&&K_(n),t}function K_(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+Q_(n,e))}const X_=596e-10,q_=65504;function Y_(n){return!!(W().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||X_<Math.abs(n)&&Math.abs(n)<q_)}function Q_(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function Oa(n,e){return br(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function Z_(n,e){const t=br(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(re(n,()=>n.shaderSource(t,e)),re(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function J_(n,e){const t=br(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(re(n,()=>n.shaderSource(t,e)),re(n,()=>n.compileShader(t)),W().get("ENGINE_COMPILE_ONLY"))return t;if(n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw Vb(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const eA=/ERROR: [0-9]+:([0-9]+):/g;function Vb(n,e){const t=eA.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(n);return}const r=+t[1],s=n.split(`
`),o=s.length.toString().length+2,i=s.map((d,f)=>hs((f+1).toString(),o)+d);let a=0;for(let d=0;d<i.length;d++)a=Math.max(i[d].length,a);const u=i.slice(0,r-1),c=i.slice(r-1,r),h=i.slice(r);console.log(u.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${hs(c[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join(`
`))}function tA(n){return br(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function nA(n,e){if(re(n,()=>n.linkProgram(e)),!W().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(e,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function Wc(n,e){if(re(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function rA(n,e){const t=br(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return re(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),re(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function sA(n,e){const t=br(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return re(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),re(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function oA(n){return br(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function iA(n,e){const t=W().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const r=`[${n}x${e}]`;throw new Error("Requested texture size "+r+" is invalid.")}if(n>t||e>t){const r=`[${n}x${e}]`,s=`[${t}x${t}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+s+".")}}function aA(n){return br(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function mg(n,e,t,r,s,o,i){const a=n.getAttribLocation(e,t);return a===-1?!1:(re(n,()=>n.bindBuffer(n.ARRAY_BUFFER,r)),re(n,()=>n.vertexAttribPointer(a,s,n.FLOAT,!1,o,i)),re(n,()=>n.enableVertexAttribArray(a)),!0)}function uA(n,e,t){fA(n,t),re(n,()=>n.activeTexture(n.TEXTURE0+t)),re(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function cA(n,e,t){return br(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function lA(n,e,t){return n.getUniformLocation(e,t)}function hA(n,e,t,r){re(n,()=>uA(n,e,r)),re(n,()=>n.uniform1i(t,r))}function Gc(n,e,t){re(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),re(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function gg(n,e){re(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),re(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function Da(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+dA(n,e))}function dA(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function br(n,e,t){const r=re(n,()=>e());if(r==null)throw new Error(t);return r}function fA(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+n.TEXTURE0;if(r<n.TEXTURE0||r>t){const s=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${s}.`)}}function so(n,e=2){return Y(n.slice(0,n.length-e))}function oo(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function Fa(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[so(n),...oo(n)]),e}function pA(n,e=!1){let t=W().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=W().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");r===1/0&&W().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=t/2),e&&(t=t*2,r=r*2,n=n.map((a,u)=>u>=n.length-2?fu(n[u]):n[u]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=yr(n).newShape);let s=Y(n),o=null;n.length<=1&&s<=t?o=[1,s]:n.length===2&&n[0]<=t&&n[1]<=t?o=n:n.length===3&&n[0]*n[1]<=t&&n[2]<=t?o=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=t&&n[1]*n[2]<=t?o=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t?o=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t&&(o=[n[0],n[1]*n[2]*n[3]]);const i=o!=null&&Math.max(...o)>r&&Math.min(...o)<=(e?2:1)&&Math.min(...o)>0;if(o==null||i)if(e){const a=so(n);let u=2,c=2;n.length&&([u,c]=oo(n)),s=a*(u/2)*(c/2),o=Wa(s).map(h=>h*2)}else o=Wa(s);return o}function Pa(n){return n%2===0}function uu(n,e){if(n=n.slice(-2),e=e.slice(-2),ze(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n[n.length-1],r=e[e.length-1];if(t===r||Pa(t)&&Pa(r)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&Pa(n[0])&&Pa(e[0])}let jc,Hc;function mA(n){if(jc==null){const e=On(n);jc=e.getParameter(e.MAX_TEXTURE_SIZE)}return jc}function gA(n){if(Hc==null){const e=On(n);Hc=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Hc)}function yA(n){if(n===0)return 0;let e;const t=On(n);return an(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:an(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function an(n,e){return n.getExtension(e)!=null}function yg(n){try{if(On(n)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function xA(n){if(n===0)return!1;const e=On(n);if(n===1){if(!an(e,"OES_texture_float"))return!1}else if(!an(e,"EXT_color_buffer_float"))return!1;return kl(e)}function bA(n){if(n===0)return!1;const e=On(n);if(n===1){if(!an(e,"OES_texture_float")||!an(e,"WEBGL_color_buffer_float"))return!1}else{if(an(e,"EXT_color_buffer_float"))return kl(e);const r="EXT_color_buffer_half_float";if(an(e,r)){const s=e.getExtension(r);return vA(e,s)}return!1}return kl(e)}function kl(n){const e=im(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(o),i}function vA(n,e){const t=im(n,e),r=n.createTexture();n.bindTexture(n.TEXTURE_2D,r),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,1,1,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const i=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,i),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,r,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(r),n.deleteFramebuffer(i),a}function wA(n){return n!==2?!1:On(n).fenceSync!=null}function aa(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&A(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ae=W();ae.registerFlag("HAS_WEBGL",()=>ae.getNumber("WEBGL_VERSION")>0);ae.registerFlag("WEBGL_VERSION",()=>yg(2)?2:yg(1)?1:0);ae.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);ae.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>ae.get("WEBGL_VERSION")===2);ae.registerFlag("WEBGL_CPU_FORWARD",()=>!0);ae.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);ae.registerFlag("WEBGL_PACK",()=>ae.getBool("HAS_WEBGL"));ae.registerFlag("WEBGL_PACK_NORMALIZATION",()=>ae.getBool("WEBGL_PACK"));ae.registerFlag("WEBGL_PACK_CLIP",()=>ae.getBool("WEBGL_PACK"));ae.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>ae.getBool("WEBGL_PACK"));ae.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>ae.getBool("WEBGL_PACK"));ae.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>ae.getBool("WEBGL_PACK"));ae.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>ae.getBool("WEBGL_PACK"));ae.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>ae.getBool("WEBGL_PACK"));ae.registerFlag("WEBGL_PACK_REDUCE",()=>ae.getBool("WEBGL_PACK"));ae.registerFlag("WEBGL_LAZILY_UNPACK",()=>ae.getBool("WEBGL_PACK"));ae.registerFlag("WEBGL_CONV_IM2COL",()=>ae.getBool("WEBGL_PACK"));ae.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>ae.getBool("WEBGL_PACK"));ae.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>mA(ae.getNumber("WEBGL_VERSION")));ae.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>gA(ae.getNumber("WEBGL_VERSION")));ae.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=ae.getNumber("WEBGL_VERSION");return n===0?0:yA(n)});ae.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>ae.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Af());ae.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>xA(ae.getNumber("WEBGL_VERSION")));ae.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>ae.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:ae.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));ae.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>bA(ae.getNumber("WEBGL_VERSION")));ae.registerFlag("WEBGL_FENCE_API_ENABLED",()=>wA(ae.getNumber("WEBGL_VERSION")));ae.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>ae.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);ae.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});ae.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Af()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});ae.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);ae.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);ae.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);ae.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);ae.registerFlag("WEBGL_EXP_CONV",()=>!1);ae.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>ae.getBool("IS_TEST"));ae.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);ae.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);ae.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);ae.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function It(){let n,e,t,r,s,o,i,a,u,c;return W().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",r="in",s="texture",o="outputColor",i="out vec4 outputColor;",a=W().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",u="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",r="varying",s="texture2D",o="gl_FragColor",i="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:r,texture2D:s,output:o,defineOutput:i,defineSpecialNaN:a,defineSpecialInf:u,defineRound:c}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _s(n,e,t="index"){const r=ot(e);return r.map((s,o)=>{const i=`int ${n[o]} = ${t} / ${s}`,a=o===r.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * ${s}`:`index -= ${n[o]} * ${s}`;return`${i}; ${a};`}).join("")}function Lu(n,e,t="index"){const r=ot(e);return r.map((s,o)=>{const i=`int ${n[o]} = ${t} / outShapeStrides[${o}]`,a=o===r.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * outShapeStrides[${o}]`:`index -= ${n[o]} * outShapeStrides[${o}]`;return`${i}; ${a};`}).join("")}function $A(n,e){const t=n.length,r=n.map(o=>`${e}[${o}]`),s=new Array(t-1);s[t-2]=r[t-1];for(let o=t-3;o>=0;--o)s[o]=`(${s[o+1]} * ${r[o+1]})`;return s}function SA(n,e,t="index"){const r=n.map((o,i)=>i),s=$A(r,e);return s.map((o,i)=>{const a=`int ${n[i]} = ${t} / ${s[i]}`,u=i===s.length-1?`int ${n[i+1]} = ${t} - ${n[i]} * ${s[i]}`:`index -= ${n[i]} * ${s[i]}`;return`${a}; ${u};`}).join("")}function am(n){const e=ot(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function um(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const Ub=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:zb}=gb;function CA(n,e,t){const r=[];if(n.forEach(g=>{const x=Y(g.shapeInfo.logicalShape);if(g.shapeInfo.isUniform?r.push(`uniform float ${g.name}${x>1?`[${x}]`:""};`):(r.push(`uniform sampler2D ${g.name};`),r.push(`uniform int offset${g.name};`)),t.enableShapeUniforms){const{uniformShape:w}=cm(t.packedInputs,g.shapeInfo.logicalShape,g.shapeInfo.texShape);switch(w.length){case 1:r.push(`uniform int ${g.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${g.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${g.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${g.name}Shape;`);break}r.push(`uniform ivec2 ${g.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break}r.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(g=>{r.push(`uniform ${g.type} ${g.name}${g.arrayIndex?`[${g.arrayIndex}]`:""};`)});const s=r.join(`
`),o=n.map(g=>TA(g,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),i=e.texShape,a=It(),u=IA(a);let c,h,d=_A(a);return e.isPacked?(c=NA(e.logicalShape,i,t.enableShapeUniforms),h=RA(a)):(c=EA(e.logicalShape,i,t.enableShapeUniforms),h=kA(a)),t.packedInputs&&(d+=FA),[d,u,h,s,c,o,t.userCode].join(`
`)}function mo(n,e=!1){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return KA(n,e);case 1:return qA(n,e);case 2:return QA(n,e);case 3:return JA(n,e);case 4:return tO(n,e);case 5:return nO(n);case 6:return rO(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function Wb(n,e){switch(n.shapeInfo.logicalShape.length){case 0:return HA(n);case 1:return XA(n,e);case 2:return YA(n,e);case 3:return ZA(n,e);default:return eO(n,e)}}function TA(n,e,t=!1,r){let s="";t?s+=Wb(n,r):s+=mo(n,r);const o=n.shapeInfo.logicalShape,i=e.logicalShape;return o.length<=i.length&&(t?s+=sO(n,e):s+=oO(n,e)),s}function NA(n,e,t){switch(n.length){case 0:return Gb();case 1:return PA(n,e,t);case 2:return GA(n,e,t);case 3:return BA(n,e,t);default:return VA(n,e,t)}}function EA(n,e,t){switch(n.length){case 0:return Gb();case 1:return LA(n,e,t);case 2:return jA(n,e,t);case 3:return MA(n,e,t);case 4:return UA(n,e,t);case 5:return zA(n,e);case 6:return WA(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function IA(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function kA(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function RA(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function _A(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${AA}
    ${OA}
    ${DA}
  `}const AA=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,OA=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,DA=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,FA=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function Gb(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function PA(n,e,t){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return r[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${r[1]}.0);
      }
    `:r[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${r[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);
    }
  `}function LA(n,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function BA(n,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(n[2]/2),o=s*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec3(b, r, c);
    }
  `}function MA(n,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Lu(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const r=_s(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${r}
      return ivec3(r, c, d);
    }
  `}function VA(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(n[n.length-1]/2),o=s*Math.ceil(n[n.length-2]/2);let i=o,a="",u="b, r, c";for(let c=2;c<n.length-1;c++)i*=n[n.length-c-1],a=`
      int b${c} = index / ${i};
      index -= b${c} * ${i};
    `+a,u=`b${c}, `+u;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      ${a}

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec${n.length}(${u});
    }
  `}function UA(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Lu(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const r=_s(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${r}
      return ivec4(r, c, d, d2);
    }
  `}function zA(n,e){const t=_s(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function WA(n,e){const t=_s(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function GA(n,e,t){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(ze(n,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));
      }
    `;const s=Math.ceil(n[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));

      int index = resTexRC.x * ${r[1]} + resTexRC.y;
      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec2(r, c);
    }
  `}function jA(n,e,t){return ze(n,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function As(n){return`offset${n}`}function HA(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),r=It();return`
    vec4 ${t}() {
      return ${r.texture2D}(${e}, halfCR);
    }
  `}function KA(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${r}() {return ${t};}`;const[s,o]=n.shapeInfo.texShape;if(s===1&&o===1)return`
      float ${r}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const i=As(t);if(e)return`
    float ${r}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${i});
      return sampleTexture(${t}, uv);
    }
  `;const[a,u]=n.shapeInfo.texShape;return`
    float ${r}() {
      vec2 uv = uvFromFlat(${a}, ${u}, ${i});
      return sampleTexture(${t}, uv);
    }
  `}function XA(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),s=n.shapeInfo.texShape,o=It();if(e)return`
    vec4 ${r}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${o.texture2D}(${t}, uv);
    }
  `;const i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`
    vec4 ${r}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${o.texture2D}(${t}, uv);
    }
  `}function qA(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${r}(int index) {
        ${go(n)}
      }
    `;const s=n.shapeInfo.texShape,o=s[0],i=s[1];if(i===1&&o===1)return`
      float ${r}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const a=As(t);return i===1?e?`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${o}.0);
        return sampleTexture(${t}, uv);
      }
    `:o===1?e?`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${a});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${o}, ${i}, index + ${a});
      return sampleTexture(${t}, uv);
    }
  `}function YA(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n.shapeInfo.texShape,i=o[0],a=o[1],u=It();if(o!=null&&ze(t,o))return e?`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);

        return ${u.texture2D}(${r}, uv);
      }
    `:`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${i}.0);

        return ${u.texture2D}(${r}, uv);
      }
    `;if(e)return`
    vec4 ${s}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${r}, uv);
    }
  `;const c=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],h=Math.ceil(t[1]/2);return`
    vec4 ${s}(int row, int col) {
      vec2 uv = packedUVfrom2D(${h}, ${c[0]}, ${c[1]}, row, col);
      return ${u.texture2D}(${r}, uv);
    }
  `}function QA(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n.shapeInfo.texShape;if(o!=null&&ze(t,o)){if(e)return`
      float ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `;const f=o[0],g=o[1];return`
    float ${s}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${g}.0, ${f}.0);
      return sampleTexture(${r}, uv);
    }
  `}const{newShape:i,keptDims:a}=yr(t),u=i;if(u.length<t.length){const f=yo(n,u),g=["row","col"];return`
      ${mo(f,e)}
      float ${s}(int row, int col) {
        return ${s}(${xo(g,a)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${go(n)}
      }
    `;const c=o[0],h=o[1],d=As(r);return h===1?e?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${r}, uv);
    }
  `:c===1?e?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${h}.0, 0.5);
      return sampleTexture(${r}, uv);
    }
  `:e?`
      float ${s}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
        return sampleTexture(${r}, uv);
      }
    `:`
  float ${s}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${d};
    vec2 uv = uvFromFlat(${c}, ${h}, index);
    return sampleTexture(${r}, uv);
  }
`}function ZA(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n.shapeInfo.texShape,i=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(t[0]===1){const f=t.slice(1),g=[1,2],x=yo(n,f),w=["b","row","col"];return`
        ${Wb(x,e)}
        vec4 ${s}(int b, int row, int col) {
          return ${s}(${xo(w,g)});
        }
      `}const a=It();if(e)return`
    vec4 ${s}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${r}, uv);
    }
  `;const u=i[0],c=i[1],h=Math.ceil(t[2]/2),d=h*Math.ceil(t[1]/2);return`
    vec4 ${s}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${c}, ${d}, ${h}, b, row, col);
      return ${a.texture2D}(${r}, uv);
    }
  `}function JA(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=t[1]*t[2],i=t[2],{newShape:a,keptDims:u}=yr(t),c=a;if(c.length<t.length){const w=yo(n,c),b=["row","col","depth"];return`
        ${mo(w,e)}
        float ${s}(int row, int col, int depth) {
          return ${s}(${xo(b,u)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${o}, ${i}, 1)));
        ${go(n)}
      }
    `;const h=n.shapeInfo.texShape,d=h[0],f=h[1],g=n.shapeInfo.flatOffset;if(f===o&&g==null)return e?`
      float ${s}(int row, int col, int depth) {
        int stride1 = ${r}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
        float ${s}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${f}.0, ${d}.0);
          return sampleTexture(${r}, uv);
        }
      `;if(f===i&&g==null)return e?`
      float ${s}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${f}.0, ${d}.0);
      return sampleTexture(${r}, uv);
    }
  `;const x=As(r);return e?`
    float ${s}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${r}Shape[1] * ${r}Shape[2];
      int stride1 = ${r}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${x};
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
      return sampleTexture(${r}, uv);
    }
    `:`
      float ${s}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o} + col * ${i} + depth + ${x};
        vec2 uv = uvFromFlat(${d}, ${f}, index);
        return sampleTexture(${r}, uv);
      }
  `}function eO(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),s=It();if(e)return`
    vec4 ${r}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${t}, uv);
    }
  `;const o=n.shapeInfo.logicalShape,i=o.length,a=n.shapeInfo.texShape,u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=u[0],h=u[1],d=Math.ceil(o[i-1]/2);let f=d*Math.ceil(o[i-2]/2),g="int b, int row, int col",x=`b * ${f} + (row / 2) * ${d} + (col / 2)`;for(let w=2;w<i-1;w++)g=`int b${w}, `+g,f*=o[i-w-1],x=`b${w} * ${f} + `+x;return`
    vec4 ${r}(${g}) {
      int index = ${x};
      int texR = index / ${h};
      int texC = index - texR * ${h};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}, ${c});
      return ${s.texture2D}(${t}, uv);
    }
  `}function tO(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=t[3],i=t[2]*o,a=t[1]*i,{newShape:u,keptDims:c}=yr(t);if(u.length<t.length){const N=yo(n,u),k=["row","col","depth","depth2"];return`
      ${mo(N,e)}
      float ${s}(int row, int col, int depth, int depth2) {
        return ${s}(${xo(k,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${i}, ${o}, 1)));
        ${go(n)}
      }
    `;const h=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,f=d[0],g=d[1],x=`int stride2 = ${r}Shape[3];`,w=`int stride1 = ${r}Shape[2] * stride2;`,b=`int stride0 = ${r}Shape[1] * stride1;`;if(g===a&&h==null)return e?`
      float ${s}(int row, int col, int depth, int depth2) {
        ${x}
        ${w}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${g}.0, ${f}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(g===o&&h==null)return e?`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${g}.0, ${f}.0);
        return sampleTexture(${r}, uv);
      }
    `;const $=As(r);return e?`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${x}
      ${w}
      ${b}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${$});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} +
          depth * ${o} + depth2;
      vec2 uv = uvFromFlat(${f}, ${g}, index + ${$});
      return sampleTexture(${r}, uv);
    }
  `}function nO(n){const e=n.shapeInfo.logicalShape,t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),s=e[4],o=e[3]*s,i=e[2]*o,a=e[1]*i,{newShape:u,keptDims:c}=yr(e);if(u.length<e.length){const w=yo(n,u),b=["row","col","depth","depth2","depth3"];return`
      ${mo(w)}
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        return ${r}(${xo(b,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${i}, ${o}, ${s})) +
          depth3;
        ${go(n)}
      }
    `;const h=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,f=d[0],g=d[1];if(g===a&&h==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${o}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${g}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(g===s&&h==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${g}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;const x=As(t);return`
    float ${r}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${i} + depth * ${o} +
          depth2 * ${s} + depth3 + ${x};
      vec2 uv = uvFromFlat(${f}, ${g}, index);
      return sampleTexture(${t}, uv);
    }
  `}function rO(n){const e=n.shapeInfo.logicalShape,t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:s,keptDims:o}=yr(e);if(s.length<e.length){const b=yo(n,s),$=["row","col","depth","depth2","depth3","depth4"];return`
      ${mo(b)}
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${r}(${xo($,o)});
      }
    `}const i=e[5],a=e[4]*i,u=e[3]*a,c=e[2]*u,h=e[1]*c;if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${h}, ${c}, ${u}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${go(n)}
      }
    `;const d=n.shapeInfo.flatOffset,f=n.shapeInfo.texShape,g=f[0],x=f[1];if(x===h&&d==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${u}, ${a}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${x}.0, ${g}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(x===i&&d==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${x}.0, ${g}.0);
        return sampleTexture(${t}, uv);
      }
    `;const w=As(t);return`
    float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${h} + col * ${c} + depth * ${u} +
          depth2 * ${a} + depth3 * ${i} + depth4 + ${w};
      vec2 uv = uvFromFlat(${g}, ${x}, index);
      return sampleTexture(${t}, uv);
    }
  `}function go(n){const e=n.name,t=Y(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function sO(n,e){const t=n.name,r=t.charAt(0).toUpperCase()+t.slice(1),s="get"+r+"AtOutCoords",o=n.shapeInfo.logicalShape.length,i=e.logicalShape.length,a=zb(n.shapeInfo.logicalShape,e.logicalShape),u=De(i),c=i-o;let h;const d=["x","y","z","w","u","v"];o===0?h="":i<2&&a.length>=1?h="coords = 0;":h=a.map(N=>`coords.${d[N+c]} = 0;`).join(`
`);let f="";i<2&&o>0?f="coords":f=n.shapeInfo.logicalShape.map((N,k)=>`coords.${d[k+c]}`).join(", ");let g="return outputValue;";const w=Y(n.shapeInfo.logicalShape)===1,$=Y(e.logicalShape)===1;if(o===1&&!w&&!$)g=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(w&&!$)i===1?g=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:g=`
        return vec4(outputValue.x);
      `;else if(a.length){const N=o-2,k=o-1;a.indexOf(N)>-1&&a.indexOf(k)>-1?g="return vec4(outputValue.x);":a.indexOf(N)>-1?g="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(k)>-1&&(g="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${s}() {
      ${u} coords = getOutputCoords();
      ${h}
      vec4 outputValue = get${r}(${f});
      ${g}
    }
  `}function oO(n,e){const t=n.name,r=t.charAt(0).toUpperCase()+t.slice(1),s="get"+r+"AtOutCoords",o=e.texShape,i=n.shapeInfo.texShape,a=n.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!n.shapeInfo.isUniform&&a===u&&n.shapeInfo.flatOffset==null&&ze(i,o))return`
      float ${s}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const c=De(u),h=zb(n.shapeInfo.logicalShape,e.logicalShape),d=u-a;let f;const g=["x","y","z","w","u","v"];a===0?f="":u<2&&h.length>=1?f="coords = 0;":f=h.map(w=>`coords.${g[w+d]} = 0;`).join(`
`);let x="";return u<2&&a>0?x="coords":x=n.shapeInfo.logicalShape.map((w,b)=>`coords.${g[b+d]}`).join(", "),`
    float ${s}() {
      ${c} coords = getOutputCoords();
      ${f}
      return get${r}(${x});
    }
  `}function De(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function cm(n,e,t){const{newShape:r,keptDims:s}=yr(e),o=e.length,i=n&&o===3&&e[0]===1,a=i?e.slice(1):r,u=!n&&o>1&&!ze(e,t)&&r.length<o||i;return{useSqueezeShape:u,uniformShape:u?a:e,keptDims:s}}function yo(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function xo(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iO(n,e,t,r){const s=t.map((h,d)=>{const f={logicalShape:h.shape,texShape:h.isUniform?null:h.texData.texShape,isUniform:h.isUniform,isPacked:h.isUniform?!1:h.texData.isPacked,flatOffset:null};return h.texData!=null&&h.texData.slice!=null&&h.texData.slice.flatOffset>0&&(f.flatOffset=h.texData.slice.flatOffset),{name:e.variableNames[d],shapeInfo:f}}),o=s.map(h=>h.shapeInfo),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},a=CA(s,i,e),u=J_(n.gl,a),c=n.createProgram(u);return W().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:u,source:a,webGLProgram:c,inShapeInfos:o,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(c),Object.assign({program:e,fragmentShader:u,source:a,webGLProgram:c,inShapeInfos:o,outShapeInfo:i},jb(n,e,c)))}function jb(n,e,t){const r=[],s=[];let o,i,a,u=null,c=null;c=n.getUniformLocation(t,"NAN",!1),W().getNumber("WEBGL_VERSION")===1&&(u=n.getUniformLocation(t,"INFINITY",!1));const h=!1;for(const d of e.variableNames){const f={name:d,uniform:n.getUniformLocation(t,d,h),offset:n.getUniformLocation(t,`offset${d}`,h)};e.enableShapeUniforms&&(f.shape=n.getUniformLocation(t,`${d}Shape`,h),f.texShape=n.getUniformLocation(t,`${d}TexShape`,h)),r.push(f)}if(e.enableShapeUniforms&&(o=n.getUniformLocation(t,"outShape",h),a=n.getUniformLocation(t,"outShapeStrides",h),i=n.getUniformLocation(t,"outTexShape",h)),e.customUniforms)for(const d of e.customUniforms)s.push(n.getUniformLocation(t,d.name,h));return{variablesLocations:r,customUniformLocations:s,infLoc:u,nanLoc:c,outShapeLocation:o,outShapeStridesLocation:a,outTexShapeLocation:i}}function xg(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,r)=>{const s=t.logicalShape,o=e[r],i=o.shape;if(!ze(s,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${i} must match`);if(t.isUniform&&o.isUniform)return;const a=t.texShape,u=o.isUniform?null:o.texData.texShape;if(!ze(a,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${u} must match`)})}function aO(n,e,t,r,s){e.program.enableShapeUniforms||(xg(e.inShapeInfos,t),xg([e.outShapeInfo],[r]));const o=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?n.setOutputPackedMatrixTexture(o.texture,i[0],i[1]):n.setOutputMatrixTexture(o.texture,i[0],i[1]),n.setProgram(e.webGLProgram),n.bindVertexArray(e.webGLProgram.vao),W().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN);for(let u=0;u<t.length;++u){const c=t[u],{uniform:h,offset:d,shape:f,texShape:g}=e.variablesLocations[u];if(f){const{uniformShape:x}=cm(e.program.packedInputs,c.shape,c.texData.texShape);switch(x.length){case 1:n.gl.uniform1iv(f,new Int32Array(x));break;case 2:n.gl.uniform2iv(f,new Int32Array(x));break;case 3:n.gl.uniform3iv(f,new Int32Array(x));break;case 4:n.gl.uniform4iv(f,new Int32Array(x));break}}if(g&&n.gl.uniform2i(g,c.texData.texShape[0],c.texData.texShape[1]),h!=null){if(c.isUniform){if(Y(c.shape)<2)n.gl.uniform1f(h,c.uniformValues[0]);else{let x=c.uniformValues;x instanceof Float32Array||(x=new Float32Array(x)),n.gl.uniform1fv(h,x)}continue}c.texData.slice!=null&&d!=null&&n.gl.uniform1i(d,c.texData.slice.flatOffset),n.setInputMatrixTexture(c.texData.texture.texture,h,u)}}const a=e.outShapeLocation;if(a)switch(r.shape.length){case 1:n.gl.uniform1iv(a,new Int32Array(r.shape));break;case 2:n.gl.uniform2iv(a,new Int32Array(r.shape));break;case 3:n.gl.uniform3iv(a,new Int32Array(r.shape));break;case 4:n.gl.uniform4iv(a,new Int32Array(r.shape));break}if(e.outShapeStridesLocation){const u=ot(r.shape);switch(r.shape.length){case 2:n.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(u));break;case 3:n.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(u));break;case 4:n.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(u));break}}if(e.outTexShapeLocation&&n.gl.uniform2i(e.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),e.program.customUniforms&&s)for(let u=0;u<e.program.customUniforms.length;++u){const c=e.program.customUniforms[u],h=e.customUniformLocations[u],d=s[u];if(c.type==="float")n.gl.uniform1fv(h,d);else if(c.type==="vec2")n.gl.uniform2fv(h,d);else if(c.type==="vec3")n.gl.uniform3fv(h,d);else if(c.type==="vec4")n.gl.uniform4fv(h,d);else if(c.type==="int")n.gl.uniform1iv(h,d);else if(c.type==="ivec2")n.gl.uniform2iv(h,d);else if(c.type==="ivec3")n.gl.uniform3iv(h,d);else if(c.type==="ivec4")n.gl.uniform4iv(h,d);else throw Error(`uniform type ${c.type} is not supported yet.`)}n.executeProgram()}function uO(n,e,t){let r="";e.concat(t).forEach(i=>{const a=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!i.isUniform){const u=i.texData.texShape,{useSqueezeShape:c,uniformShape:h,keptDims:d}=cm(n.packedInputs,i.shape,u);let f="",g="",x="";if(h.length===1&&n.packedInputs){const O=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];f=`${O[0]>1}_${O[1]>1}`}else if(h.length===2&&!n.packedInputs)g=`${h[0]>1}_${h[1]>1}`;else if(h.length>2&&!n.packedInputs){const O=ot(h);x=`${O[0]===u[1]}_${O[O.length-1]===u[1]}`}const w=i.shape.length,b=h.length===2&&ze(i.shape,u),$=Y(i.shape)===1,N=Di(i.shape,t.shape),k=!n.packedInputs&&w===t.shape.length&&ze(u,t.texData.texShape),I=n.packedInputs||h.length>2?"":`${u[0]>1}_${u[1]>1}`;r+=`${w}_${k}_${c?d:""}_${h.length}_${$}_${N}_${b}_${f}_${g}_${x}_${I}_${a}`}else{const u=i.isUniform?"uniform":i.texData.texShape;r+=`${i.shape}_${u}_${a}`}});const s=n.userCode;let o=n.constructor.name;return o+="_"+r+"_"+s+`${W().getNumber("WEBGL_VERSION")}`,o}function bt(n){return W().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cO{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Wi.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=It();this.outputShape=e,this.enableShapeUniforms=bt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Lu(["r","c","d"],e):_s(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lO{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Wi.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=It();this.outputShape=e,this.enableShapeUniforms=bt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Lu(["r","c","d"],e):_s(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hO{constructor(e){this.variableNames=["A"],this.outTexUsage=Xt.DOWNLOAD;const t=It();this.outputShape=e,this.userCode=`
      ${Ub}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dO{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Xt.DOWNLOAD;const t=It();this.outputShape=e,this.userCode=`
      ${Ub}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fO={R:0,G:1,B:2,A:3};class bg{constructor(e,t=!1,r="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=It();this.outputShape=e,this.enableShapeUniforms=bt(this.outputShape.length);let o="result";t&&(o="floor(result * 255. + 0.5)");let i="";for(let a=0;a<r.length;a++){const u=r[a];i+=`
          if(offset == ${a}) {
            result = values[${fO[u]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?um():am(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${r.length});

        flatIndex = idiv(flatIndex, ${r.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${s.texture2D}(A, uv);
          ${i}
        }
        ${s.output} = vec4(${o}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pO{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=It();this.outputShape=e,this.enableShapeUniforms=bt(this.outputShape.length);let s="",o="result";t&&(o="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let a=0;a<=1;a++){const u=i*2+a;s+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${r.texture2D}(A, uv);

            if (offset == 0) {
              result[${u}] = values[0];
            } else if (offset == 1) {
              result[${u}] = values[1];
            } else if (offset == 2) {
              result[${u}] = values[2];
            } else {
              result[${u}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?um():am(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${s}

          ${r.output} = ${o};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mO(n){const e=It(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return Z_(n,t)}function gO(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return rA(n,e)}function yO(n){const e=new Uint16Array([0,1,2,2,1,3]);return sA(n,e)}function ua(n,e,t,r,s,o){iA(e,t);const i=oA(n),a=n.TEXTURE_2D;return re(n,()=>n.bindTexture(a,i)),re(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),re(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),re(n,()=>n.texParameteri(a,n.TEXTURE_MIN_FILTER,n.NEAREST)),re(n,()=>n.texParameteri(a,n.TEXTURE_MAG_FILTER,n.NEAREST)),W().getNumber("WEBGL_VERSION")===1?re(n,()=>n.texImage2D(a,0,r,e,t,0,s,o,null)):re(n,()=>n.texStorage2D(a,1,r,e,t)),re(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:i,texShape:[t,e]}}function Hb(n){return n.internalFormatFloat}function xO(n,e,t,r){const[s,o]=ia(e,t);return ua(n,s,o,Hb(r),r.textureFormatFloat,n.FLOAT)}function Kb(n){return n.internalFormatHalfFloat}function bO(n,e,t,r){const[s,o]=ia(e,t);return ua(n,s,o,Kb(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function Xb(n){return n.downloadTextureFormat}function vO(n,e,t,r){const[s,o]=ia(e,t);return ua(n,s,o,Xb(r),n.RGBA,n.UNSIGNED_BYTE)}function qb(n){return n.internalFormatPackedFloat}function wO(n,e,t,r){const[s,o]=po(e,t);return ua(n,s,o,qb(r),n.RGBA,n.FLOAT)}function Yb(n){return n.internalFormatPackedHalfFloat}function $O(n,e,t,r){const[s,o]=po(e,t);return ua(n,s,o,Yb(r),n.RGBA,r.textureTypeHalfFloat)}function SO(n,e,t){return re(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),mg(n,e,"clipSpacePos",t,3,20,0)&&mg(n,e,"uv",t,2,20,12)}function CO(n,e,t,r,s,o){re(n,()=>n.bindTexture(n.TEXTURE_2D,e));let i,a,u;s instanceof Uint8Array?(i=new Uint8Array(t*r*4),a=n.UNSIGNED_BYTE,u=n.RGBA):(i=new Float32Array(t*r*4),a=n.FLOAT,u=o.internalFormatPackedFloat),i.set(s),W().getNumber("WEBGL_VERSION")===2?re(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t,r,n.RGBA,a,i)):re(n,()=>n.texImage2D(n.TEXTURE_2D,0,u,t,r,0,n.RGBA,a,i)),re(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function TO(n,e,t){re(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?W().getNumber("WEBGL_VERSION")===2?re(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):re(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):W().getNumber("WEBGL_VERSION")===2?re(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):re(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),re(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function NO(n,e,t,r){const s=n.createBuffer();re(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,s));const a=4*4*e*t;return re(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,a,n.STREAM_READ)),re(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),re(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),s}function EO(n,e,t){const r=n,s=new Float32Array(t);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}function IO(n,e,t,r){const[s,o]=ia(e,t),i=4,a=new Uint8Array(j_(e*t,i));return re(n,()=>n.readPixels(0,0,s,o,r.downloadTextureFormat,n.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function kO(n,e,t,r,s,o,i,a){const u=n,c=new Float32Array(H_(o,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}function RO(n,e,t){const r=new Float32Array(e*t*4);return re(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,r)),r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kc{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=W().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,z_(t,e)):this.gl=On(t),e=this.gl,W().getNumber("WEBGL_VERSION")===2){const o=e;this.createVertexArray=()=>re(o,()=>o.createVertexArray()),this.bindVertexArray=i=>re(o,()=>o.bindVertexArray(i)),this.deleteVertexArray=i=>re(o,()=>o.deleteVertexArray(i)),this.getVertexArray=()=>re(o,()=>o.getParameter(o.VERTEX_ARRAY_BINDING))}else if(e!=null){const o=e.getExtension("OES_vertex_array_object");if(o==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>re(e,()=>o.createVertexArrayOES()),this.bindVertexArray=i=>re(e,()=>o.bindVertexArrayOES(i)),this.deleteVertexArray=i=>re(e,()=>o.deleteVertexArrayOES(i)),this.getVertexArray=()=>re(e,()=>e.getParameter(o.VERTEX_ARRAY_BINDING_OES))}let r="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),W().getNumber("WEBGL_VERSION")===1){const o="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=Oa(this.gl,o),an(this.gl,i))this.textureHalfFloatExtension=Oa(this.gl,i);else if(W().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(r),an(this.gl,s))this.colorBufferHalfFloatExtension=Oa(this.gl,s);else if(W().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(r="EXT_color_buffer_float",an(this.gl,r))this.colorBufferFloatExtension=this.gl.getExtension(r);else if(an(this.gl,s))this.colorBufferHalfFloatExtension=this.gl.getExtension(s);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=gO(this.gl),this.indexBuffer=yO(this.gl),this.framebuffer=aA(this.gl),this.textureConfig=im(this.gl,this.textureHalfFloatExtension)}get debug(){return W().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;re(e,()=>e.finish()),re(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),re(e,()=>e.deleteFramebuffer(this.framebuffer)),re(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),re(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),re(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),xO(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),bO(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),vO(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),TO(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,r,s){this.throwIfDisposed(),CO(this.gl,e,t,r,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),$O(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),wO(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(gg(this.gl,this.framebuffer),this.outputTexture=null),re(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,r){return this.downloadMatrixDriver(e,()=>IO(this.gl,t,r,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,r,s,o,i){return kO(this.gl,e,t,r,s,o,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return EO(this.gl,e,t)}createBufferFromTexture(e,t,r){this.bindTextureToFrameBuffer(e);const s=NO(this.gl,t,r,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,r;if(W().getBool("WEBGL_FENCE_API_ENABLED")){const s=e,o=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),r=()=>{const i=s.clientWaitSync(o,0,0);return i===s.ALREADY_SIGNALED||i===s.CONDITION_SATISFIED},t=o}else W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),r=()=>this.isQueryAvailable(t,W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):r=()=>!0;return{query:t,isFencePassed:r}}downloadMatrixFromPackedTexture(e,t,r){return this.downloadMatrixDriver(e,()=>RO(this.gl,t,r))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=mO(t));const r=tA(t);re(t,()=>t.attachShader(r,this.vertexShader)),re(t,()=>t.attachShader(r,e)),nA(t,r);const s=Object.assign(r,{vao:this.createVertexArray()});return this.debug&&Wc(t,s),s}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;re(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),SO(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(re(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&Wc(this.gl,this.program),re(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,r=!0){return this.throwIfDisposed(),r?cA(this.gl,e,t):lA(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),re(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,r){this.throwIfDisposed(),this.throwIfNoProgram(),hA(this.gl,e,t,r)}setOutputMatrixTexture(e,t,r){this.setOutputMatrixTextureDriver(e,r,t)}setOutputPackedMatrixTexture(e,t,r){this.throwIfDisposed();const[s,o]=po(t,r);this.setOutputMatrixTextureDriver(e,s,o)}setOutputMatrixWriteRegion(e,t,r,s){this.setOutputMatrixWriteRegionDriver(r,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,r,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Wc(this.gl,this.program),Da(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}re(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),re(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Oa(this.gl,W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const r=this.gl,s=this.getQueryTimerExtensionWebGL2(),o=r.createQuery();return r.beginQuery(s.TIME_ELAPSED_EXT,o),o}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,r=this.getQueryTimerExtensionWebGL2();t.endQuery(r.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await qc(()=>this.disposed||this.isQueryAvailable(e,W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const r=this.gl;return r.getQueryParameter(e,r.QUERY_RESULT)/1e6}else{const r=this.getQueryTimerExtensionWebGL1();return r.getQueryObjectEXT(e,r.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const r=this.gl,s=this.getQueryTimerExtensionWebGL2(),o=r.getQueryParameter(e,r.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),o&&!this.disjoint}else{const r=this.getQueryTimerExtensionWebGL1(),s=r.getQueryObjectEXT(e,r.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),s&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=_O(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:r}=this.itemsToPoll[t];r()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let r;"setTimeoutCustom"in W().platform&&(r=W().platform.setTimeoutCustom.bind(W().platform)),qc(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,r)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Gc(this.gl,e,this.framebuffer),this.debug&&Da(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Gc(this.gl,this.outputTexture,this.framebuffer),this.debug&&Da(this.gl)):gg(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const r=t();return this.unbindTextureToFrameBuffer(),r}setOutputMatrixTextureDriver(e,t,r){this.throwIfDisposed();const s=this.gl;Gc(s,e,this.framebuffer),this.debug&&Da(s),this.outputTexture=e,re(s,()=>s.viewport(0,0,t,r)),re(s,()=>s.scissor(0,0,t,r))}setOutputMatrixWriteRegionDriver(e,t,r,s){this.throwIfDisposed(),re(this.gl,()=>this.gl.scissor(e,t,r,s))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function _O(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AO(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dt(n){return(e,t,r,s,o)=>{const i=Ne(e,t),a=i.length,u=ot(i),c=Y(i),h=pr(o,c),d=e.length,f=t.length,g=ot(e),x=ot(t),w=Di(e,i),b=Di(t,i);if(w.length+b.length===0)for(let $=0;$<h.length;++$)h[$]=n(r[$%r.length],s[$%s.length]);else for(let $=0;$<h.length;++$){const N=pu($,a,u),k=N.slice(-d);w.forEach(M=>k[M]=0);const I=ja(k,d,g),O=N.slice(-f);b.forEach(M=>O[M]=0);const F=ja(O,f,x);h[$]=n(r[I],s[F])}return[h,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OO(n,e,t,r){if(r==="int32"){const s=Int32Array.from(n);return[e,"int32",s]}if(r==="bool"){const s=Xi([0],t),[o,i]=Dt((a,u)=>a!==u?1:0)(e,[],n,s,"bool");return[i,"bool",o]}throw new Error(`Error in Cast: failed to cast ${t} to ${r}`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DO=Dt((n,e)=>n+e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FO(n,e,t,r,s){const o=Y(r),i=mr(s,t);for(let a=0;a<n.length;a++){const u=n[a];if(u<0)throw new Error("Input x must be non-negative!");u>=s||(o>0?i[u]+=e[a]:i[u]+=1)}return i}function PO(n,e,t,r=!1){const s=n.shape[0],o=n.shape[1],i=Ge([s,t],e.dtype);for(let a=0;a<s;a++)for(let u=0;u<o;u++){const c=n.get(a,u);if(c<0)throw new Error("Input x must be non-negative!");c>=t||(r?i.set(1,a,c):e.size>0?i.set(i.get(a,c)+e.get(a,u),a,c):i.set(i.get(a,c)+1,a,c))}return i}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LO=Dt((n,e)=>n&e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vr(n){return(e,t,r)=>{const s=et(t,e.length);for(let o=0;o<e.length;++o)s[o]=n(e[o],r);return s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BO=vr(n=>Math.ceil(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MO(n,e,t,r){const s=et(t,Y(e));if(r&&t!=="string"){let o=0;n.forEach(i=>{const a=Y(i.shape);s.set(i.vals,o),o+=a})}else{let o=0;n.forEach(i=>{const a=t==="string"?ro(i.vals):i.vals;let u=0;for(let c=0;c<i.shape[0];++c){const h=c*e[1]+o;for(let d=0;d<i.shape[1];++d)s[h+d]=a[u++]}o+=i.shape[1]})}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VO=Dt((n,e)=>n===e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UO=vr(n=>Math.exp(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zO=vr(n=>Math.expm1(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WO=vr(n=>Math.floor(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GO=Dt((n,e)=>Math.floor(n/e));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jO(n,e,t,r,s,o,i,a,u){const c=Ge([r,o],t);for(let h=0;h<r;h++){const d=[];let f=0;for(let g=0;g<s;g++){const x=n[h*s+g];f+=x*i[g],d.push(x)}if(f<0||f>=u/o)throw new Error(`Invalid indices: ${d} does not index into ${a}`);for(let g=0;g<o;g++)c.values[h*o+g]=e.get(...e.indexToLoc(f*o+g))}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HO(n,e,t){const r=Ge(t,n.dtype);for(let s=0;s<r.size;++s){const i=r.indexToLoc(s).slice(),a=i[0],u=i[2],c=e.locToIndex([a,u]);i[2]=e.values[c];const h=n.locToIndex(i);0<=h&&h<n.values.length&&(r.values[s]=n.values[h])}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KO=Dt((n,e)=>n>e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XO=Dt((n,e)=>n>=e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qO=Dt((n,e)=>n<e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YO=Dt((n,e)=>n<=e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QO(n,e,t){const r=(e-n)/(t-1),s=mr(t,"float32");s[0]=n;for(let o=1;o<s.length;o++)s[o]=s[o-1]+r;return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZO=vr(n=>Math.log(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JO(n,e,t,r){const s=pr(r,Y(t));for(let o=0;o<s.length;++o){const i=o*e;let a=n[i];for(let u=0;u<e;++u){const c=n[i+u];(Number.isNaN(c)||c>a)&&(a=c)}s[o]=a}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eD=Dt((n,e)=>Math.max(n,e));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tD=Dt((n,e)=>Math.min(n,e));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qb=Dt((n,e)=>n*e);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nD(n,e,t){const r=Es(-1,t);return Qb([],e,r,n,t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rD=Dt((n,e)=>n!==e?1:0);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sD(n,e,t,r,s){const o=e.length,i=Y(e),a=ot(e),u=ot(s),c=pr(t,Y(s));for(let h=0;h<i;++h){const d=pu(h,o,a),f=new Array(d.length);for(let x=0;x<f.length;x++)f[x]=d[r[x]];const g=ja(f,o,u);c[g]=n[h]}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oD(n,e,t,r){const[s,o]=Xn(n,r),i=An(e,"int32"),a=mr(Y(s),i),u=Y(o);for(let c=0;c<a.length;++c){const h=c*u;let d=1;for(let f=0;f<u;++f)d*=t[h+f];a[c]=d}return{outVals:a,outShape:s,outDtype:i}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iD(n,e,t){n.forEach((r,s)=>{if(r<0||r>=t){const o=pu(s,e.length,ot(e)).join(",");throw new Error(`indices[${o}] = ${r} is not in [0, ${t})`)}})}function aD(n,e){for(let t=0;t<n.length;++t){const r=n[t],s=t===n.length-1?e:n[t+1].length;if(r.length===0)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let o=1;o<r.length;++o)if(r[o-1]>r[o])throw new Error("Ragged splits must be sorted in ascending order")}}function uD(n,e,t,r){const s=[];let o=0;const i=e.length-1+t.length,a=new Array(i).fill(null).map(()=>[0]);aD(t,r);let u=1;for(let c=0;c<e.length-1;++c){u*=e[c];const h=e[c+1];for(let d=1;d<u+1;++d)a[c].push(d*h)}for(let c=0;c<n.length;++c){let h=n[c],d=n[c]+1;for(let f=0;f<t.length;++f){const g=t[f],x=f+e.length-1;if(x>=0){const w=a[x],b=w[w.length-1]-g[h];for(let $=h;$<d;++$)a[x].push(g[$+1]+b)}h=g[h],d=g[d]}d!==h&&(s.push([h,d]),o+=d-h)}return{outSplits:a,valueSlices:s,numValues:o}}function cD(n){const e=[];for(let t=0;t<n.length;++t){const r=n[t].length,s=et("int32",r);e.push(s),n[t].forEach((o,i)=>s[i]=o)}return e}function vg(n,e){const t=n.slice(0,e);for(;t.length<e;)t.push(1);for(let r=e;r<n.length;r++)t[e-1]*=n[r];return t}function lD(n,e,t,r,s,o){const i=vg(e,2)[1],a=vg(o,2)[1];let u=0;for(const c of t)for(let h=c[0];h<c[1];++h){for(let d=0;d<r;++d)s[u*a+d]=n[h*i+d];++u}}function hD(n,e,t,r,s){const o=e.slice();o[0]=s;const i=et(t,Y(o)),a=n.length,u=a===0?0:a/e[0];return lD(n,e,r,u,i,o),[i,o]}function dD(n,e,t,r,s,o,i,a){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const u=e[0][0]-1;if(iD(o,i,u),r.length===0)throw new Error("params.rank must be nonzero");const c=r[0],{outSplits:h,valueSlices:d,numValues:f}=uD(o,i,n,c),g=cD(h),x=hD(t,r,s,d,f);return[g,x[0],x[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wg=2147483647;function fD(n,e,t,r,s,o,i){if(e.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const a=e.length===0,u=s.length===0,c=i.length===0,h=[];a||h.push(e[0]),u||h.push(s[0]),c||h.push(i[0]);for(let b=1;b<h.length;++b)if(h[b]!==h[b-1])throw new Error("starts, limits, and deltas must have the same shape");const d=h.length===0?1:h[0],f=et("int32",d+1);f[0]=0;for(let b=0;b<d;++b){const $=a?n[0]:n[b],N=u?r[0]:r[b],k=c?o[0]:o[b];if(k===0)throw new Error("Requires delta != 0");let I;if(k>0&&N<$||k<0&&N>$)I=0;else if(I=Math.ceil(Math.abs((N-$)/k)),I>wg)throw new Error(`Requires ((limit - start) / delta) <= ${wg}`);f[b+1]=f[b]+I}const g=f[d],x=et(t,g);let w=0;for(let b=0;b<d;++b){const $=f[b+1]-f[b];let N=a?n[0]:n[b];const k=c?o[0]:o[b];for(let I=0;I<$;++I)x[w++]=N,N+=k}return[f,x]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Jt=Tn;class cu{constructor(e,t,r,s,o,i,a,u,c,h){this.shape=e,this.shapeShape=t,this.values=r,this.valuesShape=s,this.valuesDType=o,this.defaultValue=i,this.defaultValueShape=a,this.rowPartitionValues=u,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=F1(h),this.raggedRank=P1(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Jt.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Jt.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Jt.VALUE_ROWIDS:return cu.getMaxWidthValueRowID(t);case Jt.ROW_SPLITS:return cu.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${Jt[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let r=0;for(let s=0;s<t-1;++s){const o=e[s+1]-e[s];o>r&&(r=o)}return r}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let r=0,s=e[0],o=0;for(let i=1;i<t;++i){const a=e[i];a!==s&&(s=a,o=Math.max(i-r,o),r=i)}return Math.max(t-r,o)}tensorShapeFromTensor(e,t,r=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Sg(e,r)}calculateOutputSize(e){const t=this.valuesShape,r=this.defaultValueShape;L1(r,t);const s=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=D1(this.raggedRank,s,t);i[0]<0&&(i[0]=e);for(let a=1;a<=this.raggedRank;++a)i[a]<0&&(i[a]=this.getMaxWidth(a));return i}calculateFirstParentOutputIndex(e,t,r){const s=Math.min(e,r),o=[];let i=0;for(let a=0;a<s;++a,i+=t)o.push(i);for(let a=s;a<e;++a)o.push(-1);return A(o.length===e,()=>"Final length of result must be equal to firstDimension."),o}calculateOutputIndexRowSplit(e,t,r,s){const o=e.length,i=[];for(let a=0;a<o-1;++a){const u=e[a+1]-e[a];let c=Math.min(s,u),h=t[a];h===-1&&(c=0);for(let d=0;d<c;++d)i.push(h),h+=r;for(let d=0;d<u-c;++d)i.push(-1)}if(o>0&&i.length!==e[o-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,t,r,s){const o=e.length,i=[];if(o===0)return[];let a=0,u=e[0];if(u>=t.length)throw new Error(`Got currentValueRowId=${u}, which is not less than ${t.length}`);let c=t[u];i.push(c);for(let h=1;h<o;++h){const d=e[h];if(d===u)c>=0&&(++a,a<s?c+=r:c=-1);else{if(a=0,u=d,d>=t.length)throw new Error(`Got nextValueRowId=${d} which is not less than ${t.length}`);c=t[d]}i.push(c)}if(i.length!==e.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(e,t,r,s){const o=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case Jt.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(o,t,r,s);case Jt.ROW_SPLITS:if(o.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${o.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(o,t,r,s);default:throw new Error(`Unsupported partition type: ${Jt[i]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case Jt.FIRST_DIM_SIZE:return e[0];case Jt.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Jt.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Jt[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),r=this.calculateOutputSize(t),s=new Array(this.raggedRank+1);s[s.length-1]=1;for(let u=s.length-2;u>=0;--u)s[u]=s[u+1]*r[u+1];const o=Sg(r,!1),i=et(this.valuesDType,Y(o));if(s[0]*r[0]>0){let u=this.calculateFirstParentOutputIndex(t,s[0],r[0]);for(let c=1;c<=this.raggedRank;++c)u=this.calculateOutputIndex(c-1,u,s[c],r[c]);this.setOutput(this.raggedRank,u,i,o)}return[o,i]}setOutput(e,t,r,s){if(r.length===0)return;const o=this.values,i=r;let a=s.slice();a=a.slice(e+1);const u=Y(a),c=t.length;let h=this.defaultValue;if(h.length!==u&&h.length!==1){const x=this.defaultValueShape;ce(()=>{const w=K(h,x);h=Ks(w,a).dataSync()})}let d=0,f=0,g=0;for(let x=0;x<=c;++x){let w=x<c?t[x]:-1;if(w===g){++g;continue}if(f<g){const b=o.subarray(d*u),$=i.subarray(f*u),N=(g-f)*u;$g($,b,N)}if(x>=c){const b=r.length;w=Math.floor(b/u)}if(w>g)if(this.defaultValue.length===1)i.subarray(g*u,w*u).fill(this.defaultValue[0]),g=w;else for(;w>g;){const b=i.slice(g*u);$g(b,h,u),++g}w<0?(d=x+1,f=g):(d=x,f=g,g=f+1)}}}function $g(n,e,t){for(let r=0;r<t;r++)n[r]=e[r]}function Sg(n,e){const t=[];for(let r of n){if(r<0){if(!e)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}t.push(r)}return t}function pD(n,e,t,r,s,o,i,a,u,c){return new cu(n,e,t,r,s,o,i,a,u,c).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mD(n,e,t,r){const s=n===e,o=n<e&&t<0,i=e<n&&t>1;if(s||o||i)return mr(0,r);const a=Math.abs(Math.ceil((e-n)/t)),u=mr(a,r);e<n&&t===1&&(t=-1),u[0]=n;for(let c=1;c<u.length;c++)u[c]=u[c-1]+t;return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gD=vr(n=>1/Math.sqrt(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yD(n,e,t,r,s,o,i,a,u,c){const h=[r/s,s],d=n.values,f=e.values;if(r===0)return Ge(t,e.dtype);const g=u instanceof gs?u:Ge(h,e.dtype);typeof u=="string"||typeof u=="number"?g.values.fill(u):typeof u=="boolean"&&g.values.fill(+u);for(let x=0;x<o;x++){const w=[];let b=0;for(let $=0;$<i;$++){const N=d[x*i+$];w.push(N),b+=N*a[$]}if(b<0||b>=r/s)throw new Error(`Invalid indices: ${w} does not index into ${t}`);for(let $=0;$<s;$++)c?g.values[b*s+$]+=f[x*s+$]:g.values[b*s+$]=e.rank===0?f[0]:f[x*s+$]}return g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xD=vr(n=>1/(1+Math.exp(-n)));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bD(n,e,t,r,s){const o=qp(r,e,t),i=Y(t),a=ot(r);if(o){const d=Yp(e,a);return s==="string"?n.slice(d,d+i):n.subarray(d,d+i)}const u=s==="string"?ro(n):n,c=Ge(r,s,u),h=Ge(t,s);for(let d=0;d<h.size;++d){const f=h.indexToLoc(d),g=f.map((x,w)=>x+e[w]);h.set(c.get(...g),...f)}return s==="string"?mb(h.values):h.values}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vD(n,e,t,r,s,o,i){const a=e[0],u=o[0],c=new Array(u),h=new Array(a),d=e[1];if(u===0){if(a!==0)throw new Error(tb(a));const b=et(t,0),$=et(s,0);return[b,[0,d],$,c,h]}let f=!0,g=0;const x=new Array(u).fill(0);for(let b=0;b<a;++b){const $=n[b*d];if($<0)throw new Error(nb(b,$));if($>=u)throw new Error(rb(b,$,u));++x[$],f=f&&$>=g,g=$}let w=!0;for(let b=0;b<u;++b){const $=x[b]===0;c[b]=$,w=w&&!$,x[b]=Math.max(x[b],1),b>0&&(x[b]+=x[b-1])}if(w&&f){const b=n,$=r;for(let N=0;N<a;++N)h[N]=N;return[b,[a,d],$,c,h]}else{const b=x[u-1],$=et(t,b*d),N=et(s,b),k=new Array(u).fill(0);for(let I=0;I<a;++I){const O=n[I*d],F=k[O],M=(O===0?0:x[O-1])+F;k[O]++;for(let B=0;B<d;++B)$[M*d+B]=n[I*d+B];N[M]=r[I],h[I]=M}for(let I=0;I<u;++I)if(k[I]===0){const F=I===0?0:x[I-1];$[F*d+0]=I;for(let M=1;M<d;++M)$[F*d+M]=0;N[F]=i}return[$,[b,d],N,c,h]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wD(n,e,t,r,s){const o=Y(r),i=e[0],a=s.length,u=[];let c=1,h=-1;for(let b=0;b<a;++b){const $=s[b];if($===-1){if(h!==-1)throw new Error(sb(h,b));h=b,u.push(1)}else{if($<0)throw new Error(ob(b,$));c*=$,u.push($)}}if(h!==-1){if(c<=0)throw new Error(ib());const b=Math.trunc(o/c);if(c*b!==o)throw new Error(ab(r,u));u[h]=b}if(Y(u)!==o)throw new Error(ub(r,u));const f=r.length,g=[];if(f>0){g[f-1]=1;for(let b=f-2;b>=0;--b)g[b]=g[b+1]*r[b+1]}const x=[];if(a>0){x[a-1]=1;for(let b=a-2;b>=0;--b)x[b]=x[b+1]*u[b+1]}const w=et(t,i*a);for(let b=0;b<i;++b){let $=0;for(let N=0;N<f;++N)$+=n[b*f+N]*g[N];for(let N=0;N<a;++N)w[b*a+N]=Math.trunc($/x[N]),$%=x[N]}return[w,[i,a],u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $D(n,e,t,r,s,o=!1,i=0){const a=r.length,u=[e[0],n.length/e[0]],c=u[1],d=a>0?s[a-1]+1:0;if(d<0)throw new Error(ml());const f=e.slice();f[0]=d;const g=f.reduce((k,I)=>k*I,1),x=et(t,g);if(a===0)return d>0&&x.fill(i),[x,f];if(d<=0)throw new Error(ml());let w=0,b=1,$=0,N=s[w];for(;;){let k=0;if(b<a){if(k=s[b],N===k){++b;continue}if(N>=k)throw new Error(cb())}if(N<0||N>=d)throw new Error(lb(N,d));N>$&&x.fill(i,$*c,N*c);for(let I=w;I<b;++I){const O=r[I];if(O<0||O>=u[0])throw new Error(hb(I,r[I],u[0]));for(let F=0;F<c;F++)x[N*c+F]+=n[O*c+F]}if(o)for(let I=0;I<c;I++)x[N*c+I]/=b-w;if(w=b,++b,$=N+1,N=k,b>a)break}return $<d&&x.fill(i,$*c,d*c),[x,f]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SD=vr(n=>Math.sqrt(n));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CD=Dt((n,e)=>{const t=n-e;return t*t});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TD=vr((n,e)=>{const{pattern:t,replaceGlobal:r,rewrite:s}=e;return n.replace(new RegExp(t,r?"g":""),s)});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ND(n,e,t,r){const s=Ge(n,e.dtype);for(let o=0;o<s.size;o++){const i=s.indexToLoc(o),a=new Array(i.length);for(let u=0;u<a.length;u++)a[u]=i[u]*t[u]+r[u];s.set(e.get(...a),...i)}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ED{constructor(e,t,r,s,o,i){this.separator=lr(e),this.nGramWidths=t,this.leftPad=lr(r),this.rightPad=lr(s),this.padWidth=o,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const r=this.getPadWidth(t);return Math.max(0,e+2*r-t+1)}createNGrams(e,t,r,s,o,i){for(let a=0;a<o;++a){const u=this.getPadWidth(i),c=Math.max(0,u-a),h=Math.max(0,u-(o-(a+1))),d=i-(c+h),f=t+(c>0?0:a-u);let g=0;g+=c*this.leftPad.length;for(let N=0;N<d;++N)g+=e[f+N].length;g+=h*this.rightPad.length;const x=c+h+d-1;g+=x*this.separator.length,r[s+a]=new Uint8Array(g);const w=r[s+a];let b=0;const $=N=>N.forEach(k=>w[b++]=k);for(let N=0;N<c;++N)$(this.leftPad),$(this.separator);for(let N=0;N<d-1;++N)$(e[f+N]),$(this.separator);if(d>0){$(e[f+d-1]);for(let N=0;N<h;++N)$(this.separator),$(this.rightPad)}else{for(let N=0;N<h-1;++N)$(this.rightPad),$(this.separator);$(this.rightPad)}}}compute(e,t){const r=e.length,s=t.length;if(s>0){let u=t[0];if(u!==0)throw new Error(`First split value must be 0, got ${u}`);for(let c=1;c<s;++c){let h=t[c]>=u;if(h=h&&t[c]<=r,!h)throw new Error(`Invalid split value ${t[c]}, must be in [${u}, ${r}]`);u=t[c]}if(u!==r)throw new Error(`Last split value must be data size. Expected ${r}, got ${u}`)}const o=s-1,i=et("int32",s);if(r===0||s===0){const u=new Array(r);for(let c=0;c<=o;++c)i[c]=0;return[u,i]}i[0]=0;for(let u=1;u<=o;++u){const c=t[u]-t[u-1];let h=0;this.nGramWidths.forEach(d=>{h+=this.getNumNGrams(c,d)}),this.preserveShort&&c>0&&h===0&&(h=1),i[u]=i[u-1]+h}const a=new Array(i[o]);for(let u=0;u<o;++u){const c=t[u];let h=i[u];if(this.nGramWidths.forEach(d=>{const f=t[u+1]-t[u],g=this.getNumNGrams(f,d);this.createNGrams(e,c,a,h,g,d),h+=g}),this.preserveShort&&h===i[u]){const d=t[u+1]-t[u];if(d===0)continue;const f=d+2*this.padWidth;this.createNGrams(e,c,a,h,1,f)}}return[a,i]}}function ID(n,e,t,r,s,o,i,a){return new ED(t,r,s,o,i,a).compute(n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kD(n,e,t,r){if(!n.length)return;if(e.length===0){for(let o=0;o<n.length;++o)r.push(n.subarray(o,o+1));return}if(e.length===1){const o=e[0];let i=n.indexOf(o);for(;i!==-1;){const a=n.subarray(0,i);(!t||a.length!==0)&&r.push(a),n=n.subarray(i+1),i=n.indexOf(o)}(!t||n.length!==0)&&r.push(n);return}let s=0;for(let o=0;o<n.length+1;o++)if(o===n.length||e.indexOf(n[o])!==-1){const i=n.subarray(s,o);(!t||i.length!==0)&&r.push(i),s=o+1}}function RD(n,e,t){const r=n.length,s=[];let o=0,i=0;const a=new Array(r);for(let f=0;f<r;++f){const g=s.length;kD(n[f],e,t,s);const x=s.length-g;a[f]=x,o+=x,i=Math.max(i,x)}const u=et("int32",o*2),c=new Array(o),h=[r,i];let d=0;for(let f=0;f<r;++f)for(let g=0;g<a[f];++g)u[d*2]=f,u[d*2+1]=g,c[d]=s[d],++d;return[u,c,h]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _D(n,e){const t=et("int32",n.length);for(let r=0;r<n.length;++r)t[r]=Ty(n[r]).modulo(e).getLowBitsUnsigned();return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AD=Dt((n,e)=>n-e);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OD(n,e){const t=new Array(n.rank);for(let s=0;s<t.length;s++)t[s]=n.shape[s]*e[s];const r=Ge(t,n.dtype);for(let s=0;s<r.values.length;++s){const o=r.indexToLoc(s),i=new Array(n.rank);for(let u=0;u<i.length;u++)i[u]=o[u]%n.shape[u];const a=n.locToIndex(i);r.values[s]=n.values[a]}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $i=(n,e)=>{const t=e.value-n.value;return t===0?n.index-e.index:t};function Zb(n,e,t=0,r=n.length-1){for(;r>t;){if(r-t>600){const a=r-t+1,u=e-t+1,c=Math.log(a),h=.5*Math.exp(2*c/3),d=.5*Math.sqrt(c*h*(a-h)/a)*Math.sign(u-a/2),f=Math.max(t,Math.floor(e-u*h/a+d)),g=Math.min(r,Math.floor(e+(a-u)*h/a+d));Zb(n,e,f,g)}const s=n[e];let o=t,i=r;for(ar(n,t,e),$i(n[r],s)>0&&ar(n,t,r);o<i;){for(ar(n,o,i),o++,i--;$i(n[o],s)<0;)o=o+1;for(;$i(n[i],s)>0;)i=i-1}$i(n[t],s)===0?ar(n,t,i):(i=i+1,ar(n,i,r)),i<=e&&(t=i+1),e<=i&&(r=i-1)}}function DD(n,e,t,r,s){const o=e[e.length-1],[i,a]=[n.length/o,o],u=pr(t,i*r),c=pr("int32",i*r);for(let d=0;d<i;d++){const f=d*a,g=n.subarray(f,f+a);let x=new Array(g.length);g.forEach((N,k)=>x[k]={value:N,index:k}),r<x.length&&(Zb(x,r),x=x.slice(0,r)),s&&x.sort($i);const w=d*r,b=u.subarray(w,w+r),$=c.subarray(w,w+r);for(let N=0;N<r;N++)b[N]=x[N].value,$[N]=x[N].index}const h=e.slice();return h[h.length-1]=r,[Ge(h,t,u),Ge(h,"int32",c)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FD(n,e,t,r){const s=tt(e,t)[0],o=[1,t[0],1];for(let x=0;x<s;x++)o[0]*=t[x];o[1]=t[s];for(let x=s+1;x<t.length;x++)o[2]*=t[x];const i=new Map,a=new Int32Array(t[s]),u=new gs(o,r,n),c=[],h=o[0]===1&&o[2]===1;for(let x=0;x<t[s];x++){let w;if(h)w=n[x].toString();else{const $=[];for(let N=0;N<o[0];N++)for(let k=0;k<o[2];k++)$.push(u.get(N,x,k));w=$.join(",")}const b=i.get(w);if(b!=null)a[x]=b;else{const $=i.size;i.set(w,$),a[x]=$,c.push(x)}}const d=o.slice();d[1]=i.size;const f=new gs(d,r);c.forEach((x,w)=>{for(let b=0;b<o[0];b++)for(let $=0;$<o[2];$++)f.set(u.get(b,x,$),b,w,$)});const g=t.slice();return g[s]=d[1],{outputValues:f.values,outputShape:g,indices:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PD=Object.freeze(Object.defineProperty({__proto__:null,addImpl:DO,bincountImpl:FO,bincountReduceImpl:PO,bitwiseAndImpl:LO,castImpl:OO,ceilImpl:BO,concatImpl:MO,equalImpl:VO,expImpl:UO,expm1Impl:zO,floorDivImpl:GO,floorImpl:WO,gatherNdImpl:jO,gatherV2Impl:HO,greaterEqualImpl:XO,greaterImpl:KO,lessEqualImpl:YO,lessImpl:qO,linSpaceImpl:QO,logImpl:ZO,maxImpl:JO,maximumImpl:eD,minimumImpl:tD,multiplyImpl:Qb,negImpl:nD,notEqualImpl:rD,prodImpl:oD,raggedGatherImpl:dD,raggedRangeImpl:fD,raggedTensorToTensorImpl:pD,rangeImpl:mD,rsqrtImpl:gD,scatterImpl:yD,sigmoidImpl:xD,simpleAbsImpl:AO,sliceImpl:bD,sparseFillEmptyRowsImpl:vD,sparseReshapeImpl:wD,sparseSegmentReductionImpl:$D,sqrtImpl:SD,squaredDifferenceImpl:CD,staticRegexReplaceImpl:TD,stridedSliceImpl:ND,stringNGramsImpl:ID,stringSplitImpl:RD,stringToHashBucketFastImpl:_D,subImpl:AD,tileImpl:OD,topKImpl:DD,transposeImpl:sD,uniqueImpl:FD},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:LD,bincountImpl:Jb,bincountReduceImpl:BD,bitwiseAndImpl:MD,castImpl:VD,ceilImpl:UD,concatImpl:zD,equalImpl:WD,expImpl:GD,expm1Impl:jD,floorImpl:HD,gatherNdImpl:KD,gatherV2Impl:XD,greaterImpl:qD,greaterEqualImpl:YD,lessImpl:QD,lessEqualImpl:ZD,linSpaceImpl:JD,logImpl:eF,maxImpl:tF,maximumImpl:nF,minimumImpl:rF,multiplyImpl:sF,negImpl:oF,notEqualImpl:iF,prodImpl:aF,raggedGatherImpl:uF,raggedRangeImpl:cF,raggedTensorToTensorImpl:lF,rangeImpl:hF,rsqrtImpl:dF,scatterImpl:fF,sigmoidImpl:pF,simpleAbsImpl:ev,sliceImpl:mF,sparseFillEmptyRowsImpl:gF,sparseReshapeImpl:yF,sparseSegmentReductionImpl:tv,sqrtImpl:xF,staticRegexReplaceImpl:bF,stridedSliceImpl:vF,stringNGramsImpl:wF,stringSplitImpl:$F,stringToHashBucketFastImpl:SF,subImpl:CF,tileImpl:TF,topKImpl:NF,transposeImpl:lm,uniqueImpl:EF}=PD;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nv(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function Nt(n,e){return e===1?[n]:nv(n,e)}function IF(n,e){if(n===1)return"rc";let t="";for(let r=0;r<n;r++)t+=e[r],r<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kF{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=bt(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=Nt("rc",this.rank),r=De(this.rank),s=this.getOutOfBoundsCondition(t),o=this.getSetup(t),i=this.getOutput(t);this.userCode=`
        void main() {
          ${r} rc = getOutputCoords();

          if(${s}) {
            setOutput(vec4(0));
          } else {
            ${o}

            setOutput(vec4(${i}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let o=`${r===0?"r":"rp1"}, ${s===0?"c":"cp1"}`;for(let i=2;i<this.rank;i++)o=`${e[e.length-1-i]},`+o;t.push(o)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let r=this.rank-2;r<this.rank;r++)t+=`${e[r]} >= ${this.enableShapeUniforms?`outShape[${r}]`:this.outputShape[r]}`,r<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),r=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${r};
      bool rEdge = rp1 >= ${s};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rv{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=bt(this.outputShape.length);let r="";for(let s=0;s<4;s++){let o="thisRC = rc;";s%2===1&&(o+="thisRC.z += 1;"),s>1&&(o+="thisRC.y += 1;"),r+=`
        ${o}
        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${s}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${s>0?"}":""}
      `}this.userCode=`
      ${RF(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?um():am(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${r}

        setOutput(result);
      }
    `}}function RF(n,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?SA(["r","c","d"],"inputShape"):_s(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _F{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,r){const s=Tg(t,r),o=Ng(e,s,r);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const i=Cg(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,r);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const u=this.freeTextures[o].pop();return this.usedTextures[o].push(u),u}let a;return s===ht.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===ht.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===ht.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===ht.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===ht.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[o].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(e,t,r,s){if(this.freeTextures==null)return;const o=Tg(r,s),i=Ng(t,o,s);i in this.freeTextures||(this.freeTextures[i]=[]);const a=Cg(t,o,this.gpgpu.gl,this.gpgpu.textureConfig,s),u=W().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");u!==-1&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const c=this.usedTextures[i],h=c&&c.indexOf(e);if(h==null||h<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c[h]=c[c.length-1],c.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function AF(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function Cg(n,e,t,r,s){const o=OF(e,r);let i;if(s){const[u,c]=po(n[0],n[1]);i=u*c}else{const[u,c]=ia(n[0],n[1]);i=u*c}const a=AF(t,o);return i*a}function OF(n,e){switch(n){case ht.PACKED_2X2_FLOAT32:return qb(e);case ht.PACKED_2X2_FLOAT16:return Yb(e);case ht.UNPACKED_FLOAT32:return Hb(e);case ht.UNPACKED_FLOAT16:return Kb(e);case ht.PACKED_4X1_UNSIGNED_BYTE:return Xb(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function DF(n){return W().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?ht.PACKED_2X2_FLOAT32:ht.UNPACKED_FLOAT32:n?ht.PACKED_2X2_FLOAT16:ht.UNPACKED_FLOAT16}function Tg(n,e){if(n===Xt.UPLOAD)return ht.PACKED_2X2_FLOAT32;if(n===Xt.RENDER||n==null)return DF(e);if(n===Xt.DOWNLOAD||n===Xt.PIXELS)return ht.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function Ng(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vn{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=bt(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const fn="if (isnan(x)) return x;",FF="return x;",Eg="return abs(x);",PF="return (x >= 0.0) ? x : (exp(x) - 1.0);",LF=fn+`
  return (x < 0.0) ? 0.0 : x;
`,BF=fn+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,$r="return x;",MF="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VF="return x;",UF=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,zF=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,WF=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,GF="return 1.0 / (1.0 + exp(-1.0 * x));";class Nr{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=bt(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jF{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=bt(this.outputShape.length);const t=e.length,r=Nt("rc",t),s=De(t),o=IF(t,r),i=r.slice(-2),a=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${s} rc = getOutputCoords();
        vec4 packedInput = getA(${o});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HF=Ap,KF=1e-7,XF=1e-4,La={};function qF(n){return n in La||(La[n]={}),La[n]}const YF=W().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),QF=600;function ZF(){return W().global.screen==null?1024:W().global.screen.height*W().global.screen.width*window.devicePixelRatio*QF/1024/1024}class Bu extends Ol{nextDataId(){return Bu.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!W().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof Kc)t=e;else{const r=On(W().getNumber("WEBGL_VERSION"),e);t=new Kc(r)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const r=On(W().getNumber("WEBGL_VERSION"));t=new Kc(r),this.binaryCache=qF(W().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new _F(this.gpgpu),this.numMBBeforeWarning=ZF(),this.texData=new Hg(this,Sn())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,r,s,o,i){const a=this.makeTensorInfo(t,r),u=this.texData.get(a.dataId);u.isPacked=!1,u.texture={texture:e,texShape:[s,o]},u.texShape=[s,o];const c=Fa(t),h=new bg(c,!1,i),d=this.runWebGLProgram(h,[a],r,[[s,o]]);return d.shape=t,u.texture=null,this.disposeIntermediateTensorInfo(a),d.dataId}write(e,t,r){if((W().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||W().getBool("DEBUG"))&&this.checkNumericalProblems(e),r==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:r,values:e,usage:Xt.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,r,s,o){if(W().getBool("DEBUG")&&this.checkNumericalProblems(t),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:r,dtype:s,values:t,usage:Xt.UPLOAD,refCount:o})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:r,dtype:s,complexTensorInfos:o,slice:i,shape:a,isPacked:u}=t;if(i!=null){let f;u?f=new Nr(a,$r):f=new Vn(a,$r);const g=this.runWebGLProgram(f,[{dataId:e,shape:a,dtype:s}],s),x=this.readSync(g.dataId);return this.disposeIntermediateTensorInfo(g),x}if(r!=null)return this.convertAndCacheOnCPU(e);if(s==="string")return r;const c=this.activeTimers!=null;let h;c&&(h=tn());let d;if(s==="complex64"){const f=this.readSync(o.real.dataId),g=this.readSync(o.imag.dataId);d=pl(f,g)}else d=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=tn()-h),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const x=this.pendingRead.get(e);return new Promise(w=>x.push(w))}const t=this.texData.get(e),{values:r,shape:s,slice:o,dtype:i,complexTensorInfos:a,isPacked:u}=t;if(o!=null){let x;u?x=new Nr(s,$r):x=new Vn(s,$r);const w=this.runWebGLProgram(x,[{dataId:e,shape:s,dtype:i}],i),b=this.read(w.dataId);return this.disposeIntermediateTensorInfo(w),b}if(r!=null)return this.convertAndCacheOnCPU(e);if(W().getBool("DEBUG")&&!W().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&W().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,h;if(i!=="complex64"&&W().get("WEBGL_BUFFER_SUPPORTED")){h=this.decode(e);const x=this.texData.get(h.dataId);c=this.gpgpu.createBufferFromTexture(x.texture.texture,...Aa(s))}this.pendingRead.set(e,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let d;if(i==="complex64"){const x=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),w=x[0],b=x[1];d=pl(w,b)}else if(c==null)d=this.getValuesFromTexture(e);else{const x=Y(s);d=this.gpgpu.downloadFloat32MatrixFromBuffer(c,x)}if(h!=null&&this.disposeIntermediateTensorInfo(h),c!=null){const x=this.gpgpu.gl;re(x,()=>x.deleteBuffer(c))}const f=this.convertAndCacheOnCPU(e,d),g=this.pendingRead.get(e);return this.pendingRead.delete(e),g.forEach(x=>x(f)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Sn().removeDataId(e,this),this.pendingDeletes--),f}readToGPU(e,t={}){const r=this.texData.get(e),{values:s,shape:o,slice:i,dtype:a,isPacked:u,texture:c}=r;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let g;u?g=new Nr(o,$r):g=new Vn(o,$r);const x=this.runWebGLProgram(g,[{dataId:e,shape:o,dtype:a}],a),w=this.readToGPU(x,t);return this.disposeIntermediateTensorInfo(x),w}if(c==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const h=this.decode(e,t.customTexShape),d=Sn().makeTensorFromTensorInfo(h),f=this.texData.get(h.dataId);return Object.assign({tensorRef:d},f.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const r=t.map(s=>ms(s));return Ge(e.shape,e.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Ge(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const r=e[t];if(!Y_(r))throw W().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${r} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${r} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:r,isPacked:s}=this.texData.get(e),o=Y(t);if(W().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const f=this.decode(e),g=this.texData.get(f.dataId),x=this.gpgpu.downloadMatrixFromPackedTexture(g.texture.texture,...Aa(t)).subarray(0,o);return this.disposeIntermediateTensorInfo(f),x}const i=W().getBool("WEBGL_PACK")&&s===!0,a=i?Fa(t):t,u=i?new dO(a):new hO(a),c=this.runWebGLProgram(u,[{shape:a,dtype:r,dataId:e}],"float32"),h=this.texData.get(c.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(h.texture.texture,h.texShape[0],h.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(c),d}timerAvailable(){return W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,r=[];let s=!1;this.programTimersStack==null?(this.programTimersStack=r,s=!0):this.activeTimers.push(r),this.activeTimers=r,e();const o=Un(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),i=Un(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=t,s&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const u=await Promise.all(o);a.kernelMs=Xg(u),a.getExtraProfileInfo=()=>u.map((c,h)=>({name:i[h],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:tn(),endMs:null}}endTimer(e){return W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=tn(),e)}async getQueryTime(e){if(W().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:r}=this.texData.get(e);return r!=null&&(this.disposeData(r.real.dataId,t),this.disposeData(r.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:r,texShape:s,usage:o,isPacked:i,slice:a}=this.texData.get(e),u=a&&a.origDataId||e,c=this.dataRefCount.get(u);c>1?this.dataRefCount.set(u,c-1):(this.dataRefCount.delete(u),t!=null&&(this.numBytesInGPU-=this.computeBytes(s,r),this.textureManager.releaseTexture(t,s,o,i)));const h=this.texData.get(e);h.texture=null,h.texShape=null,h.isPacked=!1,h.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=YF){return W().getBool("WEBGL_CPU_FORWARD")&&e.every(r=>this.texData.get(r.dataId).texture==null&&Y(r.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){nn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return HF(e.shape,t)}packedUnaryOp(e,t,r){const s=new Nr(e.shape,t),o=this.compileAndRun(s,[e],r);return Sn().makeTensorFromTensorInfo(o)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const s=ev(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if(W().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Eg,e.dtype);const t=new Vn(e.shape,Eg),r=this.compileAndRun(t,[e]);return Sn().makeTensorFromTensorInfo(r)}makeTensorInfo(e,t,r){let s;if(t==="string"&&r!=null&&r.length>0&&cr(r[0])){const o=r.map(i=>lr(i));s=this.write(o,e,t)}else s=this.write(r,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,r){return Sn().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,r),this)}unpackTensor(e){const t=new jF(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new kF(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const r=[so(e.shape),...oo(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},o=[so(t),...oo(t)],i=new rv(o,r),a=!0,u=[r],c=this.runWebGLProgram(i,[s],e.dtype,u,a);return{dataId:c.dataId,shape:t,dtype:c.dtype}}decode(e,t){const r=this.texData.get(e),{isPacked:s,shape:o,dtype:i}=r;if(t!=null){const f=Y(o),g=t[0]*t[1]*4;A(f<=g,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const a=Fa(o);let u;s?u=new lO(a):u=new cO(a);const c=!0,h=[t??Aa(a)],d=this.runWebGLProgram(u,[{shape:a,dtype:i,dataId:e}],i,h,c,t);return{dtype:i,shape:o,dataId:d.dataId}}runWebGLProgram(e,t,r,s,o=!1,i){const a=this.makeTensorInfo(e.outputShape,r),u=this.texData.get(a.dataId);if(e.packedOutput&&(u.isPacked=!0),e.outPackingScheme===Wi.DENSE){const $=i??Aa(e.outputShape);u.texShape=$.map(N=>N*2)}if(e.outTexUsage!=null&&(u.usage=e.outTexUsage),Y(a.shape)===0)return u.values=pr(a.dtype,0),a;const c=[],h=t.map($=>{if($.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let N=this.texData.get($.dataId);if(N.texture==null){if(!e.packedInputs&&Y($.shape)<=W().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:$.shape,texData:null,isUniform:!0,uniformValues:N.values};e.packedInputs&&(N.isPacked=!0,N.shape=$.shape)}if(this.uploadToGPU($.dataId),!!N.isPacked!=!!e.packedInputs)$=N.isPacked?this.unpackTensor($):this.packTensor($),c.push($),N=this.texData.get($.dataId);else if(N.isPacked&&!uu(N.shape,$.shape)){const k=$,I=$.shape;$.shape=N.shape,$=this.packedReshape($,I),c.push($),N=this.texData.get($.dataId),k.shape=I}return{shape:$.shape,texData:N,isUniform:!1}});this.uploadToGPU(a.dataId);const d={shape:a.shape,texData:u,isUniform:!1},f=uO(e,h,d),g=this.getAndSaveBinary(f,()=>iO(this.gpgpu,e,h,d)),x=this.activeTimers!=null;let w;x&&(w=this.startTimer()),W().get("ENGINE_COMPILE_ONLY")||aO(this.gpgpu,g,h,d,s),c.forEach($=>this.disposeIntermediateTensorInfo($)),x&&(w=this.endTimer(w),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(w)}));const b=W().getNumber("WEBGL_FLUSH_THRESHOLD");if(b>0){const $=tn();$-this.lastGlFlushTime>b&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=$)}if(!W().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&o===!1){const $=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),$}return a}compileAndRun(e,t,r,s,o=!1){return r=r||t[0].dtype,this.runWebGLProgram(e,t,r,s,o)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(W().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=ce(()=>{if(!W().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=W().getBool("DEBUG");W().set("DEBUG",!1);const t=this.abs(be(1e-8)).dataSync()[0];if(W().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?KF:XF}uploadToGPU(e){const t=this.texData.get(e),{shape:r,dtype:s,values:o,texture:i,usage:a,isPacked:u}=t;if(i!=null)return;const c=this.activeTimers!=null;let h;c&&(h=tn());let d=t.texShape;if(d==null&&(d=pA(r,u),t.texShape=d),o!=null){const f=Fa(r);let g,x=d[1],w=d[0];const b=o instanceof Uint8Array||o instanceof Uint8ClampedArray;(u||!b)&&([x,w]=po(d[0],d[1])),u?g=new pO(f,b):g=new bg(f,b);const $=b?[w,x]:d,N=this.makeTensorInfo($,s),k=this.texData.get(N.dataId);b?k.usage=Xt.PIXELS:k.usage=Xt.UPLOAD,k.texShape=$,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(N.dataId),x,w,o);const I=[[w,x]],F=this.runWebGLProgram(g,[N],s,I,!0),M=this.texData.get(F.dataId);t.texShape=M.texShape,t.isPacked=M.isPacked,t.usage=M.usage,W().get("ENGINE_COMPILE_ONLY")?this.disposeData(F.dataId):(t.texture=M.texture,t.values=null,this.texData.delete(F.dataId)),this.disposeIntermediateTensorInfo(N),c&&(this.uploadWaitMs+=tn()-h)}else{const f=this.acquireTexture(d,a,s,u);t.texture=f}}convertAndCacheOnCPU(e,t){const r=this.texData.get(e),{dtype:s}=r;return t!=null&&(r.values=JF(t,s)),r.values}acquireTexture(e,t,r,s){if(this.numBytesInGPU+=this.computeBytes(e,r),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${o} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*Ni(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const r=new Promise(s=>{try{this.checkCompletion_(t),s(!0)}catch(o){throw o}});e.push(r)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await A1(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(Vb(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:r,infLoc:s,nanLoc:o,outShapeLocation:i,outShapeStridesLocation:a,outTexShapeLocation:u}=jb(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=r,e.infLoc=s,e.nanLoc=o,e.outShapeLocation=i,e.outShapeStridesLocation=a,e.outTexShapeLocation=u}}createTensorFromGPUData(e,t,r){e.channels=e.channels||"RGBA";const{texture:s,height:o,width:i,channels:a}=e,u=Sn().backend;if(!u.gpgpu.gl.isTexture(s))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=u.writeTexture(s,t,r,o,i,a);return Sn().makeTensorFromDataId(c,t,r,u)}}Bu.nextDataId=0;function JF(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let r=0;r<t.length;++r)t[r]=Math.round(n[r]);return t}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Of()&&Dy("webgl",()=>new Bu,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hm=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class Cs{constructor(e,t,r){this.variableNames=["A","B"],this.outputShape=Ne(t,r),this.enableShapeUniforms=bt(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Os=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class bo{constructor(e,t,r,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Ne(t,r);const o=this.outputShape.length;this.enableShapeUniforms=bt(o);let i="";if(s)if(o===0||Y(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${De(o)} coords = getOutputCoords();
        `,o===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const u=Nt("coords",o);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${u[o-2]} + 1) >= outShape[${o} - 2];
            bool nextColOutOfBounds =
              (${u[o-1]} + 1) >= outShape[${o} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${u[o-2]} + 1) >= ${this.outputShape[o-2]};
            bool nextColOutOfBounds =
              (${u[o-1]} + 1) >= ${this.outputShape[o-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ut(n){const{inputs:e,backend:t}=n,{x:r}=e;return t.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const eP={kernelName:yu,backendName:"webgl",kernelFunc:Ut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lr(n){const{inputs:e,backend:t}=n,{real:r,imag:s}=e,o=t.makeTensorInfo(r.shape,"complex64"),i=t.texData.get(o.dataId),a=Ut({inputs:{x:r},backend:t}),u=Ut({inputs:{x:s},backend:t});return i.complexTensorInfos={real:a,imag:u},o}const tP={kernelName:oh,backendName:"webgl",kernelFunc:Lr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sv="return (a < 0.) ? b * a : a;",ov=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function nP(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{alpha:o}=r,i=t.makeTensorInfo([],"float32",Es(o,"float32")),a=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bo(ov,s.shape,i.shape):new Cs(sv,s.shape,i.shape),u=t.runWebGLProgram(a,[s,i],"float32");return t.disposeIntermediateTensorInfo(i),u}const rP={kernelName:qh,backendName:"webgl",kernelFunc:nP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iv="return (a < 0.) ? b * a : a;",av=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function sP(n){const{inputs:e,backend:t}=n,{x:r,alpha:s}=e,o=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bo(av,r.shape,s.shape):new Cs(iv,r.shape,s.shape);return t.runWebGLProgram(o,[r,s],"float32")}const oP={kernelName:Ed,backendName:"webgl",kernelFunc:sP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vo="if (isnan(x)) return x;";function ke({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:r}){return({inputs:s,backend:o})=>{const{x:i}=s,a=o,u=r||i.dtype;if(a.shouldExecuteOnCPU([i])&&t!=null){const d=a.texData.get(i.dataId),f=t(d.values,u);return a.makeTensorInfo(i.shape,u,f)}const c=W().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let h;return c?h=new Nr(i.shape,e):h=new Vn(i.shape,n),a.runWebGLProgram(h,[i],u)}}function pt({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:o}){return({inputs:i,backend:a})=>{const{a:u,b:c}=i,h=a;if(r&&u.dtype==="complex64"){const x=h.texData.get(u.dataId),w=h.texData.get(c.dataId),[b,$]=[[x.complexTensorInfos.real,w.complexTensorInfos.real],[x.complexTensorInfos.imag,w.complexTensorInfos.imag]].map(k=>{const[I,O]=k,F={dataId:I.dataId,dtype:I.dtype,shape:u.shape},M={dataId:O.dataId,dtype:O.dtype,shape:c.shape},B=new Cs(n,u.shape,c.shape);return h.runWebGLProgram(B,[F,M],An(I.dtype,O.dtype))}),N=Lr({inputs:{real:b,imag:$},backend:h});return h.disposeIntermediateTensorInfo(b),h.disposeIntermediateTensorInfo($),N}const d=o||An(u.dtype,c.dtype);if((u.dtype==="string"||c.dtype==="string"||h.shouldExecuteOnCPU([u,c]))&&s!=null){const x=h.texData.get(u.dataId).values,w=h.texData.get(c.dataId).values,b=u.dtype==="string"?ro(x):x,$=u.dtype==="string"?ro(w):w,[N,k]=s(u.shape,c.shape,b,$,d),I=h.makeTensorInfo(k,d),O=h.texData.get(I.dataId);return O.values=N,I}const f=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let g;return f?g=new bo(e,u.shape,c.shape,t):g=new Cs(n,u.shape,c.shape),h.runWebGLProgram(g,[u,c],d)}}function Gi(n,e=!1){if(n==="linear")return e?VF:FF;if(n==="relu")return e?zF:LF;if(n==="elu")return e?UF:PF;if(n==="relu6")return e?WF:BF;if(n==="prelu")return e?av:iv;if(n==="leakyrelu")return e?ov:sv;if(n==="sigmoid")return e?GF:MF;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uv{constructor(e,t,r,s=!1,o=!1,i=!1,a=null,u=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.enableShapeUniforms=bt(this.outputShape.length);const h=s?e[1]:e[2],d=Math.ceil(h/2),f=s?"i * 2, rc.y":"rc.y, i * 2",g=o?"rc.z, i * 2":"i * 2, rc.z",x=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],w=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let b="",$="";a&&(u?b=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:c?b=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:b=`vec4 activation(vec4 x) {
          ${a}
        }`,$="result = activation(result);");const N=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let k="rc.x",I="rc.x";e[0]<t[0]?k=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(I=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${b}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${d}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${k};
        int batchB = ${I};
        for (int i = 0; i < ${d}; i++) {
          vec4 a = getMatrixA(batchA, ${f});
          vec4 b = getMatrixB(batchB, ${g});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${x[0]} * ${w[0]});
          result += (${x[1]} * ${w[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${N}

        ${$}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ig={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class kg{constructor(e,t,r){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Ne(t,r),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rg="return a * b;";function dm(n){const{inputs:e,backend:t}=n,{a:r,b:s}=e,o=An(r.dtype,s.dtype);if(r.dtype==="complex64"){const a=t.texData.get(r.dataId),u=t.texData.get(s.dataId),c=new kg(Ig.REAL,r.shape,s.shape),h=new kg(Ig.IMAG,r.shape,s.shape),d=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:r.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:s.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:s.shape}],f=t.runWebGLProgram(c,d,"float32"),g=t.runWebGLProgram(h,d,"float32"),x=Lr({inputs:{real:f,imag:g},backend:t});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(g),x}if(t.shouldExecuteOnCPU([r,s])){const a=t.texData.get(r.dataId),u=t.texData.get(s.dataId),[c,h]=sF(r.shape,s.shape,a.values,u.values,o),d=t.makeTensorInfo(h,o),f=t.texData.get(d.dataId);return f.values=c,d}let i;return W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new bo(Rg,r.shape,s.shape):i=new Cs(Rg,r.shape,s.shape),t.runWebGLProgram(i,[r,s],o)}const iP={kernelName:gd,backendName:"webgl",kernelFunc:dm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aP(n,e,t){const r=[so(n.shape),...oo(n.shape)],s={dtype:n.dtype,shape:r,dataId:n.dataId},o=[so(e),...oo(e)],i=new rv(o,r),a=!0,u=[r],c=t.runWebGLProgram(i,[s],n.dtype,u,a);return{dataId:c.dataId,shape:e,dtype:c.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function te(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{shape:o}=r,i=t,a=Y(s.shape),u=Yg(o,a),c=Y(u);A(a===c,()=>`The new shape (${u}) has ${c} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);const h=i.texData.get(s.dataId);return h.isPacked&&!uu(s.shape,u)&&!(h.texture!==null&&uu(h.shape,u))?aP(s,u,i):(i.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype})}const uP={kernelName:Pd,backendName:"webgl",kernelFunc:te};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _g{constructor(e,t){this.variableNames=["x"];const{windowSize:r,batchSize:s,inSize:o,outSize:i}=e;this.outputShape=[s,i];const a=Math.floor(r/4)*4,u=r%4;let c="sumValue += dot(values, ones);";if(t!=null){const d=1/t;c=`sumValue += dot(values * ${ps(d)?d.toPrecision(2):d}, ones);`}let h="";o%r>0&&(h=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${a};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${c}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${c}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${c}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cP{constructor(e,t){this.variableNames=["x"];const{windowSize:r,batchSize:s,inSize:o,outSize:i}=e;this.outputShape=[s,i];let a="0.0",u="";t==="prod"?a="1.0":t==="min"?(a="1.0 / 1e-20",u="min"):t==="max"&&(a="-1.0 / 1e-20",u="max");let c=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?c="sumValue":t==="prod"?c="prodValue":t==="all"?c="allValue":t==="any"&&(c="anyValue");const h=Math.floor(r/4)*4,d=r%4;let f=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${u}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${u}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,g="vec4";t==="all"?(a="1.0",f=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,g="bvec4"):t==="any"&&(a="0.0",f=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,g="bvec4");let x="";o%r>0&&(x=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${x}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${h}; i += 4) {
          int inIdx = inOffset + i;
          ${g} values = ${g}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${f}
        }

        int inIdx = inOffset + ${h};
        if (${d===1}) {
          ${g} values = ${g}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${f}
        } else if (${d===2}) {
          ${g} values = ${g}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${f}
        } else if (${d===3}) {
          ${g} values = ${g}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${f}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lP(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],r=Du(t);e.push({inSize:t,windowSize:r,outSize:Math.ceil(t/r)})}return e}function Ds(n,e,t,r){const s=lP(n.shape);let o=n;for(let i=0;i<s.length;i++){const{inSize:a,windowSize:u,outSize:c}=s[i];let h,d;t==="mean"?h=i===0?new _g({windowSize:u,inSize:a,batchSize:n.shape[0],outSize:c},a):new _g({windowSize:u,inSize:a,batchSize:n.shape[0],outSize:c}):h=new cP({windowSize:u,inSize:a,batchSize:n.shape[0],outSize:c},t),d=o,o=r.runWebGLProgram(h,[o],e),d.dataId!==n.dataId&&r.disposeIntermediateTensorInfo(d)}return o}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hP{constructor(e,t){this.variableNames=["A"];const r=new Array(e.length);for(let i=0;i<r.length;i++)r[i]=e[t[i]];this.outputShape=r,this.rank=r.length;const s=De(this.rank),o=dP(t);this.userCode=`
    void main() {
      ${s} resRC = getOutputCoords();
      setOutput(getA(${o}));
    }
    `}}function dP(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let s=0;s<n.length;s++)r[n[s]]=t[s];return r.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fP{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const r=new Array(e.length);for(let h=0;h<r.length;h++)r[h]=e[t[h]];if(this.outputShape=r,this.rank=r.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=De(this.rank),o=nv("rc",this.rank),i=new Array(this.rank);for(let h=0;h<t.length;h++)i[t[h]]=o[h];const a=`vec2(${i.slice(-2).join()})`,u=`++${o[this.rank-1]} < ${r[this.rank-1]}`,c=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`
    void main() {
      ${s} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${c};
      if(${u}) {
        result[1] = ${c};
      }
      --${o[this.rank-1]};
      if(++${o[this.rank-2]} < ${r[this.rank-2]}) {
        result[2] = ${c};
        if(${u}) {
          result[3] = ${c};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mu(n,e,t){const r=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new fP(n.shape,e):new hP(n.shape,e);return t.runWebGLProgram(r,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pP(n,e,t,r){const s=e,o=n.shape.length,i=tt(s,n.shape);let a=i;const u=hn(a,o),c=u!=null;let h=n;c&&(h=Mu(n,u,r),a=dn(a.length,o)),Pn("sum",a,o);const[d,f]=Xn(h.shape,a);let g=d;t&&(g=Qt(d,i));const x=Y(f),b=Y(n.shape)/x,$=te({inputs:{x:h},attrs:{shape:[b,x]},backend:r}),N=bu(n.dtype),k=Ds($,N,"sum",r),I=te({inputs:{x:k},attrs:{shape:g},backend:r});return r.disposeIntermediateTensorInfo($),r.disposeIntermediateTensorInfo(k),c&&r.disposeIntermediateTensorInfo(h),I}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vu(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:i}=r;return pP(s,o,i,t)}const mP={kernelName:tf,backendName:"webgl",kernelFunc:Vu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Et(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{perm:o}=r,i=t,a=s.shape.length,u=new Array(a);for(let h=0;h<u.length;h++)u[h]=s.shape[o[h]];let c;if(i.shouldExecuteOnCPU([s])){const d=i.texData.get(s.dataId).values,f=lm(d,s.shape,s.dtype,o,u);c=i.makeTensorInfo(u,s.dtype);const g=i.texData.get(c.dataId);g.values=f}else c=Mu(s,o,i);return c}const gP={kernelName:Ci,backendName:"webgl",kernelFunc:Et};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cv=1e3;function lu({a:n,b:e,transposeA:t,transposeB:r,backend:s,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:u=null}){const c=n.shape.length,h=e.shape.length,d=t?n.shape[c-2]:n.shape[c-1],f=r?e.shape[h-1]:e.shape[h-2],g=t?n.shape[c-1]:n.shape[c-2],x=r?e.shape[h-2]:e.shape[h-1],w=n.shape.slice(0,-2),b=e.shape.slice(0,-2),$=Y(w),N=Y(b),I=Ne(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([g,x]);A(d===f,()=>`Error in matMul: inner shapes (${d}) and (${f}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${r} must match.`);const O=t?[$,d,g]:[$,g,d],F=r?[N,x,f]:[N,f,x],M=te({inputs:{x:n},backend:s,attrs:{shape:O}}),B=te({inputs:{x:e},backend:s,attrs:{shape:F}}),z=[M,B],G=Math.max($,N),U=t?M.shape[1]:M.shape[2],Q=o!=null,J=i!=null,se=u==="leakyrelu",oe=u!=null?Gi(u,!0):null,le=Q||J||se||oe!=null;let ge;if((g===1||x===1)&&U>cv&&le===!1){let Ce=M,at=B;t&&(Ce=Et({inputs:{x:M},backend:s,attrs:{perm:[0,2,1]}}),z.push(Ce)),r&&(at=Et({inputs:{x:B},backend:s,attrs:{perm:[0,2,1]}}),z.push(at));const vt=x!==1,mt=x===1;let Je=Ce;vt&&(Je=te({inputs:{x:Ce},backend:s,attrs:{shape:[G,U,1]}}),z.push(Je));const gt=x===1?2:1;let ut=at;mt&&(ut=te({inputs:{x:at},backend:s,attrs:{shape:[G,1,U]}}),z.push(ut));const ct=dm({inputs:{a:Je,b:ut},backend:s});ge=Vu({inputs:{x:ct},backend:s,attrs:{axis:gt,keepDims:!0}}),z.push(ct)}else{const Ce=An(n.dtype,e.dtype),at=new uv(O,F,[G,g,x],t,r,Q,oe,J,se),vt=[M,B];if(o!=null&&vt.push(o),J&&vt.push(i),se){const mt=s.makeTensorInfo([],"float32",Es(a,"float32"));vt.push(mt),z.push(mt)}ge=s.runWebGLProgram(at,vt,Ce)}const $e=te({inputs:{x:ge},backend:s,attrs:{shape:I}});z.push(ge);for(const Ce of z)s.disposeIntermediateTensorInfo(Ce);return $e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yP(n){const{inputs:e,backend:t,attrs:r}=n,{a:s,b:o,bias:i,preluActivationWeights:a}=e,{transposeA:u,transposeB:c,activation:h,leakyreluAlpha:d}=r;return lu({a:s,b:o,transposeA:u,transposeB:c,backend:t,bias:i,preluActivationWeights:a,leakyreluAlpha:d,activation:h})}const xP={kernelName:Ka,backendName:"webgl",kernelFunc:yP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ag="return abs(x);";function bP(n){const{inputs:e,backend:t}=n,{x:r}=e;if(t.shouldExecuteOnCPU([r])&&r.dtype!=="complex64"){const o=t.texData.get(r.dataId),i=ev(o.values);return t.makeTensorInfo(r.shape,r.dtype,i)}let s;return W().getBool("WEBGL_PACK_UNARY_OPERATIONS")?s=new Nr(r.shape,Ag):s=new Vn(r.shape,Ag),t.runWebGLProgram(s,[r],r.dtype)}const vP={kernelName:Ll,backendName:"webgl",kernelFunc:bP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wP=fn+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,$P=ke({opSnippet:wP}),SP={kernelName:Bl,backendName:"webgl",kernelFunc:$P};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CP=fn+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,TP=ke({opSnippet:CP}),NP={kernelName:Ml,backendName:"webgl",kernelFunc:TP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Og="return a + b;",EP=pt({opSnippet:Og,packedOpSnippet:Og,supportsComplex:!0,cpuKernelImpl:LD}),IP={kernelName:mu,backendName:"webgl",kernelFunc:EP};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kP{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((o,i)=>`T${i}`);const r=[];this.variableNames.forEach(o=>{r.push(`float v${o} = get${o}AtOutCoords();`)});const s=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        float result = ${s};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RP{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((o,i)=>`T${i}`);const r=[];this.variableNames.forEach(o=>{r.push(`vec4 v${o} = get${o}AtOutCoords();`)});const s=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        vec4 result = ${s};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function za(n){const{inputs:e,backend:t}=n,r=e;if(r.length===1)return Ut({inputs:{x:r[0]},backend:t});if(r.length>W().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const u=Math.floor(r.length/2),c=za({inputs:r.slice(0,u),backend:t}),h=za({inputs:r.slice(u),backend:t});return za({inputs:[c,h],backend:t})}const s=r.map(u=>u.dtype).reduce((u,c)=>An(u,c)),o=r.map(u=>u.shape),a=W().getBool("WEBGL_PACK")?new RP(r[0].shape,o):new kP(r[0].shape,o);return t.runWebGLProgram(a,r,s)}const _P={kernelName:Vl,backendName:"webgl",kernelFunc:za};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AP(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:i}=r,a=s.shape.length,u=tt(o,s.shape);let c=u;const h=hn(c,a);let d=s;h!=null&&(d=Et({inputs:{x:s},backend:t,attrs:{perm:h}}),c=dn(c.length,a)),Pn("all",c,a);const[f,g]=Xn(d.shape,c),x=Y(g),w=te({inputs:{x:d},backend:t,attrs:{shape:[-1,x]}}),b=Ds(w,w.dtype,"all",t);let $;if(i){const N=Qt(f,u);$=te({inputs:{x:b},backend:t,attrs:{shape:N}})}else $=te({inputs:{x:b},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(b),h!=null&&t.disposeIntermediateTensorInfo(d),$}const OP={kernelName:Ul,backendName:"webgl",kernelFunc:AP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DP(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:i}=r,a=s.shape.length,u=tt(o,s.shape);let c=u;const h=hn(c,a);let d=s;h!=null&&(d=Et({inputs:{x:s},backend:t,attrs:{perm:h}}),c=dn(c.length,a)),Pn("any",c,a);const[f,g]=Xn(d.shape,c),x=Y(g),w=te({inputs:{x:d},backend:t,attrs:{shape:[-1,x]}}),b=Ds(w,w.dtype,"any",t);let $;if(i){const N=Qt(f,u);$=te({inputs:{x:b},backend:t,attrs:{shape:N}})}else $=te({inputs:{x:b},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(b),h!=null&&t.disposeIntermediateTensorInfo(d),$}const FP={kernelName:zl,backendName:"webgl",kernelFunc:DP};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PP{constructor(e,t,r){this.variableNames=["A"];const{windowSize:s,batchSize:o,outSize:i}=e;r||this.variableNames.push("bestIndicesA"),this.outputShape=[o,i];const a=t==="max"?">":"<",u=r?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${s}; i++) {
          int inIdx = ${u};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LP{constructor(e,t,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,A(e.length>2,()=>`Packed arg${r.charAt(0).toUpperCase()+r.slice(1)} supports only inputs with rank above 2.`);const o=e[e.length-1],i=Math.ceil(o/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),s||this.variableNames.push("bestIndicesA");const a=this.outputShape,u=a.length,c=De(u),h=Nt("coords",u);let d,f;if(i===1){f=u+1;const B=De(f);d=`
        ${B} sourceLocR = ${B}(${h.join()}, 0);
        ++${h[u-1]};
        ${B} sourceLocG = ${B}(${h.join()}, 0);
        ++${h[u-2]};
        ${B} sourceLocA = ${B}(${h.join()}, 0);
        --${h[u-1]};
        ${B} sourceLocB = ${B}(${h.join()}, 0);
        --${h[u-2]};`}else f=u,d=`
        ${c} sourceLocR = coords;
        ++${h[u-1]};
        ${c} sourceLocG = coords;
        ++${h[u-2]};
        ${c} sourceLocA = coords;
        --${h[u-1]};
        ${c} sourceLocB = coords;
        --${h[u-2]};`;const g=["x","y","z","w","u","v"].slice(0,f),x="."+g[f-1],w=g.map(B=>"int "+B),b=Nt("sourceLocR",f-1).concat("inIdx.r"),$=Nt("sourceLocG",f-1).concat("inIdx.g"),N=Nt("sourceLocB",f-1).concat("inIdx.b"),k=Nt("sourceLocA",f-1).concat("inIdx.a"),I=r==="max"?"greaterThan":"lessThan",O=s?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${$.join()}),
                             getBestIndicesAChannel(${N.join()}),
                             getBestIndicesAChannel(${k.join()})));`,F=`vec4(
            getAChannel(${b.join()}),
            hasNextCol ? getAChannel(${$.join()}) : 0.,
            hasNextRow ? getAChannel(${N.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${k.join()}) : 0.)`,M=s?"":`
      float getBestIndicesAChannel(${w.join()}) {
        return getChannel(getBestIndicesA(${g.join()}),
                                          vec2(${g.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${w.join()}) {
        return getChannel(getA(${g.join()}),
                               vec2(${g.slice(-2).join()}));
      }
      ${M}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${h[u-1]} < ${a[u-1]-1};
        bool hasNextRow = ${h[u-2]} < ${a[u-2]-1};
        ${d}
        ivec4 srcIdx = ivec4(sourceLocR${x}, sourceLocG${x},
          sourceLocB${x}, sourceLocA${x}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${F};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${O}
          vec4 candidate = ${F};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${I}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lv(n,e,t,r=null){let s=e.shape[0],o=e.shape[1];r!=null&&(s=r.shape[0],o=r.shape[1]);const i=Du(o),a={windowSize:i,inSize:o,batchSize:s,outSize:Math.ceil(o/i)},u=new PP(a,t,r==null),c=[e];r!=null&&c.push(r);const h=n.runWebGLProgram(u,c,"int32");if(h.shape[1]===1)return h;const d=lv(n,e,t,h);return n.disposeIntermediateTensorInfo(h),d}function hv(n,e,t,r=null){const s=r!=null?r.shape:e.shape,o=s[s.length-1],i=Du(o),a=new LP(s,i,t,r==null),u=r==null?[e]:[e,r],c=n.runWebGLProgram(a,u,"int32");if(c.shape.length===e.shape.length){const h=hv(n,e,t,c);return n.disposeIntermediateTensorInfo(c),h}return c}function dv(n,e,t,r){const s=[t];if(Pn("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,e.shape.length),!W().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const o=[],i=n.texData.get(e.dataId),a=i!==null&&i.isPacked;let u=e;a&&(u=n.unpackTensor(e),o.push(u));const[c,h]=Xn(u.shape,s),d=Y(h),f=te({inputs:{x:u},backend:n,attrs:{shape:[-1,d]}});o.push(f);const g=lv(n,f,r);o.push(g);const x=te({inputs:{x:g},backend:n,attrs:{shape:c}});return o.forEach(w=>n.disposeIntermediateTensorInfo(w)),x}return hv(n,e,r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BP(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o}=r;let i=tt(o,s.shape);const a=hn(i,s.shape.length);let u=s;const c=[];a!=null&&(u=Et({inputs:{x:s},backend:t,attrs:{perm:a}}),c.push(u),i=dn(i.length,u.shape.length)),Pn("argMax",[i[0]],u.shape.length);const h=dv(t,u,i[0],"max");return c.forEach(d=>t.disposeIntermediateTensorInfo(d)),h}const MP={kernelName:Wl,backendName:"webgl",kernelFunc:BP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VP(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o}=r;let i=tt(o,s.shape);const a=hn(i,s.shape.length);let u=s;const c=[];a!=null&&(u=Et({inputs:{x:s},backend:t,attrs:{perm:a}}),c.push(u),i=dn(i.length,u.shape.length)),Pn("argMin",[i[0]],u.shape.length);const h=dv(t,u,i[0],"min");return c.forEach(d=>t.disposeIntermediateTensorInfo(d)),h}const UP={kernelName:Gl,backendName:"webgl",kernelFunc:VP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zP=fn+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,WP=ke({opSnippet:zP}),GP={kernelName:jl,backendName:"webgl",kernelFunc:WP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jP=fn+"return log(x + sqrt(x * x + 1.0));",HP=ke({opSnippet:jP}),KP={kernelName:Hl,backendName:"webgl",kernelFunc:HP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XP=fn+`
  return atan(x);
`,qP=ke({opSnippet:XP}),YP={kernelName:Kl,backendName:"webgl",kernelFunc:qP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QP=hm+`
  return atan(a, b);
`,ZP=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Os+`
  return result;
`,JP=pt({opSnippet:QP,packedOpSnippet:ZP}),e3={kernelName:ql,backendName:"webgl",kernelFunc:JP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t3=fn+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,n3=ke({opSnippet:t3}),r3={kernelName:Xl,backendName:"webgl",kernelFunc:n3};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ji{constructor(e,t,r,s=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,g=e.padInfo.top,x=e.padInfo.left;this.outputShape=e.outShape;const w=t==="avg",b=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,$=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let N="0.0";if(w||(N="-1.0 / 1e-20"),r){const B=">=";this.userCode=`
        const ivec2 strides = ivec2(${a}, ${u});
        const ivec2 pads = ivec2(${g}, ${x});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${d};
              wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f};
                wC += ${h}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${B} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${s?o?b:$:`wR * ${f} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const k="max";let I=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(I="avgValue / max(count, 1.0)");const O=Math.floor(i/4)*4,F=i%4,M=`
      if (${w}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${k}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${u});
      const ivec2 pads = ivec2(${g}, ${x});
      const float initializationValue = ${N};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${N});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${d};
            wR += ${c}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${O}; wC += 4) {
            int xC = xCCorner + wC * ${h};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${h}, d),
              getValue(batch, xR, xC + 2 * ${h}, d),
              getValue(batch, xR, xC + 3 * ${h}, d)
            );

            ${M}
          }

          int xC = xCCorner + ${O};
          if (${F===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${M}
          } else if (${F===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${h}, d),
              initializationValue,
              initializationValue
            );

            ${M}
          } else if (${F===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${h}, d),
              getValue(batch, xR, xC + 2 * ${h}, d),
              initializationValue
            );

            ${M}
          }
        }
        setOutput(${I});
      }
    `}}class fm{constructor(e,t,r,s=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideDepth,u=e.strideHeight,c=e.strideWidth,h=e.dilationDepth,d=e.dilationHeight,f=e.dilationWidth,g=e.effectiveFilterDepth,x=e.effectiveFilterHeight,w=e.effectiveFilterWidth,b=e.padInfo.front,$=e.padInfo.top,N=e.padInfo.left;this.outputShape=e.outShape;const k=t==="avg";let I="0.0";if(k||(I="-1.0 / 1e-20"),r){const G=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${u}, ${c});
        const ivec3 pads = ivec3(${b}, ${$}, ${N});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${g};
              wD += ${h}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${x};
                wR += ${d}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${w};
                  wC += ${f}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${G} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${s?o?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${x} * ${w} +
                      wR * ${w} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const O="max";let F=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(F="avgValue / max(count, 1.0)");const M=Math.floor(i/4)*4,B=i%4,z=`
      if (${k}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${O}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${u}, ${c});
      const ivec3 pads = ivec3(${b}, ${$}, ${N});
      const float initializationValue = ${I};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${I});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${g};
            wD += ${h}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${x};
            wR += ${d}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${M}; wC += 4) {
              int xC = xCCorner + wC * ${f};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${f}, ch),
                getValue(batch, xD, xR, xC + 2 * ${f}, ch),
                getValue(batch, xD, xR, xC + 3 * ${f}, ch)
              );

              ${z}
            }

            int xC = xCCorner + ${M};
            if (${B===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${z}
            } else if (${B===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${f}, ch),
                initializationValue,
                initializationValue
              );

              ${z}
            } else if (${B===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${f}, ch),
                getValue(batch, xD, xR, xC + 2 * ${f}, ch),
                initializationValue
              );

              ${z}
            }
          }
        }
        setOutput(${F});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s3(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;aa(s,"avgPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:u}=r,c=1;A(Gt(i,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const h=Is(s.shape,o,i,c,a,u);if(h.filterWidth===1&&h.filterHeight===1&&ze(h.inShape,h.outShape))return Ut({inputs:{x:s},backend:t});const d=new ji(h,"avg",!1);return t.runWebGLProgram(d,[s],"float32")}const o3={kernelName:Yl,backendName:"webgl",kernelFunc:s3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i3(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:o,strides:i,pad:a,dimRoundingMode:u,dataFormat:c}=r,h=[1,1,1],d=Yi(s.shape,o,i,h,a,u,c),f=new fm(d,"avg",!1);return t.runWebGLProgram(f,[s],"float32")}const a3={kernelName:Ql,backendName:"webgl",kernelFunc:i3};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class u3{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,s=e.strideHeight,o=e.strideWidth,i=e.dilationHeight,a=e.dilationWidth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,h=u-1-e.padInfo.top,d=c-1-e.padInfo.left,f=1/(t*r);this.userCode=`
      const ivec2 pads = ivec2(${h}, ${d});
      const float avgMultiplier = float(${f});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class c3{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,r=e.filterHeight,s=e.filterWidth,o=e.strideDepth,i=e.strideHeight,a=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,f=e.effectiveFilterHeight,g=e.effectiveFilterWidth,x=d-1-e.padInfo.front,w=f-1-e.padInfo.top,b=g-1-e.padInfo.left,$=1/(t*r*s);this.userCode=`
      const ivec3 pads = ivec3(${x}, ${w}, ${b});
      const float avgMultiplier = float(${$});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${o}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${f};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${g};
                wC += ${h}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l3(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o}=e,i=o,{filterSize:a,strides:u,pad:c,dimRoundingMode:h}=r,d=[1,1,1],f=Yi(i.shape,a,u,d,c,h),g=new c3(f);return t.runWebGLProgram(g,[s],i.dtype)}const h3={kernelName:ay,backendName:"webgl",kernelFunc:l3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d3(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o}=e,i=o;aa([s,o],"avgPoolGrad");const{filterSize:a,strides:u,pad:c}=r,h=Is(i.shape,a,u,1,c),d=new u3(h);return t.runWebGLProgram(d,[s],i.dtype)}const f3={kernelName:iy,backendName:"webgl",kernelFunc:d3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p3(n){const{inputs:e,backend:t,attrs:r}=n,{a:s,b:o}=e,{transposeA:i,transposeB:a}=r;return lu({a:s,b:o,transposeA:i,transposeB:a,backend:t})}const m3={kernelName:Zl,backendName:"webgl",kernelFunc:p3};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class g3{constructor(e,t,r,s,o,i){this.outputShape=[],this.variableNames=["x","mean","variance"],Ne(e,t),Ne(e,r);let a="0.0";s!=null&&(Ne(e,s),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let u="1.0";o!=null&&(Ne(e,o),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class y3{constructor(e,t,r,s,o,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Ne(e,t),Ne(e,r);let a="vec4(0.0)";s!=null&&(Ne(e,s),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let u="vec4(1.0)";o!=null&&(Ne(e,o),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x3=({inputs:n,backend:e,attrs:t})=>{const{x:r,mean:s,variance:o,offset:i,scale:a}=n;A(s.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),A(i==null||s.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),A(a==null||s.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=t;u==null&&(u=.001);const c=[r,s,o];let h=null;i!=null&&(h=i.shape,c.push(i));let d=null;a!=null&&(d=a.shape,c.push(a));const f=W().getBool("WEBGL_PACK_NORMALIZATION")?new y3(r.shape,s.shape,o.shape,h,d,u):new g3(r.shape,s.shape,o.shape,h,d,u);return e.runWebGLProgram(f,c,c[0].dtype)},b3={kernelName:Mh,backendName:"webgl",kernelFunc:x3};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class v3{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=De(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const r=w3(this.rank);let s;const o=e.map((i,a)=>`sourceLoc.${Rl[a]} = start[${a}] + coords.${Rl[a]};`);s=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${o.join(`
`)}
      `,this.userCode=`
      void main() {
        ${s}
        setOutput(getSource(${r}));
      }
    `}}const Rl=["x","y","z","w","u","v"];function w3(n){if(n===1)return"sourceLoc";if(n<=6)return Rl.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $3{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=De(this.rank),r=Nt("coords",this.rank),s=Nt("sourceLoc",this.rank),o=this.rank===1?"sourceLoc":`vec2(${s.slice(-2).join()})`,i=`getChannel(getSource(${s.join()}), ${o})`,a=`
      result.x = ${i};
      if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
        ++${s[this.rank-1]};
        result.y = ${i};
        --${s[this.rank-1]};
      }
    `,u=this.rank===1?"":`
      --${r[this.rank-1]};
      if (++${r[this.rank-2]} < ${e[this.rank-2]}) {
        ++${s[this.rank-2]};
        result.z = ${i};
        if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
          ++${s[this.rank-1]};
          result.w = ${i};
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((h,d)=>`start[${d}]`).join()});`:e.map((h,d)=>`${s[d]} = ${r[d]} + start[${d}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${c}
        vec4 result = vec4(0.);
        ${a}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S3(n,e,t,r){const s=r.texData.get(n.dataId),o=r.makeTensorInfo(t,n.dtype),i=r.texData.get(o.dataId);Object.assign(i,s),i.refCount=1,i.shape=t,i.dtype=n.dtype;let a=Yp(e,ot(n.shape));s.slice&&(a+=s.slice.flatOffset),i.slice={flatOffset:a,origDataId:s.slice&&s.slice.origDataId||n.dataId};const u=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,u+1),o}function wo(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{begin:o,size:i}=r,[a,u]=I1(s,o,i);if(x1(s,a,u),Y(u)===0)return t.makeTensorInfo(u,s.dtype,[]);if(t.shouldExecuteOnCPU([s])||s.dtype==="string"){const d=t.texData.get(s.dataId),f=mF(d.values,a,u,s.shape,s.dtype);return t.makeTensorInfo(u,s.dtype,f)}const{isPacked:c}=t.texData.get(s.dataId),h=qp(s.shape,a,u);if(c||!h){const d=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $3(u):new v3(u),f=[a];return t.runWebGLProgram(d,[s],s.dtype,f)}return t.uploadToGPU(s.dataId),S3(s,a,u,t)}const C3={kernelName:Xd,backendName:"webgl",kernelFunc:wo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T3=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockShape:o,crops:i}=r;A(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const a=o.reduce((N,k)=>N*k),u=Zp(s.shape,o,a),c=Jp(u.length,o.length),h=em(s.shape,o,a),d=M1(i,o.length),f=V1(h,i,o.length),g=[],x=te({inputs:{x:s},backend:t,attrs:{shape:u}}),w=Et({inputs:{x},backend:t,attrs:{perm:c}}),b=te({inputs:{x:w},backend:t,attrs:{shape:h}}),$=wo({inputs:{x:b},backend:t,attrs:{begin:d,size:f}});return g.push(x),g.push(w),g.push(b),g.forEach(N=>t.disposeIntermediateTensorInfo(N)),$},N3={kernelName:Jl,backendName:"webgl",kernelFunc:T3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E3(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,weights:o}=e,{size:i}=r,a=t.readSync(s.dataId),u=t.readSync(o.dataId),c=Jb(a,u,o.dtype,o.shape,i);return t.makeTensorInfo([i],o.dtype,c)}const I3={kernelName:eh,backendName:"webgl",kernelFunc:E3};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k3=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,R3=`
  return float(int(a.r) & int(b.r));
`;function _3(n){const{inputs:e,backend:t}=n,{a:r,b:s}=e,o=W().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=W().getNumber("WEBGL_VERSION");if(t.shouldExecuteOnCPU([r,s])||i===1){const u=t.texData.get(r.dataId).values,c=t.texData.get(s.dataId).values,[h,d]=MD(r.shape,s.shape,u,c,r.dtype),f=t.makeTensorInfo(d,r.dtype),g=t.texData.get(f.dataId);return g.values=h,f}let a;return o?a=new bo(k3,r.shape,s.shape,!1):a=new Cs(R3,r.shape,s.shape),t.runWebGLProgram(a,[r,s],r.dtype)}const A3={kernelName:th,backendName:"webgl",kernelFunc:_3};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O3(n){const{inputs:e,backend:t}=n,{s0:r,s1:s}=e,o=t.readSync(r.dataId),i=t.readSync(s.dataId),a=Ne(Array.from(o),Array.from(i));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const D3={kernelName:nh,backendName:"webgl",kernelFunc:O3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F3="return float(a != b);",fv=pt({opSnippet:F3,cpuKernelImpl:iF,dtype:"bool"}),P3={kernelName:xd,backendName:"webgl",kernelFunc:fv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ca(n){const{inputs:e,backend:t}=n,{input:r}=e,s=t.texData.get(r.dataId);return Ut({inputs:{x:s.complexTensorInfos.real},backend:t})}const L3={kernelName:Od,backendName:"webgl",kernelFunc:ca};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B3="return float(int(x));";function M3(n,e){const t=new Vn(n.shape,B3),r=e.runWebGLProgram(t,[n],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _l(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{dtype:o}=r;if(o==="complex64"){if(s.dtype==="complex64")return Ut({inputs:{x:s},backend:t});const i=_r(s.shape),a=_l({inputs:{x:s},backend:t,attrs:{dtype:"float32"}}),u=Lr({inputs:{real:a,imag:i},backend:t});return i.dispose(),t.disposeIntermediateTensorInfo(a),u}if(s.dtype==="complex64"){const i=ca({inputs:{input:s},backend:t}),a=_l({inputs:{x:i},backend:t,attrs:{dtype:o}});return t.disposeIntermediateTensorInfo(i),a}if(!Jg(s.dtype,o)){const i=Ut({inputs:{x:s},backend:t});return{dataId:i.dataId,shape:i.shape,dtype:o}}if(t.shouldExecuteOnCPU([s])){const i=t.texData.get(s.dataId).values,[a,u,c]=VD(i,s.shape,s.dtype,o);return t.makeTensorInfo(a,u,c)}if(o==="int32")return M3(s,t);if(o==="bool"){const i=t.makeTensorInfo([],"bool",pr("bool",1)),u=fv({inputs:{a:s,b:i},backend:t});return t.disposeIntermediateTensorInfo(i),u}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${o}`)}const V3={kernelName:gu,backendName:"webgl",kernelFunc:_l};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dg="return ceil(x);",U3=ke({opSnippet:Dg,packedOpSnippet:Dg,cpuKernelImpl:UD}),z3={kernelName:rh,backendName:"webgl",kernelFunc:U3};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class W3{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class G3{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j3(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{clipValueMin:o,clipValueMax:i}=r;let a;W().getBool("WEBGL_PACK_CLIP")?a=new G3(s.shape):a=new W3(s.shape);const u=[[o],[i]];return t.runWebGLProgram(a,[s],s.dtype,u)}const H3={kernelName:sh,backendName:"webgl",kernelFunc:j3};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class K3{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fg(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function X3(n){const{inputs:e,backend:t}=n,{x:r}=e,s=t.texData.get(r.dataId),o=new K3(r.shape),i=[Fg(r,s.complexTensorInfos.real),Fg(r,s.complexTensorInfos.imag)];return t.runWebGLProgram(o,i,i[0].dtype)}const q3={kernelName:ih,backendName:"webgl",kernelFunc:X3};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Y3{constructor(e){this.outputShape=[],this.outputShape=$s(e,1),this.variableNames=e.map((i,a)=>`T${a}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let i=1;i<t.length;i++)t[i]=t[i-1]+e[i][1];const r=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<t.length;i++){const a=t[i-1];r.push(`else if (yC < ${t[i]}) setOutput(getT${i}(yR, yC-${a}));`)}const s=t.length,o=t[t.length-1];r.push(`else setOutput(getT${s}(yR, yC-${o}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${r.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Q3{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=$s(e,t);const r=this.outputShape,s=r.length,o=De(s),i=Nt("coords",s),a=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map((w,b)=>`T${b}`);const u=new Array(e.length-1);u[0]=e[0][t];for(let w=1;w<u.length;w++)u[w]=u[w-1]+e[w][t];const c=a[t],h=a.slice(-2),d=a.join();let f=`if (${c} < ${u[0]}) {
        return getChannel(
            getT0(${d}), vec2(${h.join()}));
        }`;for(let w=1;w<u.length;w++){const b=u[w-1];f+=`
        if (${c} < ${u[w]}  && ${c} >= ${u[w-1]}) {
          return getChannel(
            getT${w}(${Ba(a,c,b)}),
            vec2(${Ba(h,c,b)}));
        }`}const g=u.length,x=u[u.length-1];f+=`
        return getChannel(
          getT${g}(${Ba(a,c,x)}),
          vec2(${Ba(h,c,x)}));`,this.userCode=`
      float getValue(${a.map(w=>"int "+w)}) {
        ${f}
      }

      void main() {
        ${o} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[s-1]} = ${i[s-1]} + 1;
        if (${i[s-1]} < ${r[s-1]}) {
          result.g = getValue(${i});
        }

        ${i[s-2]} = ${i[s-2]} + 1;
        if (${i[s-2]} < ${r[s-2]}) {
          result.a = getValue(${i});
        }

        ${i[s-1]} = ${i[s-1]} - 1;
        if (${i[s-2]} < ${r[s-2]} &&
            ${i[s-1]} < ${r[s-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}}function Ba(n,e,t){const r=n.indexOf(e);return n.map((o,i)=>i===r?`${o} - ${t}`:o).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uu(n){const{inputs:e,backend:t}=n,{input:r}=e,s=t.texData.get(r.dataId);return Ut({inputs:{x:s.complexTensorInfos.imag},backend:t})}const Z3={kernelName:jh,backendName:"webgl",kernelFunc:Uu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Si(n,e,t){const r=n[0].dtype;if(r==="complex64"){const g=n.map(N=>ca({inputs:{input:N},backend:t})),x=n.map(N=>Uu({inputs:{input:N},backend:t})),w=Si(g,e,t),b=Si(x,e,t),$=Lr({inputs:{real:w,imag:b},backend:t});return g.forEach(N=>t.disposeIntermediateTensorInfo(N)),x.forEach(N=>t.disposeIntermediateTensorInfo(N)),t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(b),$}let s=t.shouldExecuteOnCPU(n);if(r==="string"&&(s=!0),s){const g=n.map(I=>{const F=[-1,Y(I.shape.slice(e))];return te({inputs:{x:I},backend:t,attrs:{shape:F}})}),x=g.map(I=>({vals:t.readSync(I.dataId),shape:I.shape})),w=$s(g.map(I=>I.shape),1),b=g[0].shape[0]===1,$=zD(x,w,r,b),N=$s(n.map(I=>I.shape),e),k=t.makeTensorInfo(N,r,$);return g.forEach(I=>t.disposeIntermediateTensorInfo(I)),k}const o=n.filter(g=>Y(g.shape)>0),i=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(o.length===1){const g=i?new Vn(n[0].shape,$r):new Nr(n[0].shape,$r);return t.runWebGLProgram(g,n,r)}const a=W().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>a){const g=[];for(let w=0;w<o.length;w+=a){const b=o.slice(w,w+a);g.push(Si(b,e,t))}const x=Si(g,e,t);for(const w of g)t.disposeIntermediateTensorInfo(w);return x}if(i){const g=new Q3(o.map(x=>x.shape),e);return t.runWebGLProgram(g,o,r)}const{tensors2D:u,outShape:c}=J3(o,e,t),h=new Y3(u.map(g=>g.shape)),d=t.runWebGLProgram(h,u,r);u.forEach(g=>t.disposeIntermediateTensorInfo(g));const f=te({inputs:{x:d},attrs:{shape:c},backend:t});return t.disposeIntermediateTensorInfo(d),f}function J3(n,e,t){const r=$s(n.map(o=>o.shape),e);return{tensors2D:n.map(o=>te({inputs:{x:o},attrs:{shape:[-1,Y(o.shape.slice(e))]},backend:t})),outShape:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pv(n){const{inputs:e,backend:t,attrs:r}=n,{axis:s}=r,o=tt(s,e[0].shape)[0],i=e.map(c=>c.shape);O1(i,o);const a=$s(e.map(c=>c.shape),o);if(Y(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const u=e.filter(c=>Y(c.shape)>0);return u.length===1?Ut({inputs:{x:u[0]},backend:t}):Si(u,o,t)}const eL={kernelName:ah,backendName:"webgl",kernelFunc:pv};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mv{constructor(e,t=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.padInfo.top,a=e.padInfo.left,u=e.strideHeight,c=e.strideWidth,h=e.dilationHeight,d=e.dilationWidth,f=e.filterHeight,g=e.filterWidth,x=Math.floor(e.inChannels/4)*4,w=e.inChannels%4,b=e.dataFormat==="channelsLast",$=b?1:2,N=b?2:3,k=b?3:1;let I="",O="";r&&(s?I=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:o?I=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:I=`
          float activation(float x) {
            ${r}
          }
        `,O="result = activation(result);");const F=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${I}

      const ivec2 strides = ivec2(${u}, ${c});
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${k}];

        ivec2 xRCCorner =
            ivec2(coords[${$}], coords[${N}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${f}; wR++) {
          int xR = xRCorner + wR * ${h};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${g}; wC++) {
            int xC = xCCorner + wC * ${d};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${x}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${b}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${w===1}) {

              if (${b}) {
                dotProd +=
                    getX(batch, xR, xC, ${x}) *
                    getW(wR, wC, ${x}, d2);
              } else {
                dotProd +=
                    getX(batch, ${x}, xR, xC) *
                    getW(wR, wC, ${x}, d2);
              }

            } else if (${w===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${x}, d2),
                getW(wR, wC, ${x} + 1, d2)
              );

              if (${b}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${x}),
                  getX(batch, xR, xC, ${x} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${x}, xR, xC),
                  getX(batch, ${x} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${w===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${x}, d2),
                getW(wR, wC, ${x} + 1, d2),
                getW(wR, wC, ${x} + 2, d2)
              );

              if (${b}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${x}),
                  getX(batch, xR, xC, ${x} + 1),
                  getX(batch, xR, xC, ${x} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${x}, xR, xC),
                  getX(batch, ${x} + 1, xR, xC),
                  getX(batch, ${x} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${F}
        ${O}
        setOutput(result);
      }
    `}}class tL{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,r=e.padInfo.top,s=e.padInfo.left,o=e.strideDepth,i=e.strideHeight,a=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.filterDepth,f=e.filterHeight,g=e.filterWidth,x=Math.floor(e.inChannels/4)*4,w=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${o}, ${i}, ${a});
      const ivec3 pads = ivec3(${t}, ${r}, ${s});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${d}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f}; wR++) {
            int xR = xRCorner + wR * ${c};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${g}; wC++) {
              int xC = xCCorner + wC * ${h};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${x}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${w===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${x}) *
                  getW(wF, wR, wC, ${x}, d2);
              } else if (${w===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${x}),
                  getX(batch, xF, xR, xC, ${x} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${x}, d2),
                  getW(wF, wR, wC, ${x} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${w===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${x}),
                  getX(batch, xF, xR, xC, ${x} + 1),
                  getX(batch, xF, xR, xC, ${x} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${x}, d2),
                  getW(wF, wR, wC, ${x} + 1, d2),
                  getW(wF, wR, wC, ${x} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gv{constructor(e,t=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=bt(this.outputShape.length);const i=e.padInfo.left,a=e.strideWidth,u=e.dilationWidth,c=e.filterHeight,h=e.filterWidth,d=h;let f=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let b=0;b<h;b++)f+=`
           vec4 xTexelC${b*2};
           int xTexelC${b*2}Ready;
           vec4 xTexelC${b*2+1};
           int xTexelC${b*2+1}Ready;
           vec4 xC${b};`;f+=`
     for (int r = 0; r < ${c}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let b=0;b<h;b++)f+=`
           xTexelC${b*2} = vec4(0.0);
           xTexelC${b*2}Ready = 0;
           xTexelC${b*2+1} = vec4(0.0);
           xTexelC${b*2+1}Ready = 0;
           xC${b} = vec4(0.0);`;f+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let b=0;b<(d+1)/2;b++){const $=b*2;if(f+=`
           xC = xCCorner + ${$*u};
           `,a===1){if($<h&&(i%2===1?(f+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$}Ready == 0) {
                   xTexelC${$} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${$}.zw = vec2(0.0);
                   }
                   xTexelC${$}Ready = 1;
                 }
               `,u===1&&$>0?f+=`
                 xC${$} = vec4(xTexelC${$-2}.zw, xTexelC${$}.xy);
                 `:f+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${$} = vec4(previous.zw, xTexelC${$}.xy);
                   } else {
                     xC${$} = vec4(0.0, 0.0, xTexelC${$}.xy);
                   }
                   `):f+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${$}Ready == 0) {
                   xTexelC${$} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${$}.zw = vec2(0.0);
                   }
                   xTexelC${$}Ready = 1;
                 }

                 xC${$} = xTexelC${$};
                 `,$+1<h)){const N=i%2===0?fu(u):u;u%2===0&&i%2===1||u%2!==0&&i%2!==1?(f+=`
                   xCOffset = xC + imod(pads[1], 2) + ${N};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$+1}Ready == 0) {
                     xTexelC${$+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${$+1}.zw = vec2(0.0);
                     }
                     xTexelC${$+1}Ready = 1;
                   }
                   `,u>1?f+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${$+1} = vec4(previous.zw, xTexelC${$+1}.xy);
                     } else {
                      xC${$+1} = vec4(0.0, 0.0, xTexelC${$+1}.xy);
                     }
                     `:f+=`
                     xC${$+1} = vec4(xTexelC${$}.zw, xTexelC${$+1}.xy);
                     `):N===1?f+=`
                     xC${$+1} = xTexelC${$};
                     `:f+=`
                     xCOffset = xC + ${N};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$+1}Ready == 0) {
                       xTexelC${$+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${$+1}.zw = vec2(0.0);
                       }
                       xTexelC${$+1}Ready = 1;
                     }

                     xC${$+1} = xTexelC${$+1};
                     `}}else $<h&&(i%2===1?(f+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$}Ready == 0) {
                   xTexelC${$} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${$}.zw = vec2(0.0);
                   }
                   xTexelC${$}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${$+1}Ready == 0) {
                   xTexelC${$+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${$+1}.zw = vec2(0.0);
                   }
                   xTexelC${$+1}Ready = 1;
                 }

                 xC${$} = vec4(xTexelC${$}.zw, xTexelC${$+1}.zw);
               `,$+1<h&&(f+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${$+1} = vec4(xTexelC${$+1}.xy, final.xy);
                 `)):(f+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${$}Ready == 0) {
                   xTexelC${$} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${$}.zw = vec2(0.0);
                   }
                   xTexelC${$}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${$+1}Ready == 0) {
                   xTexelC${$+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${$+1}.zw = vec2(0.);
                   }
                   xTexelC${$+1}Ready = 1;
                 }

                 xC${$} = vec4(
                   xTexelC${$}.xy, xTexelC${$+1}.xy);
               `,$+1<h&&(f+=`
                   xC${$+1} = vec4(xTexelC${$}.zw, xTexelC${$+1}.zw);
                 `)));$<h&&(f+=`
             wTexel = getW(r, ${$}, d1, d2);
             dotProd += xC${$}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${$}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,$+1<h&&(f+=`
               wTexel = getW(r, ${$+1}, d1, d2);
               dotProd += xC${$+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${$+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}f+=`
     }
   `,f+=`
     }
   `,f+=`
     }
   `;let g="",x="";r&&(s?g=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${r}
         }`:o?g=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${r}
         }`:g=`vec4 activation(vec4 x) {
           ${r}
         }`,x="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${g}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${f}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${w}
         ${x}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nL{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=bt(this.outputShape.length);const{dataFormat:r}=t,s=It(),o=r==="channelsLast",i=o?1:2,a=o?2:3,u=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let c="";for(let h=0;h<=1;h++)for(let d=0;d<=1;d++)c+=`
          blockIndex = rc.z + ${d};
          pos = rc.y + ${h};

          ${u}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${o}) {
                  innerDims = vec2(d1, ch);
                  result[${h*2+d}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${h*2+d}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${c}

        ${s.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hu(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function yv({x:n,filter:e,convInfo:t,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const u=n.shape,c=r.texData.get(n.dataId),h=t.inChannels,d=u[0]*u[1]*u[2],f=t.outChannels,g=t.dataFormat==="channelsLast",x=!1,w=!1;let b;const $=[];if(o!=null){const I=hu(o.shape,g);I!=null&&(o=te({inputs:{x:o},backend:r,attrs:{shape:I}}),$.push(o))}if(s!=null){const I=hu(s.shape,g);I!=null&&(s=te({inputs:{x:s},backend:r,attrs:{shape:I}}),$.push(s))}if(!((d===1||f===1)&&h>cv)&&c.isPacked&&g&&c.texture!=null&&u[2]%2!==0&&ze(c.shape.slice(-3),u.slice(-3))){const I=u[0]*u[1]*(u[2]+1),O={dataId:n.dataId,shape:[1,I,t.inChannels],dtype:n.dtype},F=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,A(uu(c.shape,O.shape),()=>`packed reshape ${c.shape} to ${O.shape} isn't free`);const M=te({inputs:{x:e},backend:r,attrs:{shape:[1,t.inChannels,t.outChannels]}});$.push(M);const B=lu({a:O,b:M,backend:r,transposeA:x,transposeB:w,bias:s,activation:a,preluActivationWeights:o,leakyreluAlpha:i}),z=r.texData.get(B.dataId);A(z.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=F,z.shape=t.outShape,b=Ut({inputs:{x:B},backend:r}),b.shape=t.outShape,$.push(B)}else{const I=t.outHeight*t.outWidth,O=te({inputs:{x:n},backend:r,attrs:{shape:g?[t.batchSize,I,t.inChannels]:[t.batchSize,t.inChannels,I]}}),F=te({inputs:{x:e},backend:r,attrs:{shape:[1,t.inChannels,t.outChannels]}}),M=lu({a:g?O:F,b:g?F:O,transposeA:!g,transposeB:w,backend:r,bias:s,activation:a,preluActivationWeights:o,leakyreluAlpha:i});b=te({inputs:{x:M},backend:r,attrs:{shape:t.outShape}}),$.push(O),$.push(F),$.push(M)}for(const I of $)r.disposeIntermediateTensorInfo(I);return b}function xv({x:n,filter:e,convInfo:t,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:a=null}){const{filterWidth:u,filterHeight:c,inChannels:h,outWidth:d,outHeight:f,dataFormat:g}=t,x=g==="channelsLast",w=u*c*h,b=f*d,$=[t.batchSize,w,b],N=!0,k=!1,I=[];if(o!=null){const $e=hu(o.shape,x);$e!=null&&(o=te({inputs:{x:o},backend:r,attrs:{shape:$e}}),I.push(o))}if(s!=null){const $e=hu(s.shape,x);$e!=null&&(s=te({inputs:{x:s},backend:r,attrs:{shape:$e}}),I.push(s))}const O=te({inputs:{x:e},backend:r,attrs:{shape:[1,w,Y(e.shape)/w]}});I.push(O);const F=new nL($,t),M=[n.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],B=r.runWebGLProgram(F,[n],"float32",M),z=te({inputs:{x:B},backend:r,attrs:{shape:$}});I.push(B),I.push(z);const G=s!=null,U=o!=null,Q=a==="leakyrelu",J=a?Gi(a,!0):null,se=new uv(x?z.shape:O.shape,x?O.shape:z.shape,x?[t.batchSize,b,t.outChannels]:[t.batchSize,t.outChannels,b],N,k,G,J,U,Q),oe=x?[z,O]:[O,z];if(s&&oe.push(s),U&&oe.push(o),Q){const $e=r.makeTensorInfo([],"float32",Es(i,"float32"));oe.push($e),I.push($e)}const le=r.runWebGLProgram(se,oe,"float32"),ge=te({inputs:{x:le},backend:r,attrs:{shape:t.outShape}});I.push(le);for(const $e of I)r.disposeIntermediateTensorInfo($e);return ge}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rL(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:i,pad:a,dataFormat:u,dilations:c,dimRoundingMode:h}=r,d=uo(u),f=Yt(s.shape,o.shape,i,c,a,h,!1,d);let g;if(f.filterHeight===1&&f.filterWidth===1&&f.dilationHeight===1&&f.dilationWidth===1&&f.strideHeight===1&&f.strideWidth===1&&(f.padInfo.type==="SAME"||f.padInfo.type==="VALID"))g=yv({x:s,filter:o,convInfo:f,backend:t});else if(f.strideWidth<=2&&d==="channelsLast"&&W().getBool("WEBGL_EXP_CONV")){const w=new gv(f),b=[[f.padInfo.top,f.padInfo.left],[f.strideHeight,f.strideWidth],[f.dilationHeight,f.dilationWidth],[f.inHeight,f.inWidth]];g=t.runWebGLProgram(w,[s,o],"float32",b)}else if(W().getBool("WEBGL_CONV_IM2COL"))g=xv({x:s,filter:o,convInfo:f,backend:t});else{const w=new mv(f);g=t.runWebGLProgram(w,[s,o],"float32")}const x=te({inputs:{x:g},backend:t,attrs:{shape:f.outShape}});return t.disposeIntermediateTensorInfo(g),x}const sL={kernelName:uh,backendName:"webgl",kernelFunc:rL};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oL{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,r=e.strideWidth,s=e.padInfo.top,o=e.padInfo.left,i=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${i?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class iL{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,s=e.strideHeight,o=e.strideWidth,i=e.dataFormat==="channelsLast",a=t-1-e.padInfo.top,u=r-1-e.padInfo.left,c=i?1:2,h=i?2:3,d=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${d}];

        ivec2 dyCorner = ivec2(coords[${c}], coords[${h}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class aL{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,r=e.strideHeight,s=e.strideWidth,o=e.padInfo.front,i=e.padInfo.top,a=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${o};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${r} - ${i};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${s} - ${a};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class uL{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,r=e.filterHeight,s=e.filterWidth,o=e.strideDepth,i=e.strideHeight,a=e.strideWidth,u=t-1-e.padInfo.front,c=r-1-e.padInfo.top,h=s-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${c}, ${h});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${o}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${r}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${r} - 1 - wR;

            for (int wC = 0; wC < ${s}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${s} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cL(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:o}=e,{strides:i,pad:a,dataFormat:u,dimRoundingMode:c,filterShape:h}=r,d=uo(u),f=Yt(s.shape,h,i,1,a,c,!1,d),g=new oL(f);return t.runWebGLProgram(g,[s,o],"float32")}const lL={kernelName:ch,backendName:"webgl",kernelFunc:cL};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hL{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=bt(this.outputShape.length);const t=e.filterHeight,r=e.filterWidth,s=t-1-e.padInfo.top,o=r-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            int wCPerm = ${r} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dL(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:o}=e,{inputShape:i,strides:a,pad:u,dataFormat:c,dimRoundingMode:h}=r,d=uo(c),f=Yt(i,o.shape,a,1,u,h,!1,d);if(W().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&d==="channelsLast"){const g=[[f.strideHeight,f.strideWidth]],x=new hL(f);return t.runWebGLProgram(x,[s,o],"float32",g)}else{const g=new iL(f);return t.runWebGLProgram(g,[s,o],"float32")}}const fL={kernelName:lh,backendName:"webgl",kernelFunc:dL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pL(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:i,pad:a,dilations:u}=r,c=Qi(s.shape,o.shape,i,u,a),h=new tL(c);return t.runWebGLProgram(h,[s,o],"float32")}const mL={kernelName:hh,backendName:"webgl",kernelFunc:pL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gL(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:o}=e,{strides:i,pad:a,filterShape:u}=r,c=Qi(s.shape,u,i,1,a),h=new aL(c);return t.runWebGLProgram(h,[s,o],"float32")}const yL={kernelName:uy,backendName:"webgl",kernelFunc:gL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xL(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:o}=e,{pad:i,strides:a,inputShape:u}=r,c=Qi(u,o.shape,a,1,i),h=new uL(c);return t.runWebGLProgram(h,[s,o],"float32")}const bL={kernelName:dh,backendName:"webgl",kernelFunc:xL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vL=vo+`
  return cos(x);
`,wL=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${Os}
  return result;
`,$L=ke({opSnippet:vL,packedOpSnippet:wL}),SL={kernelName:fh,backendName:"webgl",kernelFunc:$L};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CL=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,TL=ke({opSnippet:CL}),NL={kernelName:ph,backendName:"webgl",kernelFunc:TL};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EL{constructor(e,t,r,s,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,u,c]=e,[h]=t,[d,f]=r;this.outputShape=[h,d,f,c];const g=s==="bilinear"?1:0,[x,w]=[`${a-1}.0`,`${u-1}.0`],[b,$,N]=d>1?[`${(a-1)/(d-1)}`,"(y2-y1) * height_ratio",`y1*${x} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${x}`],[k,I,O]=f>1?[`${(u-1)/(f-1)}`,"(x2-x1) * width_ratio",`x1*${w} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${w}`];this.userCode=`
      const float height_ratio = float(${b});
      const float width_ratio = float(${k});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${$};
        float width_scale = ${I};

        float in_y = ${N};
        if( in_y < 0.0 || in_y > ${x} ) {
          setOutput(float(${o}));
          return;
        }
        float in_x = ${O};
        if( in_x < 0.0 || in_x > ${w} ) {
          setOutput(float(${o}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${g} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IL=n=>{const{inputs:e,backend:t,attrs:r}=n,{image:s,boxes:o,boxInd:i}=e,{cropSize:a,method:u,extrapolationValue:c}=r,h=new EL(s.shape,o.shape,a,u,c);return t.runWebGLProgram(h,[s,o,i],"float32")},kL={kernelName:yh,backendName:"webgl",kernelFunc:IL};var Hi;(function(n){n.Prod="*",n.Sum="+"})(Hi||(Hi={}));class Pg{constructor(e,t,r,s){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const o=this.outputShape.length,i=this.op===Hi.Prod?"1.0":"0.0",a=r?i:`getX(${Lg(o,"coords",this.op)})`,u=this.outputShape[this.outputShape.length-1];let c="",h="";r?(c=s?`end != ${u-1}`:"end != 0",h=s?"end + 1":"end - 1"):(c=s?`end + pow2 < ${u}`:"end >= pow2",h=s?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${De(o)} coords = getOutputCoords();
        int end = ${Bg(o,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${c}) {
          int idx = ${h};
          ${Bg(o,"coords",this.op)} = idx;
          val ${this.op}= getX(${Lg(o,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function Lg(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function Bg(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bv(n,e,t,r,s,o){const i=e.shape.length,a=hn([r],i);let u=e;a!=null&&(u=Et({inputs:{x:e},backend:t,attrs:{perm:a}}));const c=dn(1,i)[0];if(c!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${r}`);const h=u.shape[c];let d=Ut({inputs:{x:u},backend:t});for(let f=0;f<=Math.ceil(Math.log2(h))-1;f++){const g=new Pg(n,u.shape,!1,o),x=[[f]],w=d;d=t.runWebGLProgram(g,[d],d.dtype,x),t.disposeIntermediateTensorInfo(w)}if(s){const f=new Pg(n,u.shape,s,o),g=d;d=t.runWebGLProgram(f,[d],d.dtype),t.disposeIntermediateTensorInfo(g)}if(a!=null){const f=Yf(a),g=Et({inputs:{x:d},backend:t,attrs:{perm:f}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(u),g}return d}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RL(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,exclusive:i,reverse:a}=r;return bv(Hi.Prod,s,t,o,i,a)}const _L={kernelName:mh,backendName:"webgl",kernelFunc:RL};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AL(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,exclusive:i,reverse:a}=r;return bv(Hi.Sum,s,t,o,i,a)}const OL={kernelName:gh,backendName:"webgl",kernelFunc:AL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DL(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,weights:o}=e,{size:i,binaryOutput:a}=r;if(s.shape.length===1){const u=t.readSync(s.dataId),c=t.readSync(o.dataId),h=Jb(u,c,o.dtype,o.shape,i);return t.makeTensorInfo([i],o.dtype,h)}else if(s.shape.length===2){const u=t.bufferSync(s),c=t.bufferSync(o),h=BD(u,c,i,a);return t.makeTensorInfo(h.shape,o.dtype,h.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}const FL={kernelName:xh,backendName:"webgl",kernelFunc:DL};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PL{constructor(e,t,r){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=r,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LL(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockSize:o,dataFormat:i}=r,a=s.shape[0],u=i==="NHWC"?s.shape[1]:s.shape[2],c=i==="NHWC"?s.shape[2]:s.shape[3],h=i==="NHWC"?s.shape[3]:s.shape[1],d=u*o,f=c*o,g=h/(o*o),x=i==="NHWC"?[a,d,f,g]:[a,g,d,f],w=new PL(x,o,i);return t.runWebGLProgram(w,[s],s.dtype)}const BL={kernelName:bh,backendName:"webgl",kernelFunc:LL};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vv{constructor(e,t=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=bt(this.outputShape.length);const i=e.filterHeight,a=e.filterWidth,u=e.outChannels/e.inChannels;let c="",h="";r&&(s?c=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:o?c=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:c=`
          float activation(float x) {
            ${r}
          }
        `,h="result = activation(result);");const d=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${u};
        int q = d2 - d1 * ${u};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${d}
        ${h}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wv{constructor(e,t=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=bt(this.outputShape.length);const i=e.outChannels/e.inChannels,a=e.padInfo.left,u=e.strideWidth,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,f=d;let g=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let $=0;$<d;$++)g+=`
          vec4 xTexelC${$*2};
          int xTexelC${$*2}Ready;
          vec4 xTexelC${$*2+1};
          int xTexelC${$*2+1}Ready;
          vec4 xC${$};`;g+=`
    for (int r = 0; r < ${h}; r++) {
      `;for(let $=0;$<d;$++)g+=`
          xTexelC${$*2} = vec4(0.0);
          xTexelC${$*2}Ready = 0;
          xTexelC${$*2+1} = vec4(0.0);
          xTexelC${$*2+1}Ready = 0;
          xC${$} = vec4(0.0);`;g+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let $=0;$<(f+1)/2;$++){const N=$*2;if(g+=`
          xC = xCCorner + ${N*c};
          `,u===1){if(N<d&&(a%2===1?(g+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${N}Ready == 0) {
                  xTexelC${N} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${N}.zw = vec2(0.0);
                  }
                  xTexelC${N}Ready = 1;
                }
              `,c===1&&N>0?g+=`
                xC${N} = vec4(xTexelC${N-2}.zw, xTexelC${N}.xy);
                `:g+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${N} = vec4(previous.zw, xTexelC${N}.xy);
                  } else {
                    xC${N} = vec4(0.0, 0.0, xTexelC${N}.xy);
                  }
                  `):g+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${N}Ready == 0) {
                  xTexelC${N} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${N}.zw = vec2(0.0);
                  }
                  xTexelC${N}Ready = 1;
                }

                xC${N} = xTexelC${N};
                `,N+1<d)){const k=a%2===0?fu(c):c;c%2===0&&a%2===1||c%2!==0&&a%2!==1?(g+=`
                  xCOffset = xC + imod(pads[1], 2) + ${k};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${N+1}Ready == 0) {
                    xTexelC${N+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${N+1}.zw = vec2(0.0);
                    }
                    xTexelC${N+1}Ready = 1;
                  }
                  `,c>1?g+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${N+1} = vec4(previous.zw, xTexelC${N+1}.xy);
                    } else {
                     xC${N+1} = vec4(0.0, 0.0, xTexelC${N+1}.xy);
                    }
                    `:g+=`
                    xC${N+1} = vec4(xTexelC${N}.zw, xTexelC${N+1}.xy);
                    `):k===1?g+=`
                    xC${N+1} = xTexelC${N};
                    `:g+=`
                    xCOffset = xC + ${k};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${N+1}Ready == 0) {
                      xTexelC${N+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${N+1}.zw = vec2(0.0);
                      }
                      xTexelC${N+1}Ready = 1;
                    }

                    xC${N+1} = xTexelC${N+1};
                    `}}else N<d&&(a%2===1?(g+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${N}Ready == 0) {
                  xTexelC${N} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${N}.zw = vec2(0.0);
                  }
                  xTexelC${N}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${N+1}Ready == 0) {
                  xTexelC${N+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${N+1}.zw = vec2(0.0);
                  }
                  xTexelC${N+1}Ready = 1;
                }

                xC${N} = vec4(xTexelC${N}.zw, xTexelC${N+1}.zw);
              `,N+1<d&&(g+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${N+1} = vec4(xTexelC${N+1}.xy, final.xy);
                `)):(g+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${N}Ready == 0) {
                  xTexelC${N} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${N}.zw = vec2(0.0);
                  }
                  xTexelC${N}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${N+1}Ready == 0) {
                  xTexelC${N+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${N+1}.zw = vec2(0.);
                  }
                  xTexelC${N+1}Ready = 1;
                }

                xC${N} = vec4(
                  xTexelC${N}.xy, xTexelC${N+1}.xy);
              `,N+1<d&&(g+=`
                  xC${N+1} = vec4(xTexelC${N}.zw, xTexelC${N+1}.zw);
                `)));N<d&&(g+=`
            wTexel = getW(r, ${N}, d1, q);
            dotProd += xC${N} * vec4(wTexel.xz, wTexel.xz);
          `,N+1<d&&(g+=`
              wTexel = getW(r, ${N+1}, d1, q);
              dotProd += xC${N+1} * vec4(wTexel.xz, wTexel.xz);
            `))}g+=`
    }
  `,g+=`
      }
    `;let x="",w="";r&&(s?x=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:o?x=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:x=`vec4 activation(vec4 x) {
          ${r}
        }`,w="result = activation(result);");const b=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${x}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${g}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${b}
        ${w}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ML(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:i,pad:a,dilations:u,dimRoundingMode:c}=r;let h=u;h==null&&(h=[1,1]),A(Gt(i,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`);const d=Yt(s.shape,o.shape,i,h,a,c,!0);let f;W().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?f=new wv(d):f=new vv(d);const g=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return t.runWebGLProgram(f,[s,o],"float32",g)}const VL={kernelName:vh,backendName:"webgl",kernelFunc:ML};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UL{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,r=e.strideWidth,s=e.padInfo.top,o=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class zL{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,s=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.top,a=r-1-e.padInfo.left,u=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WL(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:o}=e,{strides:i,dilations:a,pad:u,dimRoundingMode:c,filterShape:h}=r,d=Yt(s.shape,h,i,a,u,c,!0),f=new UL(d);return t.runWebGLProgram(f,[s,o],"float32")}const GL={kernelName:wh,backendName:"webgl",kernelFunc:WL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jL(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:o}=e,{strides:i,dilations:a,pad:u,dimRoundingMode:c,inputShape:h}=r,d=Yt(h,o.shape,i,a,u,c,!0),f=new zL(d);return t.runWebGLProgram(f,[s,o],"float32")}const HL={kernelName:$h,backendName:"webgl",kernelFunc:jL};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KL{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XL(n){const{inputs:e,backend:t}=n,{x:r}=e,s=[...r.shape,...r.shape],o=Y(r.shape),i=te({inputs:{x:r},backend:t,attrs:{shape:[o]}}),a=new KL(o),u=t.runWebGLProgram(a,[i],i.dtype),c=te({inputs:{x:u},backend:t,attrs:{shape:s}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(u),c}const qL={kernelName:Sh,backendName:"webgl",kernelFunc:XL};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YL{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:r,padInfo:s,strideHeight:o,strideWidth:i,filterHeight:a,filterWidth:u,dilationHeight:c,dilationWidth:h}=e,{top:d,left:f}=s;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${i});
      const ivec2 pads = ivec2(${d}, ${f});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${c};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${u}; w++) {
              int wIn = wBeg + w * ${h};

              if (wIn >= 0 && wIn < ${r}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QL(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o}=e,{strides:i,pad:a,dilations:u}=r,c=s0(s.shape,o.shape,i,a,"NHWC",u);let h;const d=new YL(c);h=t.runWebGLProgram(d,[s,o],"float32");const f=te({inputs:{x:h},backend:t,attrs:{shape:c.outShape}});return t.disposeIntermediateTensorInfo(h),f}const ZL={kernelName:Ch,backendName:"webgl",kernelFunc:QL};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JL(n){const{inputs:e,backend:t,attrs:r}=n,{equation:s}=r,o=e,{allDims:i,summedDims:a,idDims:u}=q1(s,o.length);Q1(i.length,u,o);const{path:c,steps:h}=Z1(a,u),d=h.length;let f=null,g=i.length;const x=[];for(let w=0;w<d;++w){for(const b of h[w]){const{permutationIndices:$,expandDims:N}=Y1(g,u[b]);let k;J1($)?k=o[b]:(k=Et({inputs:{x:o[b]},backend:t,attrs:{perm:$}}),x.push(k));const I=k.shape.slice();for(let O=0;O<N.length;++O)I.splice(N[O],0,1);ze(k.shape,I)||(k=te({inputs:{x:k},backend:t,attrs:{shape:I}}),x.push(k)),f===null?f=k:(f=dm({inputs:{a:k,b:f},backend:t}),x.push(f))}w<d-1&&(c[w]>=0&&(f=Vu({inputs:{x:f},backend:t,attrs:{axis:c[w]-(i.length-g),keepDims:!1}}),x.push(f)),g--)}for(const w of x)w!==f&&t.disposeIntermediateTensorInfo(w);return f}const eB={kernelName:Eh,backendName:"webgl",kernelFunc:JL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tB="return (x >= 0.0) ? x : (exp(x) - 1.0);",nB=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,rB=ke({opSnippet:tB,packedOpSnippet:nB}),sB={kernelName:Ih,backendName:"webgl",kernelFunc:rB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oB="return (b >= 0.0) ? a : a * (b + 1.0);",iB=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,aB=n=>{const{inputs:e,backend:t}=n,{dy:r,y:s}=e,o=W().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bo(iB,r.shape,s.shape):new Cs(oB,r.shape,s.shape);return t.runWebGLProgram(o,[r,s],r.dtype)},uB={kernelName:cy,backendName:"webgl",kernelFunc:aB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cB=`
  return vec4(equal(a, b));
`,lB="return float(a == b);",hB=pt({opSnippet:lB,packedOpSnippet:cB,dtype:"bool",cpuKernelImpl:WD}),dB={kernelName:Rh,backendName:"webgl",kernelFunc:hB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fB=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${W1};
  float a1 = ${G1};
  float a2 = ${j1};
  float a3 = ${H1};
  float a4 = ${K1};
  float a5 = ${X1};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,pB=ke({opSnippet:fB}),mB={kernelName:kh,backendName:"webgl",kernelFunc:pB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gB=vo+`
  return exp(x);
`,yB=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,$v=ke({opSnippet:gB,packedOpSnippet:yB,cpuKernelImpl:GD,dtype:"float32"}),xB={kernelName:_h,backendName:"webgl",kernelFunc:$v};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Al(n){const{inputs:e,attrs:t,backend:r}=n,{dim:s}=t,{input:o}=e,i=o.shape.length,a=o.shape.slice();let u=s;return s<0&&(A(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+s+1),a.splice(u,0,1),te({inputs:{x:o},backend:r,attrs:{shape:a}})}const bB={kernelName:Ah,backendName:"webgl",kernelFunc:Al};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mg="return exp(x) - 1.0;",vB=ke({opSnippet:Mg,packedOpSnippet:Mg,cpuKernelImpl:jD}),wB={kernelName:Oh,backendName:"webgl",kernelFunc:vB};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vg{constructor(e,t,r){this.variableNames=["real","imag"];const s=t[1];this.outputShape=t;const o=r?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=r?`${s}.0`:"1.0";let a;if(e==="real")a="return real * expR - imag * expI;";else if(e==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${o};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${s});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${s}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sv(n,e,t){const r=t.texData.get(n.dataId),s=Y(n.shape),o=n.shape[n.shape.length-1],i=s/o,a=te({inputs:{x:n},backend:t,attrs:{shape:[i,o]}}),u=a.shape,c=new Vg("real",u,e),h=new Vg("imag",u,e),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:u},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:u}],f=t.runWebGLProgram(c,d,"float32"),g=t.runWebGLProgram(h,d,"float32"),x=Lr({inputs:{real:f,imag:g},backend:t});t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(g);const w=te({inputs:{x},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(x),w}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $B(n){const{inputs:e,backend:t}=n,{input:r}=e;return Sv(r,!1,t)}const SB={kernelName:Dh,backendName:"webgl",kernelFunc:$B};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CB{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function la(n){const{backend:e,attrs:t}=n,{shape:r,value:s}=t;let{dtype:o}=t;if(o=o||ao(s),o==="string"){const i=et(o,Y(r));return i.fill(s),e.makeTensorInfo(r,o,i)}else{const i=new CB(r,s),a=[[s]];return e.runWebGLProgram(i,[],o,a)}}const TB={kernelName:Fh,backendName:"webgl",kernelFunc:la};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NB{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EB={kernelName:Ph,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,r=e,s=new NB(t.shape);return r.runWebGLProgram(s,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ug="return floor(x);",IB=ke({opSnippet:Ug,packedOpSnippet:Ug,cpuKernelImpl:HD}),kB={kernelName:Lh,backendName:"webgl",kernelFunc:IB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RB=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,_B=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,AB=pt({opSnippet:RB,packedOpSnippet:_B,dtype:"int32"}),OB={kernelName:Bh,backendName:"webgl",kernelFunc:AB};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DB{constructor(e){this.variableNames=["A"];const t=It(),[r,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${r}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FB{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=It(),[r,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${s}.0, ${r}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PB={kernelName:Ha,backendName:"webgl",kernelFunc:LB};let Us,Xc=W().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function LB(n){const{inputs:e,backend:t,attrs:r}=n;let{pixels:s}=e;const{numChannels:o}=r,i=typeof HTMLVideoElement<"u"&&s instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement,[u,c]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],h=[c,u],d=[c,u,o];if(a||i){const w=W().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Us==null||w!==Xc)&&(Xc=w,Us=document.createElement("canvas").getContext("2d",{willReadFrequently:Xc})),Us.canvas.width=u,Us.canvas.height=c,Us.drawImage(s,0,0,u,c),s=Us.canvas}const f=t.makeTensorInfo(h,"int32");t.texData.get(f.dataId).usage=Xt.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(f.dataId),s);const g=W().getBool("WEBGL_PACK")?new FB(d):new DB(d),x=t.runWebGLProgram(g,[f],"int32");return t.disposeData(f.dataId),x}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BB(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o,bias:i,preluActivationWeights:a}=e,{strides:u,pad:c,dataFormat:h,dilations:d,dimRoundingMode:f,activation:g,leakyreluAlpha:x}=r,w=uo(h),b=Yt(s.shape,o.shape,u,d,c,f,!1,w);let $;const N=[],k=i!=null,I=a!=null,O=g==="leakyrelu",F=()=>{const B=[s,o],z=(G,U)=>{if(U==="NCHW"&&G.shape.length===1&&G.shape[0]!==1){const Q=te({inputs:{x:G},backend:t,attrs:{shape:[G.shape[0],1,1]}});return N.push(Q),Q}return G};if(k&&B.push(z(i,h)),I&&B.push(z(a,h)),O){const G=t.makeTensorInfo([],"float32",Es(x,"float32"));B.push(G),N.push(G)}return B};if(b.filterHeight===1&&b.filterWidth===1&&b.dilationHeight===1&&b.dilationWidth===1&&b.strideHeight===1&&b.strideWidth===1&&(b.padInfo.type==="SAME"||b.padInfo.type==="VALID"))$=yv({x:s,filter:o,convInfo:b,backend:t,bias:i,activation:g,preluActivationWeights:a,leakyreluAlpha:x});else if(b.strideWidth<=2&&w==="channelsLast"&&W().getBool("WEBGL_EXP_CONV")){const B=g?Gi(g,!0):null,z=new gv(b,k,B,I,O),G=[[b.padInfo.top,b.padInfo.left],[b.strideHeight,b.strideWidth],[b.dilationHeight,b.dilationWidth],[b.inHeight,b.inWidth]],U=F();$=t.runWebGLProgram(z,U,"float32",G)}else if(W().getBool("WEBGL_CONV_IM2COL"))$=xv({x:s,filter:o,convInfo:b,backend:t,bias:i,activation:g,preluActivationWeights:a,leakyreluAlpha:x});else{const B=g?Gi(g,!1):null,z=new mv(b,k,B,I,O),G=F();$=t.runWebGLProgram(z,G,"float32")}const M=te({inputs:{x:$},backend:t,attrs:{shape:b.outShape}});return N.push($),N.forEach(B=>t.disposeIntermediateTensorInfo(B)),M}const MB={kernelName:Xa,backendName:"webgl",kernelFunc:BB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VB(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:o,bias:i,preluActivationWeights:a}=e,{strides:u,pad:c,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:g}=r,x=[];let w=h;w==null&&(w=[1,1]),A(Gt(u,w),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${w}'`);const b=Yt(s.shape,o.shape,u,w,c,d,!0),$=W().getBool("WEBGL_PACK_DEPTHWISECONV")&&b.strideWidth<=2&&b.outChannels/b.inChannels===1,N=f?Gi(f,$):null,k=[s,o],I=i!=null,O=a!=null,F=f==="leakyrelu";if(I&&k.push(i),O&&k.push(a),F){const G=t.makeTensorInfo([],"float32",Es(g,"float32"));k.push(G),x.push(G)}let M;$?M=new wv(b,I,N,O,F):M=new vv(b,I,N,O,F);const B=[[b.padInfo.top,b.padInfo.left],[b.strideHeight,b.strideWidth],[b.dilationHeight,b.dilationWidth],[b.inHeight,b.inWidth]],z=t.runWebGLProgram(M,k,"float32",B);return x.forEach(G=>t.disposeIntermediateTensorInfo(G)),z}const UB={kernelName:qa,backendName:"webgl",kernelFunc:VB};class zB{constructor(e,t,r,s){this.sliceDim=e,this.strides=t,this.paramsShape=s,this.variableNames=["x","indices"],this.outputShape=r;const o=De(r.length);let i=`
    int index;`;for(let a=0;a<this.sliceDim;a++)i+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${o} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${i}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WB(n){const{inputs:e,backend:t}=n,{params:r,indices:s}=e,o=s.shape,i=o[o.length-1],a=Y(r.shape),[u,c,h,d]=Xp(r,s),f=te({inputs:{x:s},backend:t,attrs:{shape:[c,i]}}),g=te({inputs:{x:r},backend:t,attrs:{shape:[Y(r.shape)/h,h]}});if(t.shouldExecuteOnCPU([r,s])||r.dtype==="string"){const $=t.readSync(s.dataId),N=t.bufferSync(r),k=KD($,N,r.dtype,c,i,h,d,r.shape,a);return t.makeTensorInfo(u,r.dtype,k.values)}const x=new zB(i,d,[c,h],r.shape),w=t.runWebGLProgram(x,[g,f],g.dtype),b=te({inputs:{x:w},backend:t,attrs:{shape:u}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(w),b}const GB={kernelName:Uh,backendName:"webgl",kernelFunc:WB};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jB{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const r=De(this.rank),s=HB(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${s}));
      }
    `}}function HB(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<n.length;s++)s===2?r.push("index"):r.push(`${t[s]}`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cv(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,indices:o}=e,{axis:i,batchDims:a}=r,u=tt(i,s.shape)[0];if(W().get("DEBUG")){const N=t.readSync(o.dataId),k=s.shape[u];for(let I=0;I<N.length;++I){const O=N[I];A(O<=k-1&&O>=0,()=>`GatherV2: the index value ${O} is not in [0, ${k-1}]`)}}const c=pb(s,o,u,a),h=Y(o.shape),d=[],f=te({inputs:{x:s},backend:t,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),g=te({inputs:{x:o},backend:t,attrs:{shape:[c.batchSize,h/c.batchSize]}});d.push(f),d.push(g);const x=[c.batchSize,c.outerSize,h/c.batchSize,c.sliceSize];if(t.shouldExecuteOnCPU([s,o])||s.dtype==="string"){const N=t.bufferSync(g),k=t.bufferSync(f),I=XD(k,N,x);return d.forEach(O=>t.disposeIntermediateTensorInfo(O)),t.makeTensorInfo(c.outputShape,I.dtype,I.values)}const w=new jB(f.shape,x),b=t.runWebGLProgram(w,[f,g],f.dtype);d.push(b);const $=te({inputs:{x:b},backend:t,attrs:{shape:c.outputShape}});return d.forEach(N=>t.disposeIntermediateTensorInfo(N)),$}const KB={kernelName:Vh,backendName:"webgl",kernelFunc:Cv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XB="return float(a > b);",qB=`
  return vec4(greaterThan(a, b));
`,YB=pt({opSnippet:XB,packedOpSnippet:qB,cpuKernelImpl:qD,dtype:"bool"}),QB={kernelName:zh,backendName:"webgl",kernelFunc:YB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZB="return float(a >= b);",JB=`
  return vec4(greaterThanEqual(a, b));
`,e4=pt({opSnippet:ZB,packedOpSnippet:JB,dtype:"bool",cpuKernelImpl:YD}),t4={kernelName:Wh,backendName:"webgl",kernelFunc:e4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n4(n){const{inputs:e,backend:t}=n,{input:r}=e;return Sv(r,!0,t)}const r4={kernelName:Gh,backendName:"webgl",kernelFunc:n4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s4="return float(!isnan(x) && !isinf(x));",o4=ke({opSnippet:s4,dtype:"bool"}),i4={kernelName:Hh,backendName:"webgl",kernelFunc:o4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a4="return float(isinf(x));",u4=ke({opSnippet:a4,dtype:"bool"}),c4={kernelName:Kh,backendName:"webgl",kernelFunc:u4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l4="return float(isnan(x));",h4=ke({opSnippet:l4,dtype:"bool"}),d4={kernelName:Xh,backendName:"webgl",kernelFunc:h4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f4="return float(a < b);",p4=`
  return vec4(lessThan(a, b));
`,m4=pt({opSnippet:f4,packedOpSnippet:p4,cpuKernelImpl:QD,dtype:"bool"}),g4={kernelName:Yh,backendName:"webgl",kernelFunc:m4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y4="return float(a <= b);",x4=`
  return vec4(lessThanEqual(a, b));
`,b4=pt({opSnippet:y4,packedOpSnippet:x4,cpuKernelImpl:ZD,dtype:"bool"}),v4={kernelName:Qh,backendName:"webgl",kernelFunc:b4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w4(n){const{backend:e,attrs:t}=n,{start:r,stop:s,num:o}=t,i=JD(r,s,o);return e.makeTensorInfo([i.length],"float32",i)}const $4={kernelName:Zh,backendName:"webgl",kernelFunc:w4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S4=vo+`
  return x < 0.0 ? 0./0. : log(x);
`,C4=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,T4=ke({opSnippet:S4,packedOpSnippet:C4,cpuKernelImpl:eF}),N4={kernelName:Jh,backendName:"webgl",kernelFunc:T4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E4=vo+`
  return log(1.0 + x);
`,I4=ke({opSnippet:E4}),k4={kernelName:ed,backendName:"webgl",kernelFunc:I4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R4="return float(a >= 1.0 && b >= 1.0);",_4=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,A4=pt({opSnippet:R4,packedOpSnippet:_4,dtype:"bool"}),O4={kernelName:td,backendName:"webgl",kernelFunc:A4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D4="return float(!(x >= 1.0));",F4=ke({opSnippet:D4}),P4={kernelName:nd,backendName:"webgl",kernelFunc:F4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L4="return float(a >= 1.0 || b >= 1.0);",B4=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,M4=pt({opSnippet:L4,packedOpSnippet:B4,dtype:"bool"}),V4={kernelName:rd,backendName:"webgl",kernelFunc:M4};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class U4{constructor(e,t,r,s,o){this.variableNames=["x"],this.outputShape=[];const i=t,a=e[3]-1;this.outputShape=e;let u;const c=`float(${r}) + float(${s}) * sum`;o===.5?u=`inversesqrt(${c})`:o===1?u=`1.0/(${c})`:u=`exp(log(${c}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${u};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class z4{constructor(e,t,r,s,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=t,a=e[3]-1;this.outputShape=e;let u;const c=`float(${r}) + float(${s}) * sum`;o===.5?u=`inversesqrt(${c})`:o===1?u=`1.0/(${c})`:u=`exp(log(${c}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${u};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W4=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{depthRadius:o,bias:i,alpha:a,beta:u}=r,c=W().getBool("WEBGL_PACK_NORMALIZATION")?new z4(s.shape,o,i,a,u):new U4(s.shape,o,i,a,u);return t.runWebGLProgram(c,[s],s.dtype)},G4={kernelName:sd,backendName:"webgl",kernelFunc:W4};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class j4{constructor(e,t,r,s,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=r,this.alpha=s,this.beta=o,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${s}) * norm + float(${r});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${s})
                * float(${o})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${o});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H4=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s,y:o,dy:i}=e,{depthRadius:a,bias:u,alpha:c,beta:h}=r,d=new j4(s.shape,a,u,c,h);return t.runWebGLProgram(d,[s,o,i],s.dtype)},K4={kernelName:ly,backendName:"webgl",kernelFunc:H4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X4(n,e,t,r){const s=Y(e),i=Y(n.shape)/s,a=te({inputs:{x:n},attrs:{shape:[i,s]},backend:r}),u=Ds(a,n.dtype,"max",r),c=te({inputs:{x:u},attrs:{shape:t},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(u),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tv(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{reductionIndices:o,keepDims:i}=r,a=s.shape.length,u=tt(o,s.shape);let c=u;const h=hn(c,a),d=h!=null,f=t.shouldExecuteOnCPU([s]);let g=s;if(d){if(f){const k=t.texData.get(g.dataId).values,I=new Array(a);for(let M=0;M<I.length;M++)I[M]=s.shape[h[M]];const O=lm(k,s.shape,s.dtype,h,I);g=t.makeTensorInfo(I,s.dtype);const F=t.texData.get(g.dataId);F.values=O}else g=Mu(s,h,t);c=dn(c.length,a)}Pn("max",c,a);const[x,w]=Xn(g.shape,c);let b=x;i&&(b=Qt(x,u));let $;if(f){const k=t.texData.get(g.dataId).values,I=tF(k,Y(w),b,s.dtype);$=t.makeTensorInfo(b,s.dtype);const O=t.texData.get($.dataId);O.values=I}else $=X4(g,w,b,t);return d&&t.disposeIntermediateTensorInfo(g),$}const q4={kernelName:od,backendName:"webgl",kernelFunc:Tv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y4=hm+`
  return max(a, b);
`,Q4=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Os+`
  return result;
`,Z4=pt({opSnippet:Y4,packedOpSnippet:Q4,cpuKernelImpl:nF}),J4={kernelName:id,backendName:"webgl",kernelFunc:Z4};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eM(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;aa(s,"maxPool");const{filterSize:o,strides:i,pad:a,dimRoundingMode:u}=r,c=1;A(Gt(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const h=Is(s.shape,o,i,c,a,u);if(h.filterWidth===1&&h.filterHeight===1&&ze(h.inShape,h.outShape))return Ut({inputs:{x:s},backend:t});const d=new ji(h,"max",!1);return t.runWebGLProgram(d,[s],s.dtype)}const tM={kernelName:ad,backendName:"webgl",kernelFunc:eM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nM(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:o,strides:i,pad:a,dataFormat:u,dimRoundingMode:c}=r,h=[1,1,1],d=Yi(s.shape,o,i,h,a,c,u),f=new fm(d,"max",!1);return t.runWebGLProgram(f,[s],s.dtype)}const rM={kernelName:ud,backendName:"webgl",kernelFunc:nM};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sM{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,o=e.effectiveFilterHeight,i=e.effectiveFilterWidth,a=o-1-e.padInfo.top,u=i-1-e.padInfo.left,c=o*i-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
          wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class oM{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,r=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,i=e.dilationHeight,a=e.dilationWidth,u=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=u-1-e.padInfo.front,f=c-1-e.padInfo.top,g=h-1-e.padInfo.left,x=u*c*h-1;this.userCode=`
      const ivec3 pads = ivec3(${d}, ${f}, ${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${r}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${h};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${x} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${c} * ${h} +
                  wR * ${h} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iM(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o}=e,i=o,{filterSize:a,strides:u,pad:c,dimRoundingMode:h}=r,d=[1,1,1],f=Yi(i.shape,a,u,d,c,h),g=new fm(f,"max",!0),x=t.runWebGLProgram(g,[i],i.dtype),w=new oM(f),b=t.runWebGLProgram(w,[s,x],i.dtype);return t.disposeIntermediateTensorInfo(x),b}const aM={kernelName:dy,backendName:"webgl",kernelFunc:iM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uM(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:o,output:i}=e,a=o;aa([o,i],"maxPoolGrad");const{filterSize:u,strides:c,pad:h,dimRoundingMode:d}=r,f=Is(a.shape,u,c,1,h,d),g=!0,x=new ji(f,"max",g),w=t.runWebGLProgram(x,[a],a.dtype),b=new sM(f),$=t.runWebGLProgram(b,[s,w],a.dtype);return t.disposeIntermediateTensorInfo(w),$}const cM={kernelName:hy,backendName:"webgl",kernelFunc:uM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lM(n,e,t,r){let s=new ji(t,"max",!1);const o=r.runWebGLProgram(s,[n],"float32");s=new ji(t,"max",!0,!0,e);const i=r.runWebGLProgram(s,[n],"float32");return[o,i]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hM={kernelName:cd,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:r}=n,{filterSize:s,strides:o,pad:i,includeBatchInIndex:a}=e,u=t;A(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const c=[1,1];A(Gt(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const h=Is(r.shape,s,o,c,i),[d,f]=lM(r,a,h,u);return[d,f]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dM(n,e,t,r){const s=Y(e),i=Y(n.shape)/s,a=te({inputs:{x:n},attrs:{shape:[i,s]},backend:r}),u=Ds(a,"float32","mean",r),c=te({inputs:{x:u},attrs:{shape:t},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(u),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fM={kernelName:ld,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:r}=n,{keepDims:s,axis:o}=e,i=t,a=r.shape.length,u=tt(o,r.shape);let c=u;const h=hn(c,a),d=h!=null,f=i.shouldExecuteOnCPU([r]),g=[];let x=r;if(d){if(f){const I=i.texData.get(x.dataId).values,O=new Array(a);for(let B=0;B<O.length;B++)O[B]=r.shape[h[B]];const F=lm(I,r.shape,r.dtype,h,O);x=i.makeTensorInfo(O,r.dtype);const M=i.texData.get(x.dataId);M.values=F}else x=Mu(r,h,i);g.push(x),c=dn(c.length,a)}Pn("sum",c,a);const[w,b]=Xn(x.shape,c);let $=w;s&&($=Qt(w,u));const N=dM(x,b,$,i);for(const k of g)i.disposeIntermediateTensorInfo(k);return N}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pM(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:i}=r,a=s.shape.length,u=tt(o,s.shape);let c=u;const h=hn(c,a);let d=s;h!=null&&(d=Et({inputs:{x:s},backend:t,attrs:{perm:h}}),c=dn(c.length,s.shape.length)),Pn("min",c,a);const[f,g]=Xn(d.shape,c),x=Y(g),w=te({inputs:{x:d},backend:t,attrs:{shape:[-1,x]}}),b=Ds(w,w.dtype,"min",t);let $;if(i){const N=Qt(f,u);$=te({inputs:{x:b},backend:t,attrs:{shape:N}})}else $=te({inputs:{x:b},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(b),h!=null&&t.disposeIntermediateTensorInfo(d),$}const mM={kernelName:hd,backendName:"webgl",kernelFunc:pM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gM=hm+`
  return min(a, b);
`,yM=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Os+`
  return result;
`,xM=pt({opSnippet:gM,packedOpSnippet:yM,cpuKernelImpl:rF}),bM={kernelName:dd,backendName:"webgl",kernelFunc:xM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vM{constructor(e,t,r){this.variableNames=["x"],this.outputShape=t.map((h,d)=>h[0]+e[d]+h[1]);const s=e.length,o=De(s),i=t.map(h=>h[0]).join(","),a=t.map((h,d)=>h[0]+e[d]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),c=r==="reflect"?0:1;if(s===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${c};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${c};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${i});
      ${o} end = ${o}(${a});

      void main() {
        ${o} outC = getOutputCoords();
        for (int i = 0; i < ${s}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${c};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};
          }
        }
        ${o} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wM{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((x,w)=>x[0]+e[w]+x[1]);const s=e.length,o=De(s),i=t.map(x=>x[0]).join(","),a=t.map((x,w)=>x[0]+e[w]).join(","),u=Nt("rc",s),c=Nt("source",s),h=`${u[s-1]} < ${this.outputShape[s-1]}`,d=s===1?"source":`vec2(${c.slice(-2).join()})`,f=r==="reflect"?0:1;let g="";if(s===1){const x=`
        ${o} source = rc;
        if (source < start) {
          source = start * 2 - source - ${f};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${f};
        }
        source -= start;
      `;g=`
        ${o} rc = outputLoc;
        ${x}
        result[0] = getChannel(getX(${c.join()}), ${d});
        ${u[s-1]} += 1;
        if(${h}) {
          ${x}
          result[1] = getChannel(getX(${c.join()}), ${d});
        }
      `}else{const x=`
        ${o} source = rc;
        ${o} lt = ${o}(lessThan(source, start));
        ${o} gte = ${o}(greaterThanEqual(source, end));
        ${o} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${f}) +
                gte * ((end - 1) * 2 - source + ${f});
        source -= start;
      `;g=`
        ${o} rc = outputLoc;
        ${x}
        result[0] = getChannel(getX(${c.join()}), ${d});
        ${u[s-1]} += 1;
        if(${h}) {
          ${x}
          result[1] = getChannel(getX(${c.join()}), ${d});
        }
        rc = outputLoc;
        ${u[s-2]} += 1;
        if(${u[s-2]} < ${this.outputShape[s-2]}) {
          ${x}
          result[2] = getChannel(getX(${c.join()}), ${d});
          ${u[s-1]} += 1;
          if(${h}) {
            ${x}
            result[3] = getChannel(getX(${c.join()}), ${d});
          }
        }
      `}this.userCode=`
      const ${o} start = ${o}(${i});
      const ${o} end = ${o}(${a});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${g}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $M=({inputs:n,backend:e,attrs:t})=>{const{x:r}=n,{paddings:s,mode:o}=t,i=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new wM(r.shape,s,o):new vM(r.shape,s,o);return e.runWebGLProgram(i,[r],r.dtype)},SM={kernelName:fd,backendName:"webgl",kernelFunc:$M};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CM=`if (b == 0.0) return NAN;
  return mod(a, b);`,TM=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Os+`
  return result;
`,NM=pt({opSnippet:CM,packedOpSnippet:TM}),EM={kernelName:pd,backendName:"webgl",kernelFunc:NM};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IM{constructor(e,t,r){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,r],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kM=`
if (a == b) {
  return 1.0;
};
return a / b;`,RM=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,Nv=pt({opSnippet:kM,packedOpSnippet:RM,checkOutOfBounds:!0}),_M={kernelName:Nh,backendName:"webgl",kernelFunc:Nv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zg="return a - b;",Ev=pt({opSnippet:zg,packedOpSnippet:zg,supportsComplex:!0,cpuKernelImpl:CF}),AM={kernelName:yf,backendName:"webgl",kernelFunc:Ev};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iv(n){const{inputs:e,backend:t,attrs:r}=n,{logits:s}=e,{dim:o}=r,i=tt([o],s.shape),a=Tv({inputs:{x:s},backend:t,attrs:{reductionIndices:i,keepDims:!1}}),u=Qt(a.shape,i),c=te({inputs:{x:a},backend:t,attrs:{shape:u}}),h=Ev({inputs:{a:s,b:c},backend:t}),d=$v({inputs:{x:h},backend:t}),f=Vu({inputs:{x:d},backend:t,attrs:{axis:i,keepDims:!1}}),g=te({inputs:{x:f},backend:t,attrs:{shape:u}}),x=Nv({inputs:{a:d,b:g},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(g),x}const OM={kernelName:sf,backendName:"webgl",kernelFunc:Iv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DM(n){const{inputs:e,backend:t,attrs:r}=n,{logits:s}=e,{numSamples:o,seed:i,normalized:a}=r,u=a?s:Iv({inputs:{logits:s},backend:t,attrs:{dim:s.shape.length-1}}),c=u.shape[0],h=u.shape[1],d=new IM(c,h,o),f=[[i]],g=t.runWebGLProgram(d,[u],"int32",f);return a||t.disposeIntermediateTensorInfo(u),g}const FM={kernelName:md,backendName:"webgl",kernelFunc:DM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PM=fn+`
  return -x;
`,LM=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function BM(n){const{inputs:e,backend:t}=n,{x:r}=e;if(t.shouldExecuteOnCPU([r])){const o=t.texData.get(r.dataId),[i,a]=oF(o.values,r.shape,r.dtype);return t.makeTensorInfo(a,r.dtype,i)}let s;return W().getBool("WEBGL_PACK_UNARY_OPERATIONS")?s=new Nr(r.shape,LM):s=new Vn(r.shape,PM),t.runWebGLProgram(s,[r],r.dtype)}const MM={kernelName:yd,backendName:"webgl",kernelFunc:BM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VM=Fp;function UM(n){nn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u}=r,c=t.readSync(s.dataId),h=t.readSync(o.dataId),{selectedIndices:d}=VM(c,h,i,a,u);return t.makeTensorInfo([d.length],"int32",new Int32Array(d))}const zM={kernelName:bd,backendName:"webgl",kernelFunc:UM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WM=Pp;function GM(n){nn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u,padToMaxOutputSize:c}=r,h=t.readSync(s.dataId),d=t.readSync(o.dataId),{selectedIndices:f,validOutputs:g}=WM(h,d,i,a,u,c);return[t.makeTensorInfo([f.length],"int32",new Int32Array(f)),t.makeTensorInfo([],"int32",new Int32Array([g]))]}const jM={kernelName:vd,backendName:"webgl",kernelFunc:GM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HM=Lp;function KM(n){nn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:o}=e,{maxOutputSize:i,iouThreshold:a,scoreThreshold:u,softNmsSigma:c}=r,h=t.readSync(s.dataId),d=t.readSync(o.dataId),f=i,g=a,x=u,w=c,{selectedIndices:b,selectedScores:$}=HM(h,d,f,g,x,w);return[t.makeTensorInfo([b.length],"int32",new Int32Array(b)),t.makeTensorInfo([$.length],"float32",new Float32Array($))]}const XM={kernelName:wd,backendName:"webgl",kernelFunc:KM};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qM{constructor(e,t,r,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${s}), float(${r}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YM=n=>{const{inputs:e,backend:t,attrs:r}=n,{indices:s}=e,{dtype:o,depth:i,onValue:a,offValue:u}=r,c=Y(s.shape),h=new qM(c,i,a,u),d=te({inputs:{x:s},backend:t,attrs:{shape:[c]}}),f=t.runWebGLProgram(h,[d],o);t.disposeIntermediateTensorInfo(d);const g=[...s.shape,i],x=te({inputs:{x:f},backend:t,attrs:{shape:g}});return t.disposeIntermediateTensorInfo(f),x},QM={kernelName:Sd,backendName:"webgl",kernelFunc:YM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function du(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="complex64"){const s=ca({inputs:{input:r},backend:t}),o=du({inputs:{x:s},backend:t}),i=Uu({inputs:{input:r},backend:t}),a=du({inputs:{x:i},backend:t}),u=Lr({inputs:{real:o,imag:a},backend:t});return t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),u}else return la({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:t})}const ZM={kernelName:Tf,backendName:"webgl",kernelFunc:du};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kv(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){const s=ca({inputs:{input:r},backend:t}),o=kv({inputs:{x:s},backend:t}),i=Uu({inputs:{input:r},backend:t}),a=du({inputs:{x:i},backend:t}),u=Lr({inputs:{real:o,imag:a},backend:t});return t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),u}else return la({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:t})}const JM={kernelName:$d,backendName:"webgl",kernelFunc:kv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eV(n){const{inputs:e,backend:t,attrs:r}=n,{axis:s}=r;if(e.length===1)return Al({inputs:{input:e[0]},backend:t,attrs:{dim:s}});const o=e[0].shape,i=e[0].dtype;e.forEach(h=>{xt(o,h.shape,"All tensors passed to stack must have matching shapes"),A(i===h.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],u=e.map(h=>{const d=Al({inputs:{input:h},backend:t,attrs:{dim:s}});return a.push(d),d}),c=pv({inputs:u,backend:t,attrs:{axis:s}});return a.forEach(h=>t.disposeIntermediateTensorInfo(h)),c}const tV={kernelName:Cd,backendName:"webgl",kernelFunc:eV};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nV{constructor(e,t,r){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((c,h)=>c[0]+e[h]+c[1]);const s=e.length,o=De(s),i=t.map(c=>c[0]).join(","),a=t.map((c,h)=>c[0]+e[h]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);if(s===1){this.userCode=`
        int start = ${i};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${i});
      ${o} end = ${o}(${a});

      void main() {
        ${o} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${o} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rV{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((w,b)=>w[0]+e[b]+w[1]);const s=e.length,o=De(s),i=t.map(w=>w[0]).join(","),a=t.map((w,b)=>w[0]+e[b]).join(","),u=Nt("rc",s),c=Nt("source",s),h=`${u[s-1]} < ${this.outputShape[s-1]}`,d=s===1?"source":`vec2(${c.slice(-2).join()})`,f=[`${o} rc = outputLoc;`,`${u[s-1]} += 1;
       if(${h}) {
      `,s===1?"":`}
       rc = outputLoc;
       ${u[s-2]} += 1;
       if(${u[s-2]} < ${this.outputShape[s-2]}) {`,s===1?"":`  ${u[s-1]} += 1;
         if(${h}) {`],g=s===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let x="";for(let w=0,b=s===1?2:4;w<b;w++)x+=`
        ${f[w]}
        if (${g}) {
          result[${w}] = float(value);
        } else {
          ${o} source = rc - start;
          result[${w}] = getChannel(getX(${c.join()}), ${d});
        }
      `;x+=s===1?"} ":"}}",this.userCode=`
      const ${o} start = ${o}(${i});
      const ${o} end = ${o}(${a});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${x}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rv=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{paddings:o,constantValue:i}=r;if(Y(s.shape)===0){const c=o.map((h,d)=>h[0]+s.shape[d]+h[1]);return la({backend:t,attrs:{shape:c,value:i,dtype:s.dtype}})}const a=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rV(s.shape,o,i):new nV(s.shape,o,i),u=[[i]];return t.runWebGLProgram(a,[s],s.dtype,u)},sV={kernelName:Td,backendName:"webgl",kernelFunc:Rv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oV=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,iV=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Os+`
  return result;
`,aV=pt({opSnippet:oV,packedOpSnippet:iV}),uV={kernelName:Nd,backendName:"webgl",kernelFunc:aV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cV(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:o,keepDims:i}=r,a=s.shape.length,u=[],c=tt(o,s.shape);let h=c;const d=hn(h,a);let f=s;d!=null&&(f=Et({inputs:{x:s},backend:t,attrs:{perm:d}}),h=dn(h.length,a),u.push(f)),Pn("prod",h,a);let g;if(t.shouldExecuteOnCPU([f])){const x=t.texData.get(f.dataId).values,{outVals:w,outShape:b,outDtype:$}=aF(f.shape,f.dtype,x,h);g=t.makeTensorInfo(b,$,w)}else{const[x,w]=Xn(f.shape,h),b=Y(w),$=te({inputs:{x:f},backend:t,attrs:{shape:[-1,b]}}),N=bu(s.dtype),k=Ds($,N,"prod",t);g=te({inputs:{x:k},backend:t,attrs:{shape:x}}),u.push($),u.push(k)}if(i){u.push(g);const x=Qt(g.shape,c);g=te({inputs:{x:g},backend:t,attrs:{shape:x}})}return u.forEach(x=>t.disposeIntermediateTensorInfo(x)),g}const lV={kernelName:Id,backendName:"webgl",kernelFunc:cV};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hV(n){const{inputs:e,backend:t,attrs:r}=n,{paramsNestedSplits:s,paramsDenseValues:o,indices:i}=e,{outputRaggedRank:a}=r,u=s.map($=>t.readSync($.dataId)),c=s.map($=>$.shape),h=t.readSync(o.dataId),d=t.readSync(i.dataId),[f,g,x]=uF(u,c,h,o.shape,o.dtype,d,i.shape,a),w=f.map($=>t.makeTensorInfo([$.length],"int32",$)),b=t.makeTensorInfo(x,o.dtype,g);return w.concat([b])}const dV={kernelName:kd,backendName:"webgl",kernelFunc:hV};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fV(n){const{inputs:e,backend:t}=n,{starts:r,limits:s,deltas:o}=e,i=t.readSync(r.dataId),a=t.readSync(s.dataId),u=t.readSync(o.dataId),[c,h]=cF(i,r.shape,r.dtype,a,s.shape,u,o.shape),d=t.makeTensorInfo([c.length],"int32",c),f=t.makeTensorInfo([h.length],r.dtype,h);return[d,f]}const pV={kernelName:Rd,backendName:"webgl",kernelFunc:fV};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mV(n){const{inputs:e,backend:t,attrs:r}=n,{shape:s,values:o,defaultValue:i,rowPartitionTensors:a}=e,{rowPartitionTypes:u}=r,c=t.readSync(s.dataId),h=t.readSync(o.dataId),d=t.readSync(i.dataId),f=a.map(b=>t.readSync(b.dataId)),g=a.map(b=>b.shape),[x,w]=lF(c,s.shape,h,o.shape,o.dtype,d,i.shape,f,g,u);return t.makeTensorInfo(x,o.dtype,w)}const gV={kernelName:_d,backendName:"webgl",kernelFunc:mV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _v=n=>{const{backend:e,attrs:t}=n,{start:r,stop:s,step:o,dtype:i}=t,a=hF(r,s,o,i);return e.makeTensorInfo([a.length],i,a)},yV={kernelName:Ad,backendName:"webgl",kernelFunc:_v};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xV="return 1.0 / x;",bV=ke({opSnippet:xV}),vV={kernelName:Dd,backendName:"webgl",kernelFunc:bV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wV=fn+`
  return (x < 0.0) ? 0.0 : x;
`,$V=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,SV=ke({opSnippet:wV,packedOpSnippet:$V}),CV={kernelName:Fd,backendName:"webgl",kernelFunc:SV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TV=fn+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,NV=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,EV=ke({opSnippet:TV,packedOpSnippet:NV}),IV={kernelName:Md,backendName:"webgl",kernelFunc:EV};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kV{constructor(e,t,r,s,o){this.variableNames=["A"],this.outputShape=[];const[i,a,u,c]=e;this.outputShape=[i,t,r,c];const h=[s&&t>1?a-1:a,s&&r>1?u-1:u],d=[s&&t>1?t-1:t,s&&r>1?r-1:r];let f;o?f="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${h[0]/d[0]},
          ${h[1]/d[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RV{constructor(e,t,r,s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,u,c]=e;this.outputShape=[i,t,r,c];const h=[s&&t>1?a-1:a,s&&r>1?u-1:u],d=[s&&t>1?t-1:t,s&&r>1?r-1:r];let f;o?f="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${h[0]/d[0]},
          ${h[1]/d[1]},
          ${h[1]/d[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${r-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _V(n){const{inputs:e,backend:t,attrs:r}=n,{images:s}=e,{alignCorners:o,halfPixelCenters:i,size:a}=r,[u,c]=a,h=W().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new RV(s.shape,u,c,o,i):new kV(s.shape,u,c,o,i);return t.runWebGLProgram(h,[s],"float32")}const AV={kernelName:Bd,backendName:"webgl",kernelFunc:_V};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OV{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,o]=t,[,i,a]=e,u=[r&&i>1?s-1:s,r&&a>1?o-1:o],c=[r&&i>1?i-1:i,r&&a>1?a-1:a],h=u[0]/c[0],d=u[1]/c[1],f=1/h,g=1/d,x=Math.ceil(f)*2+2,w=Math.ceil(g)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${h});
        const float widthScale = float(${d});

        const float invHeightScale = float(${f});
        const float invWidthScale = float(${g});

        const int winHeight = int(${x});
        const int winWidth = int(${w});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DV(n){const{inputs:e,backend:t,attrs:r}=n,{images:s,dy:o}=e,{alignCorners:i}=r,a=new OV(o.shape,s.shape,i);return t.runWebGLProgram(a,[o],o.dtype)}const FV={kernelName:py,backendName:"webgl",kernelFunc:DV};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PV{constructor(e,t,r,s,o){this.variableNames=["A"],this.outputShape=[];const[i,a,u,c]=e;this.outputShape=[i,t,r,c];const h=[s&&t>1?a-1:a,s&&r>1?u-1:u],d=[s&&t>1?t-1:t,s&&r>1?r-1:r],f=s?"0.5":"0.0";let g;o?g="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":g="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${h[0]/d[0]},
          ${h[1]/d[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${g};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${f})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LV{constructor(e,t,r,s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,u,c]=e;this.outputShape=[i,t,r,c];const h=[s&&t>1?a-1:a,s&&r>1?u-1:u],d=[s&&t>1?t-1:t,s&&r>1?r-1:r],f=s?"0.5":"0.0";let g;o?g="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":g="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${h[0]/d[0]},
          ${h[1]/d[1]},
          ${h[1]/d[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${g};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${f})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${r-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BV(n){const{inputs:e,backend:t,attrs:r}=n,{images:s}=e,{alignCorners:o,halfPixelCenters:i,size:a}=r,[u,c]=a,h=W().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new LV(s.shape,u,c,o,i):new PV(s.shape,u,c,o,i);return t.runWebGLProgram(h,[s],s.dtype)}const MV={kernelName:Ld,backendName:"webgl",kernelFunc:BV};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VV{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,o]=t,[,i,a]=e,u=[r&&i>1?s-1:s,r&&a>1?o-1:o],c=[r&&i>1?i-1:i,r&&a>1?a-1:a],h=u[0]/c[0],d=u[1]/c[1],f=1/h,g=1/d,x=Math.ceil(f)*2+2,w=Math.ceil(g)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${h});
        const float widthScale = float(${d});

        const float invHeightScale = float(${f});
        const float invWidthScale = float(${g});

        const int winHeight = int(${x});
        const int winWidth = int(${w});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${u[0]}) *
                (float(dyR) / float(${c[0]}));

            float sourceFracCol =
                float(${u[1]}) *
                  (float(dyC) / float(${c[1]}));

            int sourceNearestRow = int(min(
                float(int(${s}) - 1),
                ${r} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${o}) - 1),
                ${r} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UV(n){const{inputs:e,backend:t,attrs:r}=n,{images:s,dy:o}=e,{alignCorners:i}=r,a=new VV(o.shape,s.shape,i);return t.runWebGLProgram(a,[o],o.dtype)}const zV={kernelName:fy,backendName:"webgl",kernelFunc:UV};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WV{constructor(e,t){this.variableNames=["x"];const r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);if(this.outputShape=e,r===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const s=a=>t.indexOf(a)!==-1&&e[a]!==1?`${e[a]} - coords[${a}] - 1`:`coords[${a}]`,o=e.map((a,u)=>s(u)).join(","),i=De(r);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GV{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);this.outputShape=e;const s=Nt("rc",r),o=`${s[r-1]} + 1 < ${this.outputShape[r-1]}`,i=`${s[r-2]} + 1 < ${this.outputShape[r-2]}`,a=De(r);r===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${o}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${u(s.slice())};
          if(${o}){
            result.g = ${c(s.slice())};
          }
          if(${i}) {
            result.b = ${h(s.slice())};
            if(${o}) {
              result.a = ${d(s.slice())};
            }
          }
          setOutput(result);
        }
    `;function u(x){return f(x)}function c(x){return x[r-1]="("+x[r-1]+" + 1)",f(x)}function h(x){return x[r-2]="("+x[r-2]+" + 1)",f(x)}function d(x){return x[r-1]="("+x[r-1]+" + 1)",x[r-2]="("+x[r-2]+" + 1)",f(x)}function f(x){const w=e.map((N,k)=>g(k,x)),b=w.join(","),$=w.slice(-2).join(",");return`getChannel(getX(${b}), vec2(${$}))`}function g(x,w){return t.indexOf(x)!==-1&&e[x]!==1?`${e[x]} - ${w[x]} - 1`:`${w[x]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jV(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{dims:o}=r,i=s.shape.length,a=tt(o,s.shape);if(i===0)return Ut({inputs:{x:s},backend:t});const u=W().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new GV(s.shape,a):new WV(s.shape,a);return t.runWebGLProgram(u,[s],s.dtype)}const HV={kernelName:Vd,backendName:"webgl",kernelFunc:jV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KV{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const r=e[1],s=e[2];this.outputShape=e;let o="";typeof t=="number"?o=`float outputValue = ${t.toFixed(2)};`:o=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${o}
          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${r}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XV={kernelName:Ef,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:r}=n,{radians:s,fillValue:o,center:i}=e,a=t,u=new KV(r.shape,o),[c,h]=B1(i,r.shape[1],r.shape[2]),d=[[c,h,Math.sin(s),Math.cos(s)]];return a.runWebGLProgram(u,[r],r.dtype,d)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qV=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,YV=ke({opSnippet:qV}),QV={kernelName:Ud,backendName:"webgl",kernelFunc:YV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZV="return inversesqrt(x);",JV=ke({opSnippet:ZV,cpuKernelImpl:dF}),eU={kernelName:zd,backendName:"webgl",kernelFunc:JV};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pm{constructor(e,t,r,s,o,i,a=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const c=De(o.length),h=De(i.length);let d="";r===1?d="i":r===2&&(d="i, j");const f=`getIndices(${d})`;let g="";s===1?g="i":s===2&&(g="i, coords[1]");const x=`getUpdates(${g})`;let w="";u&&(w="coords[0], coords[1]");const b=`getDefaultValue(${w})`,$=t>1?"strides[j]":"strides";this.userCode=`
        ${c} strides = ${c}(${o});

        void main() {
          ${h} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${f});
              flattenedIndex += index * ${$};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${x};
              found = true;
            }
          }
          setOutput(mix(${b}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tU{constructor(e,t,r,s,o,i,a=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;const c=De(o.length),h=De(i.length);let d="";r===1?d="i":r===2&&(d="i, j");const f=`getIndices(${d})`;let g="";s===1?g="i":s===2&&(g="i, coords[1]");const x=`getUpdates(${g})`;let w="";u&&(w="coords[0], coords[1]");const b=`getDefaultValue(${w})`,$=t>1?"strides[j]":"strides",N=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${c} strides = ${c}(${o});

        void main() {
          ${h} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${f});
              flattenedIndex += index.xz * ${$};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${N};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${x};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${b}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nU(n){const{inputs:e,backend:t,attrs:r}=n,{indices:s,updates:o}=e,{shape:i}=r,{sliceRank:a,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=sa(o,s,i),f=[d/c,c];if(d===0)return t.makeTensorInfo(i,s.dtype);const g=te({inputs:{x:s},backend:t,attrs:{shape:[u,a]}}),x=te({inputs:{x:o},backend:t,attrs:{shape:[u,c]}}),w=t.makeTensorInfo([],"float32",new Float32Array([0]));let b;W().getBool("WEBGL_PACK")?b=new tU(u,a,g.shape.length,x.shape.length,h,f):b=new pm(u,a,g.shape.length,x.shape.length,h,f);const $=t.runWebGLProgram(b,[x,g,w],x.dtype),N=te({inputs:{x:$},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo($),t.disposeIntermediateTensorInfo(w),N}const rU={kernelName:Wd,backendName:"webgl",kernelFunc:nU};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sU{constructor(e,t,r,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,r];const o="while (left < right) {",i=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=W().getNumber("WEBGL_VERSION")===2?o:i,u=s==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${u} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oU(n){const{inputs:e,backend:t,attrs:r}=n,{sortedSequence:s,values:o}=e,{side:i}=r,a=new sU(s.shape[0],s.shape[1],o.shape[1],i),u=[[s.shape[1]]];return t.runWebGLProgram(a,[s,o],"int32",u)}const iU={kernelName:jd,backendName:"webgl",kernelFunc:oU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aU{constructor(e,t,r){this.variableNames=["c","a","b"],this.outputShape=t;let s,o;if(r>4)throw Error(`Where for rank ${r} is not yet supported`);if(r===1)o="resRC",s="resRC";else{const a=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],c=[];for(let h=0;h<t.length;h++)c.push(`${a[h]}`),h<e&&u.push(`${a[h]}`);s=u.join(),o=c.join()}const i=De(r);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${s});
        if (cVal >= 1.0) {
          setOutput(getA(${o}));
        } else {
          setOutput(getB(${o}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uU(n){const{inputs:e,backend:t}=n,{condition:r,t:s,e:o}=e,i=new aU(r.shape.length,s.shape,s.shape.length);return t.runWebGLProgram(i,[r,s,o],An(s.dtype,o.dtype))}const cU={kernelName:Hd,backendName:"webgl",kernelFunc:uU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lU=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${U1};
  float scale = ${z1};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,hU=ke({opSnippet:lU}),dU={kernelName:Kd,backendName:"webgl",kernelFunc:hU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fU=vo+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,pU=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,mU=ke({opSnippet:fU,packedOpSnippet:pU,cpuKernelImpl:pF}),gU={kernelName:Zd,backendName:"webgl",kernelFunc:mU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yU=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,xU=ke({opSnippet:yU}),bU={kernelName:Qd,backendName:"webgl",kernelFunc:xU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vU=vo+`
  return sin(x);
`,wU=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${Os}
  return result;
`,$U=ke({opSnippet:vU,packedOpSnippet:wU}),SU={kernelName:qd,backendName:"webgl",kernelFunc:$U};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CU=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,TU=ke({opSnippet:CU}),NU={kernelName:Yd,backendName:"webgl",kernelFunc:TU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EU=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,IU=ke({opSnippet:EU}),kU={kernelName:Jd,backendName:"webgl",kernelFunc:IU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RU=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockShape:o,paddings:i}=r;A(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const a=o.reduce(($,N)=>$*N),u=[[0,0]];u.push(...i);for(let $=1+o.length;$<s.shape.length;++$)u.push([0,0]);const c=[],h=Rv({inputs:{x:s},backend:t,attrs:{paddings:u,constantValue:0}}),d=Zp(h.shape,o,a,!1),f=Jp(d.length,o.length,!1),g=em(h.shape,o,a,!1),x=te({inputs:{x:h},backend:t,attrs:{shape:d}}),w=Et({inputs:{x},backend:t,attrs:{perm:f}}),b=te({inputs:{x:w},backend:t,attrs:{shape:g}});return c.push(h),c.push(x),c.push(w),c.forEach($=>t.disposeIntermediateTensorInfo($)),b},_U={kernelName:nf,backendName:"webgl",kernelFunc:RU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AU(n){const{inputs:e,backend:t}=n,{indices:r,values:s,denseShape:o,defaultValue:i}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${o.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${r.shape}`);if(s.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${s.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const a=t.readSync(r.dataId),u=t.readSync(s.dataId),c=t.readSync(o.dataId),h=t.readSync(i.dataId)[0],[d,f,g,x,w]=gF(a,r.shape,r.dtype,u,s.dtype,c,h);return[t.makeTensorInfo(f,r.dtype,d),t.makeTensorInfo([f[0]],s.dtype,g),t.makeTensorInfo([x.length],"bool",new Uint8Array(x.map(b=>Number(b)))),t.makeTensorInfo([w.length],r.dtype,new Int32Array(w))]}const OU={kernelName:of,backendName:"webgl",kernelFunc:AU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DU(n){const{inputs:e,backend:t}=n,{inputIndices:r,inputShape:s,newShape:o}=e;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(s.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const i=Array.from(t.readSync(s.dataId)),a=t.readSync(r.dataId),u=Array.from(t.readSync(o.dataId)),[c,h,d]=yF(a,r.shape,r.dtype,i,u);return[t.makeTensorInfo(h,r.dtype,c),t.makeTensorInfo([d.length],o.dtype,new Int32Array(d))]}const FU={kernelName:af,backendName:"webgl",kernelFunc:DU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PU(n){const{inputs:e,backend:t}=n,{data:r,indices:s,segmentIds:o}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${s.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${o.shape}`);const i=t.readSync(r.dataId),a=t.readSync(s.dataId),u=t.readSync(o.dataId),[c,h]=tv(i,r.shape,r.dtype,a,u,!0);return t.makeTensorInfo(h,r.dtype,c)}const LU={kernelName:uf,backendName:"webgl",kernelFunc:PU};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BU(n){const{inputs:e,backend:t}=n,{data:r,indices:s,segmentIds:o}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${s.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${o.shape}`);const i=t.readSync(r.dataId),a=t.readSync(s.dataId),u=t.readSync(o.dataId),[c,h]=tv(i,r.shape,r.dtype,a,u);return t.makeTensorInfo(h,r.dtype,c)}const MU={kernelName:cf,backendName:"webgl",kernelFunc:BU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VU(n){const{inputs:e,backend:t,attrs:r}=n,{sparseIndices:s,sparseValues:o,defaultValue:i}=e,{outputShape:a}=r,{sliceRank:u,numUpdates:c,sliceSize:h,strides:d,outputSize:f}=sa(o,s,a),g=!1;if(o.dtype==="string"){const $=t.bufferSync(s),N=t.bufferSync(o),k=ms(t.readSync(i.dataId)[0]),I=fF($,N,a,f,h,c,u,d,k,g);return t.makeTensorInfo(a,I.dtype,I.values)}const x=new pm(c,u,s.shape.length,o.shape.length,d,[f,1],g),w=t.runWebGLProgram(x,[o,s,i],o.dtype),b=te({inputs:{x:w},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(w),b}const UU={kernelName:lf,backendName:"webgl",kernelFunc:VU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zU(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{numOrSizeSplits:o,axis:i}=r,a=tt(i,s.shape)[0],u=eb(s,o,a),c=s.shape.length,h=new Array(c).fill(0),d=s.shape.slice();return u.map(f=>{const g=[...d];g[a]=f;const x=wo({inputs:{x:s},backend:t,attrs:{begin:h,size:g}});return h[a]+=f,x})}const WU={kernelName:rf,backendName:"webgl",kernelFunc:zU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wg="return sqrt(x);",GU=ke({opSnippet:Wg,packedOpSnippet:Wg,cpuKernelImpl:xF}),jU={kernelName:ef,backendName:"webgl",kernelFunc:GU};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HU="return x * x;",KU=ke({opSnippet:HU}),XU={kernelName:my,backendName:"webgl",kernelFunc:KU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gg="return (a - b) * (a - b);",qU=pt({opSnippet:Gg,packedOpSnippet:Gg}),YU={kernelName:hf,backendName:"webgl",kernelFunc:qU};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QU(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");const o=t.readSync(s.dataId),i=ro(o),a=bF(i,"string",r);return t.makeTensorInfo(s.shape,"string",a)}const ZU={kernelName:df,backendName:"webgl",kernelFunc:QU};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JU({inputs:n,attrs:e,backend:t}){const{x:r}=n,s=fn+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,o=new Vn(r.shape,s);return t.runWebGLProgram(o,[r],r.dtype)}const ez={kernelName:Nf,backendName:"webgl",kernelFunc:JU};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tz{constructor(e,t,r){this.variableNames=["x"],this.outputShape=r;const s=r.length,o=De(r.length),i=De(r.length);let a="";if(s===1)a="coords * strides + begin";else{let u=0;a=r.map((c,h)=>(u++,r.length===1?`coords * strides[${h}] + begin[${h}]`:`coords[${u-1}] * strides[${h}] + begin[${h}]`)).join(",")}this.userCode=`
      ${o} begin = ${o}(${e});
      ${o} strides = ${o}(${t});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nz(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{begin:o,end:i,strides:a,beginMask:u,endMask:c,ellipsisMask:h,newAxisMask:d,shrinkAxisMask:f}=r,{finalShapeSparse:g,finalShape:x,isIdentity:w,sliceDim0:b,isSimpleSlice:$,begin:N,end:k,strides:I}=k1(s.shape,o,i,a,u,c,h,d,f);let O;if(w)O=te({inputs:{x:s},backend:t,attrs:{shape:x}});else if(b||$){A(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const M=b1(N,k,I),B=wo({inputs:{x:s},backend:t,attrs:{begin:N,size:M}});O=te({inputs:{x:B},backend:t,attrs:{shape:x}}),t.disposeIntermediateTensorInfo(B)}else if(t.shouldExecuteOnCPU([s])){const B=t.readSync(s.dataId),z=Ge(s.shape,s.dtype,B),G=vF(g,z,I,N);O=t.makeTensorInfo(x,s.dtype,G.values)}else{const B=new tz(N,I,g);O=t.runWebGLProgram(B,[s],s.dtype)}const F=te({inputs:{x:O},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(O),F}const rz={kernelName:ff,backendName:"webgl",kernelFunc:nz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sz(n){const{inputs:e,backend:t,attrs:r}=n,{separator:s,nGramWidths:o,leftPad:i,rightPad:a,padWidth:u,preserveShortSequences:c}=r,{data:h,dataSplits:d}=e,f=t.readSync(h.dataId),g=t.readSync(d.dataId),[x,w]=wF(f,g,s,o,i,a,u,c);return[t.makeTensorInfo([x.length],"string",x),t.makeTensorInfo(d.shape,"int32",w)]}const oz={kernelName:pf,backendName:"webgl",kernelFunc:sz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iz(n){const{inputs:e,backend:t,attrs:r}=n,{skipEmpty:s}=r,{input:o,delimiter:i}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const a=t.readSync(o.dataId),u=t.readSync(i.dataId)[0],[c,h,d]=$F(a,u,s),f=h.length;return[t.makeTensorInfo([f,2],"int32",c),t.makeTensorInfo([f],"string",h),t.makeTensorInfo([2],"int32",new Int32Array(d))]}const az={kernelName:mf,backendName:"webgl",kernelFunc:iz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uz(n){const{inputs:e,backend:t,attrs:r}=n,{numBuckets:s}=r,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=t.readSync(o.dataId),a=SF(i,s);return t.makeTensorInfo(o.shape,"int32",a)}const cz={kernelName:gf,backendName:"webgl",kernelFunc:uz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lz="return tan(x);",hz=ke({opSnippet:lz}),dz={kernelName:xf,backendName:"webgl",kernelFunc:hz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fz=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,pz=ke({opSnippet:fz}),mz={kernelName:bf,backendName:"webgl",kernelFunc:pz};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gz(n){const{inputs:e,backend:t,attrs:r}=n,{tensor:s,indices:o,updates:i}=e,{sliceRank:a,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=sa(i,o,s.shape),f=[d/c,c];if(d===0)return t.makeTensorInfo(s.shape,o.dtype);const g=te({inputs:{x:o},backend:t,attrs:{shape:[u,a]}}),x=te({inputs:{x:i},backend:t,attrs:{shape:[u,c]}}),w=te({inputs:{x:s},backend:t,attrs:{shape:f}}),b=new pm(u,a,g.shape.length,x.shape.length,h,f,!1,!0),$=t.runWebGLProgram(b,[x,g,w],w.dtype),N=te({inputs:{x:$},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo($),N}const yz={kernelName:Gd,backendName:"webgl",kernelFunc:gz};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xz{constructor(e,t){this.variableNames=["A"];const r=new Array(e.length);for(let i=0;i<r.length;i++)r[i]=e[i]*t[i];this.outputShape=r,this.rank=r.length;const s=De(this.rank),o=bz(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}}function bz(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<n.length;s++)r.push(`imod(${t[s]}, ${n[s]})`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Av(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{reps:o}=r;if(s.dtype==="string"||s.shape.length>5){const u=t.readSync(s.dataId),c=s.dtype==="string"?u.map(f=>ms(f)):u,h=Ge(s.shape,s.dtype,c),d=TF(h,o);return t.makeTensorInfo(d.shape,d.dtype,d.values)}const i=new xz(s.shape,o);return t.runWebGLProgram(i,[s],s.dtype)}const vz={kernelName:xu,backendName:"webgl",kernelFunc:Av};class wz{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class $z{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rs(n,e){e!==null&&n.disposeIntermediateTensorInfo(e)}function jg(n){let e=1;for(;e<n;)e*=2;return e}function Sz(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{k:o,sorted:i}=r,a=W().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=W().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=s.shape,h=c[c.length-1];if(t.shouldExecuteOnCPU([s])||h<a||o>u){const G=t.readSync(s.dataId),[U,Q]=NF(G,c,s.dtype,o,i);return[t.makeTensorInfo(U.shape,U.dtype,U.values),t.makeTensorInfo(Q.shape,Q.dtype,Q.values)]}if(o===0)return c[c.length-1]=0,[t.makeTensorInfo(c,s.dtype,[]),t.makeTensorInfo(c,"int32",[])];if(h===1)return[s,la({attrs:{shape:c,dtype:"int32",value:0},backend:t})];const d=t.texData.get(s.dataId),f=d!==null&&d.isPacked,g=f?t.unpackTensor(s):s,w=Y(c)/h,b=te({inputs:{x:g},attrs:{shape:[w,h]},backend:t});f&&rs(t,g);const $=jg(o),N=jg(h);let k=null;const I=()=>k===null?[b,b]:[b,k],O=(G,U,Q)=>{const J=I(),se=new wz(Q),le=[[h],[k===null?1:0],[Number.NEGATIVE_INFINITY],[G],[U]],ge=k;k=t.runWebGLProgram(se,J,"int32",le),rs(t,ge)};for(let G=1;G<$;G*=2){const U=G*2;for(let Q=G;Q>=1;Q/=2)O(U,Q,[w,N])}for(let G=N;G>$;G/=2){const U=I(),Q=new $z([w,G/2]),se=[[h],[k===null?1:0],[$]],oe=k;k=t.runWebGLProgram(Q,U,"int32",se),rs(t,oe);const le=$/2,ge=le*2;for(let $e=le;$e>=1;$e/=2)O(ge,$e,k.shape)}let F=k;k=wo({inputs:{x:k},backend:t,attrs:{begin:0,size:[w,o]}}),rs(t,F);let M=Cv({inputs:{x:b,indices:k},backend:t,attrs:{axis:1,batchDims:1}});rs(t,b);const B=c.slice(0,-1);B.push(o),F=k,k=te({inputs:{x:k},attrs:{shape:B},backend:t}),rs(t,F);const z=M;return M=te({inputs:{x:M},attrs:{shape:B},backend:t}),rs(t,z),[M,k]}const Cz={kernelName:vf,backendName:"webgl",kernelFunc:Sz};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tz{constructor(e,t,r,s,o,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const a=r==="nearest"?1:2;let u;switch(s){case"constant":u=1;break;case"reflect":u=2;break;case"wrap":u=3;break;case"nearest":u=4;break;default:u=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${u} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${o});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${o});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nz(n){const{inputs:e,backend:t,attrs:r}=n,{image:s,transforms:o}=e,{interpolation:i,fillMode:a,fillValue:u,outputShape:c}=r,[h,d,f,g]=s.shape,[x,w]=c??[d,f],b=[h,x,w,g],$=new Tz(d,f,i,a,u,b);return t.runWebGLProgram($,[s,o],"float32")}const Ez={kernelName:wf,backendName:"webgl",kernelFunc:Nz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iz(n){const{inputs:e,attrs:t,backend:r}=n,{axis:s}=t,{x:o}=e;aa(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(o.dataId),{outputValues:a,outputShape:u,indices:c}=EF(i,s,o.shape,o.dtype);return[r.makeTensorInfo(u,o.dtype,a),r.makeTensorInfo([c.length],"int32",c)]}const kz={kernelName:$f,backendName:"webgl",kernelFunc:Iz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rz(n){const{inputs:e,backend:t,attrs:r}=n,{value:s}=e;let{axis:o}=r;o<0&&(o+=s.shape.length);const i=s,a=i.shape.length,u=s.shape[o],c=new Array(a-1);let h=0;for(let w=0;w<a;w++)w!==o&&(c[h++]=i.shape[w]);const d=[],f=new Array(a).fill(0),g=i.shape.slice();g[o]=1;const x=new Array(u);for(let w=0;w<x.length;w++){f[o]=w;const b=wo({inputs:{x:i},backend:t,attrs:{begin:f,size:g}}),$=te({inputs:{x:b},backend:t,attrs:{shape:c}});x[w]=$,d.push(b)}return d.forEach(w=>t.disposeIntermediateTensorInfo(w)),x}const _z={kernelName:Sf,backendName:"webgl",kernelFunc:Rz};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Az{constructor(e,t){this.variableNames=["x","segmentIds"];const r=e.windowSize,s=e.batchSize,o=e.inSize,i=e.numSegments,a=i*Math.ceil(o/r);this.outputShape=[s,a];const u="0.0",c="sumValue",h=Math.floor(r/4)*4,d=r%4,f=`
        sumValue += dot(values, segFilter);
    `;let g="";o%r>0&&(g=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `);let x="";o%r>0&&(x=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${u};

      float getValue(int batch, int inIdx) {
        ${g}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${x}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${r}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${h}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${f}
        }

        int inIdx = inOffset + ${h};
        if (${d===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${f}
        } else if (${d===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${f}
        } else if (${d===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${f}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oz(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,segmentIds:o}=e,{numSegments:i}=r,a=s.shape.length,u=[];let c=0;const h=hn([c],a);let d=s;h!=null&&(d=Et({inputs:{x:s},backend:t,attrs:{perm:h}}),u.push(d),c=dn(1,a)[0]);const f=fb(d.shape,c,i),g=Y([d.shape[c]]),x=te({inputs:{x:d},backend:t,attrs:{shape:[-1,g]}});u.push(x);const w=bu(s.dtype),b=(I,O,F,M,B)=>{const z=I.shape[0],G=I.shape[1],U=db(G,B),Q={windowSize:U,inSize:G,batchSize:z,numSegments:B},J=new Az(Q,O),se=t.compileAndRun(J,[I,F],M);if(u.push(se),se.shape[1]===B)return se;const oe=_v({backend:t,attrs:{start:0,stop:B,step:1,dtype:"float32"}}),le=Av({inputs:{x:oe},backend:t,attrs:{reps:[G/U]}});return u.push(oe),u.push(le),b(se,O,le,M,B)},$=b(x,"unsortedSegmentSum",o,w,i),N=te({inputs:{x:$},backend:t,attrs:{shape:f}});let k=N;if(h!=null){u.push(N);const I=Yf(h);k=Et({inputs:{x:k},backend:t,attrs:{perm:I}})}return u.forEach(I=>t.disposeIntermediateTensorInfo(I)),k}const Dz={kernelName:Cf,backendName:"webgl",kernelFunc:Oz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fz=[xP,vP,SP,NP,IP,_P,OP,FP,MP,UP,GP,KP,YP,e3,r3,o3,a3,h3,f3,m3,b3,N3,I3,A3,D3,V3,z3,H3,tP,q3,eL,sL,lL,fL,mL,yL,bL,SL,NL,kL,_L,OL,FL,BL,VL,GL,HL,qL,ZL,eB,sB,uB,dB,mB,xB,bB,wB,SB,TB,EB,kB,OB,PB,MB,UB,GB,KB,QB,t4,eP,r4,Z3,i4,c4,d4,rP,g4,v4,$4,N4,k4,O4,P4,V4,G4,K4,q4,J4,tM,rM,aM,cM,hM,fM,mM,bM,SM,EM,FM,iP,MM,zM,jM,XM,P3,QM,JM,tV,sV,uV,oP,lV,dV,pV,gV,yV,L3,_M,vV,CV,IV,uP,AV,FV,MV,zV,HV,XV,QV,eU,rU,iU,cU,dU,gU,bU,SU,NU,C3,OM,kU,_U,OU,FU,LU,MU,UU,WU,jU,XU,YU,ZU,ez,rz,oz,az,cz,AM,mP,dz,mz,yz,vz,Cz,Ez,gP,kz,_z,Dz,ZM];for(const n of Fz)If(n);const io={x:0,y:0},Pz=2,Lz={Left:[],Right:[]},Ov=new Image,Dv=new Image;Ov.src="https://io.zongzechen.com/undnet/files/glove_left.png";Dv.src="https://io.zongzechen.com/undnet/files/glove_right.png";const Fv=[{direction:"up",src:"",target:void 0,scroll:()=>{window.scrollBy({top:-50})}},{direction:"down",src:"",target:void 0,scroll:()=>{window.scrollBy({top:50})}}],Pv=n=>{const e=n.getBoundingClientRect();return{target:n,moveX:0,moveY:0,increment:.02,progress:0,opacity:1,scale:1,xLeft:e.left,xRight:e.left+e.width,yTop:e.top,yBottom:e.top+e.height}},Lv=()=>{const n=document.body.querySelectorAll("*"),e=Array.from(n);let t=[];for(let r=e.length-1;r>=0;r--){const s=e[r],o=s.querySelectorAll(":scope > *");Array.from(o).length===0&&t.push(Pv(s))}return t};let Bv=Lv(),qs=[];const Bz=async()=>{const n=Mz(),e=await Vz();e.addEventListener("loadeddata",async()=>{const t=await Uz(),r=await zz(),s=n[0].getBoundingClientRect();io.x=s.left,io.y=s.top,Mv(t,e,n[0]),Vv(r,e,n[1])})},Mz=()=>{let n=[];for(let e=0;e<2;e++){const t=document.createElement("canvas");t.id="body-canvas",t.style.position="fixed",t.style.bottom="0px",t.style.scale=`${Pz}`,t.style.transform="translateY(-110px)",t.style.left=`${window.innerWidth/2-640/2}px`,t.style.zIndex="999",t.width=640,t.height=480,t.style.pointerEvents="none",document.body.appendChild(t),n.push(t)}return Fv.forEach(e=>{const t=document.createElement("div");t.innerHTML=e.direction,t.style.width="200px",t.style.height="60px",t.style.display="flex",t.style.alignItems="center",t.style.justifyContent="center",t.style.position="fixed",t.style.left=`${window.innerWidth/2-100}px`,t.style.zIndex="1000",t.style.backgroundColor="#c9c9c9",t.style.border="1px solid black",e.direction==="up"?t.style.top="0px":e.direction==="down"&&(t.style.bottom="0px"),t.id=`body-${e.direction}-arrow`,e.target=t,document.body.appendChild(t)}),n},Vz=async()=>{const n=await navigator.mediaDevices.getUserMedia({video:!0}),e=document.createElement("video");return e.srcObject=n,e.play(),e.width=640,e.height=480,e},Uz=async()=>{const n=zi.MediaPipeSelfieSegmentation,e={runtime:"tfjs",modelUrl:chrome.runtime.getURL("/body-seg-model/model.json")};return await t_(n,e)},zz=async()=>{const n=au.MediaPipeHands,e={runtime:"tfjs",modelType:"lite",detectorModelUrl:chrome.runtime.getURL("/hand-detector-model/model.json"),landmarkModelUrl:chrome.runtime.getURL("/hand-landmark-model/model.json")};return await U_(n,e)},Mv=async(n,e,t)=>{const r={flipHorizontal:!1},s=await n.segmentPeople(e,r),a=await d_(s,{r:0,g:0,b:0,a:0},{r:255,g:255,b:255,a:255});await f_(t,e,a,1,3);const h=t.getContext("2d");if(!h)return;const d=h.getImageData(0,0,t.width,t.height),f=d.data;for(let g=0;g<f.length;g+=4){const x=f[g],w=f[g+1],b=f[g+2],$=f[g+3];x===255&&w===255&&b===255&&$>0&&(f[g+3]=0)}h.clearRect(0,0,t.width,t.height),h.putImageData(d,0,0),h.clearRect(0,0,t.width*.02,t.height),h.clearRect(t.width*.98,0,t.width*.02,t.height),h.clearRect(0,0,t.width,t.height*.02),h.clearRect(0,t.height*.98,t.width,t.height*.02),window.requestAnimationFrame(()=>{Mv(n,e,t)})},Vv=async(n,e,t)=>{const r={flipHorizontal:!0},s=await n.estimateHands(e,r),o=t.getContext("2d");o&&(o.clearRect(0,0,t.width,t.height),s.forEach(i=>{const a=i.keypoints[0],u=i.keypoints[9];o.lineWidth=1,o.strokeStyle="red";const h=Math.sqrt((a.x-u.x)**2+(a.y-u.y)**2);Wz(o,u.x,u.y,h);const d=i.handedness=="Left"?Ov:Dv;o.translate(u.x,u.y);const f=Gz({x:u.x-a.x,y:u.y-a.y},{x:0,y:1});o.rotate(f),o.drawImage(d,-h,-h*.7,h*2,h*2),o.rotate(-f),o.translate(-u.x,-u.y);let g=Lz[i.handedness];g.push(u),g.length>20&&g.slice(0,1);const w={x:g[g.length-1].x-g[0].x,y:g[g.length-1].y-g[0].y};let b=!1;if(Fv.forEach(I=>{var B;const O=(B=I.target)==null?void 0:B.getBoundingClientRect();if(!O)return;const F=u.x*2+io.x,M=u.y*2+io.y;F>O.left-h&&F<O.left+O.width+h&&M>O.top-h&&M<O.top+O.height+h&&(I.scroll(),b=!0)}),b)return;const $=Uv(u.x,u.y,h,Bv);if(!$||qs.find(I=>I.target===$.target)||$.target==document.body||$.target.id==="body-up-arrow"||$.target.id==="body-down-arrow"||$.target.id==="body-instruction")return;const N=Array.from($.target.childNodes);let k=!1;N.forEach(I=>{qs.find(O=>O.target===I)&&(k=!0)}),!k&&($.moveX=w.x*10,$.moveY=w.y*10,qs.push($))}),window.requestAnimationFrame(()=>{Vv(n,e,t)}))},Uv=(n,e,t,r)=>{const s=n*2+io.x+window.scrollX,o=e*2+io.y+document.body.scrollTop,i=r.find(u=>{const{xLeft:c,xRight:h,yTop:d,yBottom:f,target:g}=u;return s>c-t&&s<h+t&&o>d-t&&o<f+t&&g.id!=="body-canvas"});if(i)return i;const a=r.map(u=>{const c=u.target.parentElement;return c?Pv(c):null}).filter((u,c,h)=>h.indexOf(u)===c).filter(u=>u!==null);return a.length===0?null:Uv(n,e,t,a)};Bz();const zv=()=>{for(let n=qs.length-1;n>=0;n--){const e=qs[n],{target:t,moveX:r,moveY:s,increment:o,progress:i,opacity:a,scale:u}=e;if(e.progress=i+o,e.opacity=a-o,e.scale=u-o,t.style.transform=`translateX(${r*i}px) translateY(${s*i}px)`,t.style.opacity=`${a}`,t.style.scale=`${u}`,e.progress>=1){qs.splice(n,1);const c=t.parentNode;if(!c)break;c.removeChild(t),Bv=Lv()}}window.requestAnimationFrame(zv)};zv();const Wz=(n,e,t,r)=>{n.beginPath(),n.arc(e,t,r,0,2*Math.PI),n.stroke()},Gz=(n,e)=>{const t=n.x*e.y-n.y*e.x,r=Math.sqrt(n.x**2+n.y**2),s=Math.sqrt(e.x**2+e.y**2),o=t/(r*s),i=Math.max(-1,Math.min(1,o));let a=Math.asin(i);return n.y>0&&(n.x<0?a=-Math.PI-a:a=Math.PI-a),a};
